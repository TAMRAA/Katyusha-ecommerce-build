{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/sanity/lib/sales/couponCodes.ts"],"sourcesContent":["export const COUPON_CODES ={\n  BFRIDAY: \"BFRIDAY\",\n  XMAS2021: \"XMAS2021\",\n  NY2022: \"NY2022\",\n} as const;\n\nexport type CouponCode = keyof typeof COUPON_CODES;"],"names":[],"mappings":";;;;AAAO,MAAM,eAAc;IACzB,SAAS;IACT,UAAU;IACV,QAAQ;AACV","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/sanity/lib/sales/getActiveSaleByCouponCode.ts"],"sourcesContent":["import { defineQuery } from \"next-sanity\";\nimport { CouponCode } from \"./couponCodes\";\nimport { sanityFetch } from \"../live\";\n\nexport const getActiveSaleByCouponCode = async (couponCode: CouponCode) => {\n  const ACTIVE_SALE_BY_COUPON_QUERY = defineQuery(`\n    *[_type == \"sale\" && isActive == true && couponCode == $couponCode]\n    | order(validFrom desc) [0]\n  `);\n\n  try {\n    const activeSale = await sanityFetch({\n      query: ACTIVE_SALE_BY_COUPON_QUERY,\n      params: {\n        couponCode,\n      },\n    });\n    return activeSale ? activeSale.data : null;\n  } catch (error) {\n    console.error(\"Error fetching active sale by coupon code:\", error);\n    return null;\n  }\n};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;AAEO,MAAM,4BAA4B,OAAO;IAC9C,MAAM,8BAA8B,IAAA,kJAAW,EAAC,CAAC;;;EAGjD,CAAC;IAED,IAAI;QACF,MAAM,aAAa,MAAM,IAAA,oIAAW,EAAC;YACnC,OAAO;YACP,QAAQ;gBACN;YACF;QACF;QACA,OAAO,aAAa,WAAW,IAAI,GAAG;IACxC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8CAA8C;QAC5D,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/components/BlackFridayBanner.tsx"],"sourcesContent":["import { COUPON_CODES } from \"@/sanity/lib/sales/couponCodes\";\nimport { getActiveSaleByCouponCode } from \"@/sanity/lib/sales/getActiveSaleByCouponCode\";\n\nasync function BlackFridayBanner() {\n  const sale = await getActiveSaleByCouponCode(COUPON_CODES.BFRIDAY);\n\n  if (!sale?.isActive) {\n    return null;\n  }\n\n  return (\n    <div className=\"bg-gradient-to-r bg-gray-900 text-white px-6 py-10 mx-4 mt-2 rounded-lg shadow-lg\">\n      <div className=\"container mx-auto flex items-center justify-between\">\n        <div className=\"flex-1\">\n          <h2 className=\"text-3xl sm:text-5xl font-extrabold text-left mb-4\">\n            {sale.title}\n          </h2>\n          <p className=\"text-left text-xl sm:text-3xl font-semibold mb-6\">\n            {sale.description}\n          </p>\n          <div className=\"flex\">\n            <div className=\"bg-white text-black py-4 px-6 rounded-full shadow-md transform hover:scale-105 transition duration-300\">\n              <span className=\"font-bold text-base sm:text-xl\">\n                Use code:{\" \"}\n                <span className=\"text-orange-500\">{sale.couponCode}</span>\n              </span>\n              <span className=\"ml-2 font-bold text-base sm:text-xl\">\n                for {sale.discountAmount}% OFF\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BlackFridayBanner;\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEA,eAAe;IACb,MAAM,OAAO,MAAM,IAAA,gLAAyB,EAAC,qJAAY,CAAC,OAAO;IAEjE,IAAI,CAAC,MAAM,UAAU;QACnB,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCACX,KAAK,KAAK;;;;;;kCAEb,8OAAC;wBAAE,WAAU;kCACV,KAAK,WAAW;;;;;;kCAEnB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAK,WAAU;;wCAAiC;wCACrC;sDACV,8OAAC;4CAAK,WAAU;sDAAmB,KAAK,UAAU;;;;;;;;;;;;8CAEpD,8OAAC;oCAAK,WAAU;;wCAAsC;wCAC/C,KAAK,cAAc;wCAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQzC;uCAEe","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/components/ProductGrid.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/ProductGrid.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ProductGrid.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA8R,GAC3T,4DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/components/ProductGrid.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/ProductGrid.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ProductGrid.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA0Q,GACvS,wCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/components/ui/category-selector.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const CategorySelectorComponent = registerClientReference(\n    function() { throw new Error(\"Attempted to call CategorySelectorComponent() from the server but CategorySelectorComponent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/category-selector.tsx <module evaluation>\",\n    \"CategorySelectorComponent\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,4BAA4B,IAAA,wQAAuB,EAC5D;IAAa,MAAM,IAAI,MAAM;AAAkQ,GAC/R,qEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/components/ui/category-selector.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const CategorySelectorComponent = registerClientReference(\n    function() { throw new Error(\"Attempted to call CategorySelectorComponent() from the server but CategorySelectorComponent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/category-selector.tsx\",\n    \"CategorySelectorComponent\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,4BAA4B,IAAA,wQAAuB,EAC5D;IAAa,MAAM,IAAI,MAAM;AAAkQ,GAC/R,iDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/components/ProductsView.tsx"],"sourcesContent":["import { Category, Product } from \"@/sanity.types\";\nimport ProductGrid from \"./ProductGrid\";\nimport { CategorySelectorComponent } from \"./ui/category-selector\";\n\ninterface ProductsViewProps{\n  products: Product[];\n  categories: Category[];\n\n}\n\nconst ProductsView = ({ products, categories }: ProductsViewProps) => {\n  return (\n    <div className=\"flex flex-col\">\n      {/* Categories */}\n      <div className=\"w-full sm:w-[200px]\">\n        <CategorySelectorComponent categories={categories}/>\n      </div>\n\n      {/* Products */}\n      <div className=\"flex-1\">\n        <div>\n          <ProductGrid products={products} />\n\n          <hr className=\"w-1/2 sm:w-3/4\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProductsView;"],"names":[],"mappings":";;;;;AACA;AACA;;;;AAQA,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAqB;IAC/D,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,sKAAyB;oBAAC,YAAY;;;;;;;;;;;0BAIzC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;;sCACC,8OAAC,qIAAW;4BAAC,UAAU;;;;;;sCAEvB,8OAAC;4BAAG,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAKxB;uCAEe","debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/sanity/lib/products/getAllCategories.ts"],"sourcesContent":["import { defineQuery } from \"next-sanity\";\nimport { sanityFetch } from \"../live\";\n\n// Function to get all categories\nexport const getAllCategories = async () => {\n  // Define the query\n  const ALL_CATEGORIES_QUERY = defineQuery(`\n    *[_type == \"category\"] | order(name asc)\n  `);\n\n  try {\n    // Use sanityFetch to send the query\n    const categories = await sanityFetch({\n      query: ALL_CATEGORIES_QUERY,\n    });\n\n    // Return the list of categories, or an empty array if none are found\n    return categories.data || [];\n  } catch (error) {\n    console.error(\"Error fetching all categories:\", error);\n    return [];\n  }\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAGO,MAAM,mBAAmB;IAC9B,mBAAmB;IACnB,MAAM,uBAAuB,IAAA,kJAAW,EAAC,CAAC;;EAE1C,CAAC;IAED,IAAI;QACF,oCAAoC;QACpC,MAAM,aAAa,MAAM,IAAA,oIAAW,EAAC;YACnC,OAAO;QACT;QAEA,qEAAqE;QACrE,OAAO,WAAW,IAAI,IAAI,EAAE;IAC9B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO,EAAE;IACX;AACF","debugId":null}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/sanity/lib/products/getAllProducts.ts"],"sourcesContent":["import { defineQuery } from \"next-sanity\";\nimport { sanityFetch } from \"../live\";\n\nexport const getAllProducts = async () => {\n\n  const ALL_PRODUCTS_QUERY = defineQuery(`*[\n    _type == \"product\"\n  ] | order(name asc)\n  `)\n\n  try {\n    // Use sanity fetch to send the query\n    const products = await sanityFetch({\n      query: ALL_PRODUCTS_QUERY,\n    });\n    // Return the list of products, or an empty array if none are found\n    return products.data || [];\n  } catch (error) {\n    console.error(\"Error fetching all products: \", error);\n    return [];\n  }\n\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,iBAAiB;IAE5B,MAAM,qBAAqB,IAAA,kJAAW,EAAC,CAAC;;;EAGxC,CAAC;IAED,IAAI;QACF,qCAAqC;QACrC,MAAM,WAAW,MAAM,IAAA,oIAAW,EAAC;YACjC,OAAO;QACT;QACA,mEAAmE;QACnE,OAAO,SAAS,IAAI,IAAI,EAAE;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,EAAE;IACX;AAEF","debugId":null}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/app/%28store%29/hero/page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const HeroSlider = registerClientReference(\n    function() { throw new Error(\"Attempted to call HeroSlider() from the server but HeroSlider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(store)/hero/page.tsx <module evaluation>\",\n    \"HeroSlider\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,2DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/app/%28store%29/hero/page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const HeroSlider = registerClientReference(\n    function() { throw new Error(\"Attempted to call HeroSlider() from the server but HeroSlider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(store)/hero/page.tsx\",\n    \"HeroSlider\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,uCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/app/%28store%29/page.tsx"],"sourcesContent":["import BlackFridayBanner from \"@/components/BlackFridayBanner\";\nimport ProductsView from \"@/components/ProductsView\";\nimport { getAllCategories } from \"@/sanity/lib/products/getAllCategories\";\nimport { getAllProducts } from \"@/sanity/lib/products/getAllProducts\";\nimport { HeroSlider } from \"./hero/page\";\nexport const dynamic = \"force-static\";\nexport const revalidate = 3600;\n\nexport default async function Home() {\n  const products = await getAllProducts();\n  const categories = await getAllCategories();\n\n  // Debug Products Rendering\n  // console.log(\n  //   crypto.randomUUID().slice(0, 5) +\n  //     `>>> Rendered the product page cache for ${products.length} products\n  //     and ${categories.length} categories`\n  // );\n\n  return (\n    <div>\n      <HeroSlider />\n      <div className=\"flex flex-col items-center justify-top min-h-screen bg-gray-100 p-4\">\n        <ProductsView products={products} categories={categories} />\n      </div>\n      <Collage/>\n      <BlackFridayBanner />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;AACO,MAAM,UAAU;AAChB,MAAM,aAAa;AAEX,eAAe;IAC5B,MAAM,WAAW,MAAM,IAAA,6JAAc;IACrC,MAAM,aAAa,MAAM,IAAA,iKAAgB;IAEzC,2BAA2B;IAC3B,eAAe;IACf,sCAAsC;IACtC,2EAA2E;IAC3E,2CAA2C;IAC3C,KAAK;IAEL,qBACE,8OAAC;;0BACC,8OAAC,+IAAU;;;;;0BACX,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,sIAAY;oBAAC,UAAU;oBAAU,YAAY;;;;;;;;;;;0BAEhD,8OAAC;;;;;0BACD,8OAAC,2IAAiB;;;;;;;;;;;AAGxB","debugId":null}}]
}