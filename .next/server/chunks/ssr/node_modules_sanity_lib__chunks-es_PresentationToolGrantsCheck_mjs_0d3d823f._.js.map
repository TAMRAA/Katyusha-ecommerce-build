{"version":3,"sources":["turbopack:///[project]/node_modules/framer-motion/dist/es/components/MotionConfig/index.mjs","turbopack:///[project]/node_modules/sanity/node_modules/uuid/dist/esm/native.js","turbopack:///[project]/node_modules/@sanity/preview-url-secret/src/generateSecret.ts","turbopack:///[project]/node_modules/sanity/node_modules/uuid/dist/esm/regex.js","turbopack:///[project]/node_modules/sanity/node_modules/uuid/dist/esm/rng.js","turbopack:///[project]/node_modules/sanity/node_modules/uuid/dist/esm/validate.js","turbopack:///[project]/node_modules/sanity/node_modules/uuid/dist/esm/stringify.js","turbopack:///[project]/node_modules/@sanity/preview-url-secret/src/withoutSecretSearchParams.ts","turbopack:///[project]/node_modules/@sanity/preview-url-secret/src/toggleVercelProtectionBypass.ts","turbopack:///[project]/node_modules/path-to-regexp/src/index.ts","turbopack:///[project]/node_modules/@sanity/preview-url-secret/src/togglePreviewAccessSharing.ts","turbopack:///[project]/node_modules/sanity/node_modules/uuid/dist/esm/v4.js","turbopack:///[project]/node_modules/@sanity/preview-url-secret/src/createPreviewSecret.ts","turbopack:///[project]/node_modules/sanity/src/presentation/features/PostMessageFeatures.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/machines/presentation-machine.ts","turbopack:///[project]/node_modules/sanity/src/presentation/overlays/SharedStateProvider.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/panels/Panel.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/util/debounce.ts","turbopack:///[project]/node_modules/sanity/src/presentation/panels/usePanelsStorage.ts","turbopack:///[project]/node_modules/sanity/src/presentation/panels/util.ts","turbopack:///[project]/node_modules/sanity/src/presentation/panels/Panels.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/components/ErrorCard.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/paneRouter/ChildLink.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/paneRouter/ReferenceChildLink.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/paneRouter/PresentationPaneRouterProvider.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/editor/DocumentListPane.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/editor/DocumentPane.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/editor/DocumentPanel.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/editor/usePreviewState.ts","turbopack:///[project]/node_modules/sanity/src/presentation/editor/ContentEditor.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/panels/usePanelId.ts","turbopack:///[project]/node_modules/sanity/src/presentation/panels/PanelResizer.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/PresentationContent.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/PresentationNavigateProvider.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/useLocalState.ts","turbopack:///[project]/node_modules/sanity/src/presentation/PresentationNavigator.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/PresentationParamsProvider.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/PresentationProvider.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/useAllowPatterns.ts","turbopack:///[project]/node_modules/sanity/src/presentation/util/encodeStudioPerspective.ts","turbopack:///[project]/node_modules/sanity/src/presentation/useId.ts","turbopack:///[project]/node_modules/sanity/src/presentation/preview/IFrame.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/preview/OpenPreviewButton.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/useTargetOrigin.ts","turbopack:///[project]/node_modules/sanity/src/presentation/preview/PreviewLocationInput.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/preview/SharePreviewMenu.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/preview/PreviewHeader.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/preview/Preview.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/util/warnOnce.ts","turbopack:///[project]/node_modules/sanity/src/presentation/useDocumentsOnPage.ts","turbopack:///[project]/node_modules/sanity/src/presentation/useMainDocument.ts","turbopack:///[project]/node_modules/sanity/src/presentation/util/parse.ts","turbopack:///[project]/node_modules/sanity/src/presentation/useParams.ts","turbopack:///[project]/node_modules/sanity/src/presentation/usePopups.ts","turbopack:///[project]/node_modules/sanity/src/presentation/usePresentationPerspective.ts","turbopack:///[project]/node_modules/sanity/src/presentation/useStatus.ts","turbopack:///[project]/node_modules/sanity/src/presentation/PresentationTool.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/actors/create-preview-secret.ts","turbopack:///[project]/node_modules/sanity/src/presentation/actors/read-shared-secret.ts","turbopack:///[project]/node_modules/sanity/src/presentation/actors/resolve-allow-patterns.ts","turbopack:///[project]/node_modules/sanity/src/presentation/actors/resolve-initial-url.ts","turbopack:///[project]/node_modules/sanity/src/presentation/actors/resolve-preview-mode.ts","turbopack:///[project]/node_modules/sanity/src/presentation/actors/resolve-preview-mode-url.ts","turbopack:///[project]/node_modules/sanity/src/presentation/actors/resolve-url-from-preview-search-param.ts","turbopack:///[project]/node_modules/sanity/src/presentation/machines/preview-url.ts","turbopack:///[project]/node_modules/sanity/src/presentation/usePreviewUrlActorRef.ts","turbopack:///[project]/node_modules/sanity/src/presentation/useReportInvalidPreviewSearchParam.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/useVercelBypassSecret.ts","turbopack:///[project]/node_modules/sanity/src/presentation/PresentationToolGrantsCheck.tsx"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, useMemo } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { loadExternalIsValidProp } from '../../render/dom/utils/filter-props.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig({ children, isValidProp, ...config }) {\n    isValidProp && loadExternalIsValidProp(isValidProp);\n    /**\n     * Inherit props from any parent MotionConfig components\n     */\n    config = { ...useContext(MotionConfigContext), ...config };\n    /**\n     * Don't allow isStatic to change between renders as it affects how many hooks\n     * motion components fire.\n     */\n    config.isStatic = useConstant(() => config.isStatic);\n    /**\n     * Creating a new config context object will re-render every `motion` component\n     * every time it renders. So we only want to create a new one sparingly.\n     */\n    const context = useMemo(() => config, [\n        JSON.stringify(config.transition),\n        config.transformPagePoint,\n        config.reducedMotion,\n    ]);\n    return (jsx(MotionConfigContext.Provider, { value: context, children: children }));\n}\n\nexport { MotionConfig };\n","import { randomUUID } from 'crypto';\nexport default { randomUUID };\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/** @internal */\nexport function generateUrlSecret(): string {\n  // Try using WebCrypto if available\n  if (typeof crypto !== 'undefined') {\n    // Generate a random array of 16 bytes\n    const array = new Uint8Array(16)\n    crypto.getRandomValues(array)\n\n    // Convert the array to a URL-safe string\n    let key = ''\n    for (let i = 0; i < array.length; i++) {\n      // Convert each byte to a 2-digit hexadecimal number\n      key += array[i]!.toString(16).padStart(2, '0')\n    }\n\n    // Replace '+' and '/' from base64url to '-' and '_'\n    key = btoa(key).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/[=]+$/, '')\n\n    return key\n  }\n  // If not fallback to Math.random\n  return Math.random().toString(36).slice(2)\n}\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;\n","import { randomFillSync } from 'crypto';\nconst rnds8Pool = new Uint8Array(256);\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n    if (poolPtr > rnds8Pool.length - 16) {\n        randomFillSync(rnds8Pool);\n        poolPtr = 0;\n    }\n    return rnds8Pool.slice(poolPtr, (poolPtr += 16));\n}\n","import REGEX from './regex.js';\nfunction validate(uuid) {\n    return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n} from './constants'\n\n/** @alpha */\nexport function withoutSecretSearchParams(url: URL): URL {\n  const newUrl = new URL(url)\n  const {searchParams} = newUrl\n  searchParams.delete(urlSearchParamPreviewPathname)\n  searchParams.delete(urlSearchParamPreviewSecret)\n  searchParams.delete(urlSearchParamPreviewPerspective)\n  searchParams.delete(urlSearchParamVercelProtectionBypass)\n  searchParams.delete(urlSearchParamVercelSetBypassCookie)\n  return newUrl\n}\n\n/** @alpha */\nexport function hasSecretSearchParams(url: URL): boolean {\n  return url.searchParams.has(urlSearchParamPreviewSecret)\n}\n\n/** @alpha */\nexport function setSecretSearchParams(\n  url: URL,\n  secret: string | null,\n  redirectTo: string,\n  perspective: string,\n): URL {\n  const newUrl = new URL(url)\n  const {searchParams} = newUrl\n  // Preview secrets are added when preview mode is setup with an `enable` endpoint\n  if (secret) {\n    searchParams.set(urlSearchParamPreviewSecret, secret)\n    searchParams.set(urlSearchParamPreviewPathname, redirectTo)\n  }\n  // Always set the perspective that's being used\n  searchParams.set(urlSearchParamPreviewPerspective, perspective)\n\n  return newUrl\n}\n","import type {SanityClient, SyncTag} from '@sanity/client'\nimport {\n  vercelProtectionBypassSchemaId as _id,\n  vercelProtectionBypassSchemaType as _type,\n  fetchVercelProtectionBypassSecret,\n  tag,\n} from './constants'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function enableVercelProtectionBypass(\n  client: SanityClient,\n  secret: string,\n): Promise<void> {\n  const patch = client.patch(_id).set({secret})\n  await client.transaction().createIfNotExists({_id, _type}).patch(patch).commit({tag})\n}\n\n/** @internal */\nexport async function disableVercelProtectionBypass(client: SanityClient): Promise<void> {\n  const patch = client.patch(_id).set({secret: null})\n  await client.transaction().createIfNotExists({_id, _type}).patch(patch).commit({tag})\n}\n\n/** @internal */\nexport function subcribeToVercelProtectionBypass(\n  client: SanityClient,\n  onChange: (secret: string | null) => void,\n): () => void {\n  let controller = new AbortController()\n  let usedTags: SyncTag[] = []\n  async function fetchSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n    const {result, syncTags} = await client.fetch<string | null>(\n      fetchVercelProtectionBypassSecret,\n      {},\n      {\n        filterResponse: false,\n        lastLiveEventId,\n        tag: 'preview-url-secret.fetch-vercel-bypass-protection-secret',\n      },\n    )\n    if (Array.isArray(syncTags)) {\n      usedTags = syncTags\n    }\n    if (!signal.aborted) {\n      onChange(result)\n    }\n  }\n  const subscription = client.live.events().subscribe({\n    next: (event) => {\n      if (event.type === 'message') {\n        controller.abort()\n        controller = new AbortController()\n        if (event.tags.some((tag) => usedTags.includes(tag))) {\n          fetchSecret(event.id, controller.signal)\n        }\n      }\n    },\n    // eslint-disable-next-line no-console\n    error: (reason) => console.error(reason),\n  })\n\n  fetchSecret(null, controller.signal)\n\n  return () => {\n    subscription.unsubscribe()\n    controller.abort()\n  }\n}\n\nexport type {SanityClientLike}\n","/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n","import type {SanityClient} from '@sanity/client'\nimport {schemaIdSingleton as _id, schemaTypeSingleton as _type, apiVersion, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function enablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<{secret: string}> {\n  const client = _client.withConfig({apiVersion})\n  const newSecret = generateUrlSecret()\n  const patch = client.patch(_id).set({secret: newSecret, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n\n  return {secret: newSecret}\n}\n\n/** @internal */\nexport async function disablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<void> {\n  const client = _client.withConfig({apiVersion})\n  const patch = client.patch(_id).set({secret: null, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n}\n\nexport type {SanityClientLike}\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","import type {SanityClient} from '@sanity/client'\nimport {uuid} from '@sanity/uuid'\nimport {apiVersion, deleteExpiredSecretsQuery, schemaType, SECRET_TTL, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function createPreviewSecret(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n  id = uuid(),\n): Promise<{secret: string; expiresAt: Date}> {\n  const client = _client.withConfig({apiVersion})\n\n  try {\n    const expiresAt = new Date(Date.now() + 1000 * SECRET_TTL)\n    const _id = `drafts.${id}`\n    const newSecret = generateUrlSecret()\n    const patch = client.patch(_id).set({secret: newSecret, source, studioUrl, userId})\n    await client.transaction().createOrReplace({_id, _type: schemaType}).patch(patch).commit({tag})\n\n    return {secret: newSecret, expiresAt}\n  } finally {\n    try {\n      // Garbage collect expired secrets\n      await client.delete({query: deleteExpiredSecretsQuery})\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Failed to delete expired secrets', err)\n    }\n  }\n}\n\nexport type {SanityClientLike}\n","import {type FC, memo, useEffect} from 'react'\n\nimport {type VisualEditingConnection} from '../types'\n\nexport interface PostMessagePreviewsProps {\n  comlink: VisualEditingConnection\n}\n\nconst PostMessageFeatures: FC<PostMessagePreviewsProps> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    return comlink.on('visual-editing/features', () => ({\n      features: {\n        optimistic: true,\n      },\n    }))\n  }, [comlink])\n\n  return null\n}\n\nexport default memo(PostMessageFeatures)\n","import {type ActorRefFrom, assign, setup} from 'xstate'\n\ninterface Context {\n  url: URL | null\n  error: Error | null\n  visualEditingOverlaysEnabled: boolean\n}\n\ntype Event =\n  | {type: 'toggle visual editing overlays'; enabled: boolean}\n  | {type: 'iframe loaded'}\n  | {type: 'iframe refresh'}\n  | {type: 'iframe reload'}\n\nexport const presentationMachine = setup({\n  types: {} as {\n    context: Context\n    events: Event\n    tags: 'busy' | 'error'\n  },\n  actions: {\n    //\n  },\n  actors: {\n    //\n  },\n  guards: {\n    //\n  },\n}).createMachine({\n  // eslint-disable-next-line tsdoc/syntax\n  /** @xstate-layout N4IgpgJg5mDOIC5QAUBOcwDsAuBDbAlgPaYAEAKkUQDYDEBAZqrgLZinrVG4QDaADAF1EoAA5FYBQiREgAHogAsAJgA0IAJ6IAHAEYAdIoCcJowFY9R-vzPLlAX3vq0GHPmJlKNfVx4FMUPRMrOy+EJACwkgg4pLSmLIKCLoAbIr6Zoop2tqKAMxpJnnF6loIZkbK+uZ5umapKXmK-Cm6js7osFh48RRU1D7c4RC02ERQUNTsAG4EsACuuNSkkFL+UKRE02Co1LgasJGysWsy0UnaZinVyrpGAOx1Rim2efeliPe3hma1Zvy6XT8W4OJwgFxdNy9LwDMKQILMNgcMBMOAACyO0RO8USiAK930LWU-3uiiB9yaKXemkQjW01V+txS-GKqUe7XBnW67hIfW8cJGjER7E4Q0xYgkpwS5zxVMJKWJ-FJ5Mp1LKFn4Pz+DSaLTaYIh3Oh-UGPEg+nQqNgaPWCJCpAF4pikpxMoQKWZ+gp+TSZLy1hSH3deXpNSZLNqVP1HVcPQ8fNhQ3Nor8ATtSMdQmOLo8uPdnu9BUUfoDQY1WrqOuarUcYMwRHC8Gihqh8Zh2biubdAFpAzSEL2OS247yYfodqgiKgO1K8yog7ptATFL9dFljMDrHkh1zW6OTWF1jPXaAkmY1YgKnktfxtC9dPd+Io9DvYzzPAekxBj13T3i7vKirKkqqpBsYVQ1HUFjFs0t6KK+kIjh+-JfvoBAQFMP5nH+CDaMo16KjYyjMvUNh5GWOT6MoLL8A8ygrk0dQIUabafmaEAWiinQ2gEWHSjhjJUYuj73Pcd63noQaNEYFb-Dk2S0cxe7IYm7GcYevFYjm2HyJeeQQb8tFkikVjGNoFGajUt73o+z61vYQA */\n  id: 'Presentation Tool',\n  context: {\n    url: null,\n    error: null,\n    visualEditingOverlaysEnabled: false,\n  },\n\n  on: {\n    'iframe reload': {\n      actions: assign({url: null}),\n      target: '.loading',\n    },\n  },\n\n  states: {\n    error: {\n      description:\n        'Failed to load, either because of a misconfiguration, a network error, or an unexpected error',\n      tags: ['error'],\n    },\n    loading: {\n      on: {\n        'iframe loaded': {\n          target: 'loaded',\n        },\n      },\n      tags: ['busy'],\n    },\n    loaded: {\n      on: {\n        'toggle visual editing overlays': {\n          actions: assign({\n            visualEditingOverlaysEnabled: ({event}) => event.enabled,\n          }),\n        },\n        'iframe refresh': {\n          target: '.refreshing',\n        },\n        'iframe reload': {\n          target: '.reloading',\n        },\n      },\n\n      states: {\n        idle: {},\n        refreshing: {\n          on: {\n            'iframe loaded': {\n              target: 'idle',\n            },\n          },\n          tags: ['busy'],\n        },\n        reloading: {\n          on: {\n            'iframe loaded': {\n              target: 'idle',\n            },\n          },\n          tags: ['busy'],\n        },\n      },\n      initial: 'idle',\n    },\n  },\n  initial: 'loading',\n})\n\nexport type PresentationMachineRef = ActorRefFrom<typeof presentationMachine>\n","import {type Serializable, type SerializableObject} from '@sanity/presentation-comlink'\nimport {\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react'\nimport {PresentationSharedStateContext} from 'sanity/_singletons'\n\nimport {type VisualEditingConnection} from '../types'\nimport {type PresentationSharedStateContextValue} from './types'\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink: VisualEditingConnection | null\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const sharedState = useRef<SerializableObject>({})\n\n  useEffect(() => {\n    return comlink?.on('visual-editing/shared-state', () => {\n      return {state: sharedState.current}\n    })\n  }, [comlink])\n\n  const setValue = useCallback(\n    (key: string, value: Serializable) => {\n      sharedState.current[key] = value\n      comlink?.post('presentation/shared-state', {key, value})\n    },\n    [comlink],\n  )\n\n  const removeValue = useCallback(\n    (key: string) => {\n      comlink?.post('presentation/shared-state', {key})\n      delete sharedState.current[key]\n    },\n    [comlink],\n  )\n\n  const context = useMemo<PresentationSharedStateContextValue>(\n    () => ({removeValue, setValue}),\n    [removeValue, setValue],\n  )\n\n  return (\n    <PresentationSharedStateContext.Provider value={context}>\n      {children}\n    </PresentationSharedStateContext.Provider>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useContext, useLayoutEffect} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const {getPanelStyle, registerElement, unregisterElement} = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, defaultSize, order, maxWidth, minWidth, registerElement, unregisterElement])\n\n  return <Root style={style}>{children}</Root>\n}\n","export function debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import {useMemo} from 'react'\n\nimport {debounce} from '../util/debounce'\nimport {type PanelElement} from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[] | undefined\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return Array.isArray(stored[key]) && stored[key].some((val) => val === null)\n        ? undefined\n        : stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","/* eslint-disable @typescript-eslint/no-shadow,no-eq-null */\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\n\nfunction getNextWidth(panel: PanelElement, nextWidth: number, containerWidth: number) {\n  const {maxWidth: maxWidthPx, minWidth: minWidthPx} = panel\n  const maxWidth = maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\n// eslint-disable-next-line max-params\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const {panels, widths: prevWidths} = panelsState\n  const {widths: initialWidths} = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(pivotPanel, width + Math.abs(delta), containerWidth)\n    if (width === nextWidth) {\n      return widths\n    }\n    delta = delta < 0 ? width - nextWidth : nextWidth - width\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(panel, width - deltaRemaining, containerWidth)\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied.toPrecision(10).localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n          numeric: true,\n        }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else if (++index >= panels.length) {\n      break\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(panels: PanelElement[], id: string, widths: number[]): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(element: PanelElement | ResizerElement): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(element: PanelElement | ResizerElement): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(elements: ElementMap): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({order: a}, {order: b}) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let {maxWidth, minWidth} = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        // eslint-disable-next-line no-negated-condition\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal -= panel.defaultSize\n      panelsWithoutWidth -= 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\nimport {usePanelsStorage} from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({children}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(() => getSortedElements(elements).filter(isPanel), [elements])\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback((id: string, data: PanelElement | ResizerElement) => {\n    setElements((prev) => {\n      if (prev.has(id)) return prev\n      const next = new Map(prev)\n      next.set(id, data)\n      return next\n    })\n  }, [])\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {containerWidth, dragOffset, panelBefore, panelAfter, resizerRect} = dragRef.current\n\n      // eslint-disable-next-line no-eq-null\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const {widths: prevWidths} = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const {widths} = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(panels, storedWidths, window.innerWidth)\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const {panels, widths: prevWidths} = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PresentationPanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PresentationPanelsContext.Provider>\n  )\n}\n","import {Box, Card, type CardProps, Container, Flex, Inline, Stack, Text} from '@sanity/ui'\nimport {type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): React.JSX.Element {\n  const {children, message, onRetry, onContinueAnyway, ...restProps} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const retryButton = (\n    <Button mode=\"ghost\" onClick={onRetry} text={t('error-card.retry-button.text')} />\n  )\n  const continueAnywayButton = (\n    <Button\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text={t('error-card.continue-button.text')}\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                {t('error-card.title')}\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","import {forwardRef} from 'react'\nimport {StateLink} from 'sanity/router'\nimport {type ChildLinkProps} from 'sanity/structure'\n\nimport {type PresentationSearchParams} from '../types'\n\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps & {\n    childType: string\n    searchParams: PresentationSearchParams\n  },\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {childId, childType, childPayload, childParameters, searchParams, ...rest} = props\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        id: childId,\n        type: childType,\n        _searchParams: Object.entries({...searchParams, ...childParameters}),\n      }}\n    />\n  )\n})\n","import {forwardRef} from 'react'\nimport {pathToString} from 'sanity'\nimport {type ReferenceChildLinkProps} from 'sanity/structure'\n\nimport {type PresentationSearchParams} from '../types'\nimport {ChildLink} from './ChildLink'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {documentId, documentType, parentRefPath, template, searchParams, ...rest} = props\n\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childType={documentType}\n      childPayload={template?.params}\n      childParameters={{\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n      searchParams={searchParams}\n    />\n  )\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {forwardRef, type PropsWithChildren, useCallback, useMemo} from 'react'\nimport {getPublishedId, useUnique} from 'sanity'\nimport {StateLink, useRouter} from 'sanity/router'\nimport {\n  type BackLinkProps,\n  type ChildLinkProps,\n  PaneRouterContext,\n  type PaneRouterContextValue,\n  type ReferenceChildLinkProps,\n} from 'sanity/structure'\n\nimport {\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {ChildLink} from './ChildLink'\nimport {ReferenceChildLink} from './ReferenceChildLink'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(nextParams: Record<string, string | undefined>) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParamsContextValue> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return {...obj, [key]: value}\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {searchParams, ...restProps} = props\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nexport type PresentationPaneRouterProviderProps = PropsWithChildren<{\n  onEditReference: PresentationNavigate\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs?: {_id: string; _type: string}[]\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}>\n\nexport function PresentationPaneRouterProvider(\n  props: PresentationPaneRouterProviderProps,\n): React.JSX.Element {\n  const {children, onEditReference, onStructureParams, structureParams, searchParams, refs} = props\n\n  const {state: routerState, resolvePathFromState} = useRouter()\n\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const path = resolvePathFromState(routerState)\n      const qs = resolveQueryStringFromParams({\n        ...routerSearchParams,\n        ...nextParams,\n      })\n      return `${path}${qs}`\n    },\n    [resolvePathFromState, routerSearchParams, routerState],\n  )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      // oxlint-disable-next-line no-explicit-any\n      params: structureParams as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: forwardRef<HTMLAnchorElement, ChildLinkProps>(\n        function ContextChildLink(childLinkProps, ref) {\n          const {childId, ...rest} = childLinkProps\n          const doc = refs?.find((r) => r._id === childId || getPublishedId(r._id) === childId)\n\n          if (!doc) {\n            console.warn(`ChildLink: No document found for childId \"${childId}\"`)\n            return null\n          }\n\n          return (\n            <ChildLink\n              {...rest}\n              ref={ref}\n              childId={childId}\n              childType={doc._type}\n              searchParams={searchParams}\n            />\n          )\n        },\n      ),\n      BackLink: forwardRef<HTMLAnchorElement, BackLinkProps>(\n        function ContextBackLink(backLinkProps, ref) {\n          return <BackLink {...backLinkProps} ref={ref} searchParams={searchParams} />\n        },\n      ),\n      ReferenceChildLink: forwardRef<HTMLAnchorElement, ReferenceChildLinkProps>(\n        function ContextReferenceChildLink(childLinkProps, ref) {\n          return <ReferenceChildLink {...childLinkProps} ref={ref} searchParams={searchParams} />\n        },\n      ),\n      ParameterizedLink: () => {\n        throw new Error('ParameterizedLink not implemented')\n      },\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        const {id, template, type, parentRefPath, version} = options\n        onEditReference({\n          state: {id, type},\n          params: {\n            template: template.id,\n            parentRefPath: pathToString(parentRefPath),\n            version,\n          },\n        })\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: onStructureParams,\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [\n    createPathWithParams,\n    onEditReference,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  ])\n\n  return <PaneRouterContext.Provider value={context}>{children}</PaneRouterContext.Provider>\n}\n","import {Card, Code, Flex, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {getPublishedId, useTranslation} from 'sanity'\nimport {\n  DocumentListPane as StructureDocumentListPane,\n  PaneLayout,\n  type PaneNode,\n  StructureToolProvider,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {PresentationPaneRouterProvider} from '../paneRouter/PresentationPaneRouterProvider'\nimport {\n  type MainDocumentState,\n  type PresentationNavigate,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  mainDocumentState?: MainDocumentState\n  onEditReference: PresentationNavigate\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  refs: {_id: string; _type: string}[]\n}): React.JSX.Element {\n  const {mainDocumentState, onEditReference, onStructureParams, searchParams, refs} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const ids = useMemo(\n    () =>\n      refs\n        .filter((r) => getPublishedId(r._id) !== mainDocumentState?.document?._id)\n        .map((r) => getPublishedId(r._id)),\n    [mainDocumentState, refs],\n  )\n\n  const pane: Extract<PaneNode, {type: 'documentList'}> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: {ids},\n        // defaultOrdering: [{field: '_updatedAt', direction: 'desc'}],\n      },\n      schemaTypeName: '',\n      title: t('document-list-pane.document-list.title'),\n      type: 'documentList',\n    }),\n    [ids, t],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [structureParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-list-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            onEditReference={onEditReference}\n            onStructureParams={onStructureParams}\n            structureParams={structureParams}\n            searchParams={searchParams}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <StructureDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import {studioPath} from '@sanity/client/csm'\nimport {Card, Code, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type Path, useTranslation} from 'sanity'\nimport {decodeJsonParams} from 'sanity/router'\nimport {\n  DocumentPane as StructureDocumentPane,\n  type DocumentPaneNode,\n  PaneLayout,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {PresentationPaneRouterProvider} from '../paneRouter/PresentationPaneRouterProvider'\nimport {PresentationSpinner} from '../PresentationSpinner'\nimport {\n  type PresentationNavigate,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (state: Required<PresentationStateParams>) => void\n  onEditReference: PresentationNavigate\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    onFocusPath,\n    onEditReference,\n    onStructureParams,\n    searchParams,\n    structureParams,\n  } = props\n  const {template, templateParams} = structureParams\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n        template,\n        templateParameters: decodeJsonParams(templateParams),\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType, template, templateParams],\n  )\n\n  const handleFocusPath = useCallback(\n    (path: Path) => {\n      return onFocusPath({\n        id: documentId,\n        type: documentType,\n        path: studioPath.toString(path),\n      })\n    },\n    [documentId, documentType, onFocusPath],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, structureParams])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout style={{height: '100%'}}>\n        <PresentationPaneRouterProvider\n          searchParams={searchParams}\n          onEditReference={onEditReference}\n          onStructureParams={onStructureParams}\n          structureParams={structureParams}\n        >\n          <Suspense fallback={<PresentationSpinner />}>\n            <StructureDocumentPane\n              // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n              paneKey=\"document\"\n              index={1}\n              itemId=\"document\"\n              pane={paneDocumentNode}\n              onFocusPath={handleFocusPath}\n            />\n          </Suspense>\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import {StructureToolProvider} from '../../structure/StructureToolProvider'\nimport {\n  type PresentationNavigate,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentPane} from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  documentId: string\n  documentType: string\n  onEditReference: PresentationNavigate\n  onFocusPath: (state: Required<PresentationStateParams>) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    onFocusPath,\n    onEditReference,\n    onStructureParams,\n    searchParams,\n    structureParams,\n  } = props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        onEditReference={onEditReference}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </StructureToolProvider>\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {\n  getPreviewStateObservable,\n  type PreviewValue,\n  type SanityDocument,\n  useDocumentPreviewStore,\n  usePerspective,\n} from 'sanity'\n\ninterface PreviewState {\n  isLoading?: boolean\n  snapshot?: PreviewValue | Partial<SanityDocument> | null\n}\n\nexport default function usePreviewState(documentId: string, schemaType?: SchemaType): PreviewState {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const [preview, setPreview] = useState<PreviewState>({})\n  const {perspectiveStack} = usePerspective()\n  useEffect(() => {\n    if (!schemaType) {\n      return undefined\n    }\n    const subscription = getPreviewStateObservable(\n      documentPreviewStore,\n      schemaType,\n      documentId,\n      perspectiveStack,\n    ).subscribe((state) => {\n      setPreview(state)\n    })\n\n    return () => {\n      subscription?.unsubscribe()\n    }\n  }, [documentPreviewStore, schemaType, documentId, perspectiveStack])\n\n  return preview\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, useCallback, useMemo} from 'react'\nimport {\n  getPreviewValueWithFallback,\n  PreviewCard,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type MainDocumentState,\n  type PresentationNavigate,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentListPane} from './DocumentListPane'\nimport {DocumentPanel} from './DocumentPanel'\nimport usePreviewState from './usePreviewState'\n\nexport function ContentEditor(props: {\n  documentId?: string\n  documentType?: string\n  mainDocumentState?: MainDocumentState\n  onEditReference: PresentationNavigate\n  onFocusPath: (state: Required<PresentationStateParams>) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs: {_id: string; _type: string}[]\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    mainDocumentState,\n    onEditReference,\n    onFocusPath,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const schema = useSchema()\n\n  const MainDocumentLink = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (props: HTMLProps<HTMLAnchorElement>) => {\n      return (\n        <StateLink\n          {...props}\n          state={{\n            id: mainDocumentState?.document?._id,\n            type: mainDocumentState?.document?._type,\n            _searchParams: Object.entries(searchParams),\n          }}\n        />\n      )\n    },\n    [mainDocumentState, searchParams],\n  )\n\n  const schemaType = useMemo(\n    () => schema.get(mainDocumentState?.document?._type || 'shoe')!,\n    [mainDocumentState, schema],\n  )\n\n  const previewState = usePreviewState(mainDocumentState?.document?._id || '', schemaType)\n\n  const preview = useMemo(() => {\n    if (!mainDocumentState?.document) return null\n\n    return (\n      <SanityDefaultPreview\n        {...getPreviewValueWithFallback({\n          snapshot: previewState.snapshot,\n          fallback: mainDocumentState!.document,\n        })}\n        schemaType={schemaType}\n        status={\n          <Card padding={1} radius={2} shadow={1}>\n            <Text muted size={0} weight=\"medium\">\n              {t('main-document.label')}\n            </Text>\n          </Card>\n        }\n      />\n    )\n  }, [mainDocumentState, schemaType, t, previewState])\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        documentId={documentId}\n        documentType={documentType}\n        onEditReference={onEditReference}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    )\n  }\n\n  return (\n    <Flex direction=\"column\" flex={1} height=\"fill\">\n      {mainDocumentState && (\n        <Card padding={3} tone={mainDocumentState.document ? 'inherit' : 'caution'}>\n          {mainDocumentState.document ? (\n            <PreviewCard\n              __unstable_focusRing\n              // oxlint-disable-next-line no-explicit-any\n              as={MainDocumentLink as any}\n              data-as=\"a\"\n              radius={2}\n              sizing=\"border\"\n              tone=\"inherit\"\n            >\n              {preview}\n            </PreviewCard>\n          ) : (\n            <Card padding={2} radius={2} tone=\"inherit\">\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <WarningOutlineIcon />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1}>\n                    <Translate\n                      t={t}\n                      i18nKey=\"main-document.missing.text\"\n                      components={{Code: 'code'}}\n                      values={{path: mainDocumentState.path}}\n                    />\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n          )}\n        </Card>\n      )}\n\n      <DocumentListPane\n        mainDocumentState={mainDocumentState}\n        onEditReference={onEditReference}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        refs={refs}\n      />\n    </Flex>\n  )\n}\n","import {useState} from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const [panelId] = useState(() => id || uuid())\n  return panelId\n}\n","import {\n  type FunctionComponent,\n  type MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {usePanelId} from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({$disabled}) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({$disabled}) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({id: propId, order, disabled = false}) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const id = usePanelId(propId)\n\n  const {activeResizer, drag, startDragging, stopDragging, registerElement, unregisterElement} =\n    context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    // Set styles to prevent text selection and force an ew-resize cursor whilst\n    // dragging. Return a reset callback so we can revert to any values that\n    // might have been present before dragging started.\n    function setDocumentStyles() {\n      const bodyStyle = document.body.style\n      const documentStyle = document.documentElement.style\n\n      const {cursor} = documentStyle\n      const {userSelect} = bodyStyle\n\n      documentStyle.cursor = 'ew-resize'\n      bodyStyle.userSelect = 'none'\n\n      return () => {\n        if (cursor) documentStyle.cursor = cursor\n        else documentStyle.removeProperty('cursor')\n\n        if (userSelect) bodyStyle.userSelect = userSelect\n        else bodyStyle.removeProperty('user-select')\n      }\n    }\n\n    const resetDocumentStyles = setDocumentStyles()\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n    window.addEventListener('contextmenu', onDragStop)\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      resetDocumentStyles()\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n      window.removeEventListener('contextmenu', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, {id, order, type: 'resizer', el})\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import {\n  type Dispatch,\n  type FunctionComponent,\n  type PropsWithChildren,\n  type SetStateAction,\n} from 'react'\nimport {type CommentIntentGetter, CommentsIntentProvider, type SanityDocument} from 'sanity'\n\nimport {ContentEditor} from './editor/ContentEditor'\nimport {DisplayedDocumentBroadcasterProvider} from './loader/DisplayedDocumentBroadcaster'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {\n  type MainDocumentState,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport interface PresentationContentProps {\n  documentId: PresentationParamsContextValue['id']\n  documentsOnPage: {_id: string; _type: string}[]\n  documentType: PresentationParamsContextValue['type']\n  getCommentIntent: CommentIntentGetter\n  mainDocumentState: MainDocumentState | undefined\n  onEditReference: PresentationNavigate\n  onFocusPath: (state: Required<PresentationStateParams>) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  structureParams: StructureDocumentPaneParams\n}\n\nconst PresentationContentWrapper: FunctionComponent<\n  PropsWithChildren<{\n    documentId?: string\n    getCommentIntent: CommentIntentGetter\n    setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  }>\n> = (props) => {\n  const {documentId, setDisplayedDocument, getCommentIntent} = props\n  return (\n    <>\n      <PanelResizer order={4} />\n      <Panel id=\"content\" minWidth={325} order={5}>\n        <DisplayedDocumentBroadcasterProvider\n          documentId={documentId}\n          setDisplayedDocument={setDisplayedDocument}\n        >\n          <CommentsIntentProvider getIntent={getCommentIntent}>\n            {props.children}\n          </CommentsIntentProvider>\n        </DisplayedDocumentBroadcasterProvider>\n      </Panel>\n    </>\n  )\n}\n\nexport const PresentationContent: FunctionComponent<PresentationContentProps> = (props) => {\n  const {\n    documentId,\n    documentsOnPage,\n    documentType,\n    getCommentIntent,\n    mainDocumentState,\n    onEditReference,\n    onFocusPath,\n    onStructureParams,\n    searchParams,\n    setDisplayedDocument,\n    structureParams,\n  } = props\n\n  return (\n    <PresentationContentWrapper\n      documentId={documentId}\n      getCommentIntent={getCommentIntent}\n      setDisplayedDocument={setDisplayedDocument}\n    >\n      <ContentEditor\n        documentId={documentId}\n        documentType={documentType}\n        mainDocumentState={mainDocumentState}\n        onEditReference={onEditReference}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        refs={documentsOnPage}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </PresentationContentWrapper>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useCallback} from 'react'\nimport {PresentationNavigateContext} from 'sanity/_singletons'\n\nimport {\n  type CombinedSearchParams,\n  type PresentationNavigate,\n  type PresentationNavigateContextValue,\n  type PresentationNavigateOptions,\n  type PresentationStateParams,\n} from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const {children, navigate: _navigate} = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document) => {\n      if (preview || document) {\n        const obj: {\n          state?: PresentationStateParams\n          params?: CombinedSearchParams\n        } = {}\n        if (preview) obj.params = {preview}\n        if (document) obj.state = document\n        // Cast because navigate expects either params or state to be defined, which we guarantee above\n        _navigate(obj as PresentationNavigateOptions)\n      }\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import {type Dispatch, type SetStateAction, useEffect, useState} from 'react'\n\nexport function useLocalState<T>(key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import {memo, useCallback, useMemo} from 'react'\n\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {type NavigatorOptions} from './types'\nimport {useLocalState} from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => React.JSX.Element] {\n  const {unstable_navigator} = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{navigatorEnabled, toggleNavigator}, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const {minWidth, maxWidth, component: NavigatorComponent} = props\n  // eslint-disable-next-line no-eq-null\n  const navigatorDisabled = minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationParamsContext} from 'sanity/_singletons'\n\nimport {type PresentationParamsContextValue} from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParamsContextValue\n  }>\n> = function (props) {\n  const {children, params} = props\n\n  const context = useMemo<PresentationParamsContextValue>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationContext} from 'sanity/_singletons'\n\nimport {\n  type PresentationContextValue,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParamsContextValue\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>\n> = function (props) {\n  const {children, devMode, name, navigate, params, searchParams, structureParams} = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      devMode,\n      name,\n      navigate,\n      params,\n      searchParams,\n      structureParams,\n    }),\n    [devMode, name, navigate, params, searchParams, structureParams],\n  )\n\n  return <PresentationContext.Provider value={context}>{children}</PresentationContext.Provider>\n}\n","import {useSelector} from '@xstate/react'\n\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useAllowPatterns(previewUrlRef: PreviewUrlRef) {\n  const allowPatterns = useSelector(previewUrlRef, (state) => state.context.allowOrigins)\n  if (!Array.isArray(allowPatterns)) {\n    throw new TypeError('allowPatterns must be an array')\n  }\n  return allowPatterns\n}\n","/**\n * When encoding the current studio perspective it's necessary to deal with it sometimes being an array, in a consistent way.\n */\nexport function encodeStudioPerspective(studioPerspective: string[] | string): string {\n  return Array.isArray(studioPerspective) ? studioPerspective.join(',') : studioPerspective\n}\n","import {useId as useReactId} from 'react'\n\nexport function useId(): string {\n  const id = useReactId()\n  // Uses the new format introduced in: https://github.com/facebook/react/pull/32001\n  return id.startsWith(':') ? id.replace(/^:(.+):$/, '\\u00AB$1\\u00BB') : id\n}\n","import {Box} from '@sanity/ui'\nimport {motion, type VariantLabels, type Variants} from 'framer-motion'\nimport {forwardRef, type ReactEventHandler, useEffect, useImperativeHandle, useRef} from 'react'\nimport {createGlobalStyle, styled} from 'styled-components'\n\nimport {useId} from '../useId'\n\ninterface IFrameProps {\n  animate: VariantLabels\n  initial: VariantLabels\n  onLoad: ReactEventHandler<HTMLIFrameElement>\n  preventClick: boolean\n  src: string\n  variants: Variants\n  style: React.CSSProperties\n}\n\nexport const IFrame = forwardRef<HTMLIFrameElement, IFrameProps>(\n  function IFrame(props, forwardedRef) {\n    const {animate, initial, onLoad, preventClick, src, variants, style} = props\n\n    const ref = useRef<HTMLIFrameElement | null>(null)\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    /**\n     * Ensure that clicking outside of menus and dialogs will close as focus shifts to the iframe\n     */\n\n    useEffect(() => {\n      if (!ref.current) {\n        return undefined\n      }\n      const instance = ref.current\n      function handleBlur() {\n        if (instance !== document.activeElement) {\n          return\n        }\n\n        instance.dispatchEvent(new MouseEvent('mousedown', {bubbles: true, cancelable: true}))\n      }\n      window.addEventListener('blur', handleBlur)\n      return () => {\n        window.removeEventListener('blur', handleBlur)\n      }\n    }, [])\n\n    const viewTransitionName = useId()\n\n    return (\n      <>\n        <IFrameElement\n          style={{\n            ...style,\n            viewTransitionName,\n          }}\n          animate={animate}\n          initial={initial}\n          onLoad={onLoad}\n          ref={ref}\n          src={src}\n          variants={variants}\n        />\n        {preventClick && <IFrameOverlay />}\n        <GlobalViewTransition />\n      </>\n    )\n  },\n)\n\nconst IFrameElement = motion.create(styled.iframe`\n  box-shadow: 0 0 0 1px var(--card-border-color);\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  view-transition-class: presentation-tool-iframe;\n`)\n\nconst IFrameOverlay = styled(Box)`\n  position: absolute;\n  inset: 0;\n  background: transparent;\n`\n\nconst GlobalViewTransition = createGlobalStyle`\nhtml:active-view-transition-type(sanity-iframe-viewport) {\n  view-transition-name: none;\n  &::view-transition {\n    pointer-events: none;\n  }\n  /* &::view-transition-old(root) {\n    display: none;\n  }\n  &::view-transition-new(root) {\n    animation: none;\n  } */\n}\n`\n","import {LaunchIcon} from '@sanity/icons'\nimport {urlSearchParamPreviewPerspective} from '@sanity/preview-url-secret/constants'\nimport {Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PresentationPerspective} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\n/** @internal */\nexport function OpenPreviewButton(\n  props: Pick<PreviewProps, 'openPopup'> & {\n    previewLocationOrigin?: string\n    previewLocationRoute: string\n    perspective: PresentationPerspective\n    targetOrigin: string\n  },\n): React.ReactNode {\n  const {openPopup, previewLocationOrigin, previewLocationRoute, perspective, targetOrigin} = props\n\n  const openPreviewLink = useMemo(() => {\n    const url = new URL(previewLocationRoute, previewLocationOrigin || targetOrigin)\n    url.searchParams.set(urlSearchParamPreviewPerspective, encodeStudioPerspective(perspective))\n    const {pathname, search} = url\n\n    return `${previewLocationOrigin}${pathname}${search}`\n  }, [perspective, previewLocationOrigin, previewLocationRoute, targetOrigin])\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <Tooltip\n      animate\n      content={<Text size={1}>{t('share-url.menu-item.open.text')}</Text>}\n      fallbackPlacements={['bottom-start']}\n      placement=\"bottom\"\n      portal\n    >\n      <Button\n        as=\"a\"\n        aria-label={t('share-url.menu-item.open.text')}\n        icon={LaunchIcon}\n        mode=\"bleed\"\n        href={openPreviewLink}\n        rel=\"opener\"\n        target=\"_blank\"\n        tooltipProps={null}\n        // @ts-expect-error the `as=\"a\"` prop isn't enough to change the type of event.target from <div> to <a>\n        onClick={handleOpenPopup}\n      />\n    </Tooltip>\n  )\n}\n","import {useSelector} from '@xstate/react'\n\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useTargetOrigin(previewUrlRef: PreviewUrlRef): string {\n  const targetOrigin = useSelector(previewUrlRef, (state) => state.context.previewUrl?.origin)\n  if (!targetOrigin) {\n    throw new TypeError('targetOrigin is required')\n  }\n  return targetOrigin\n}\n","import {ResetIcon} from '@sanity/icons'\nimport {TextInput, type TextInputClearButtonProps} from '@sanity/ui'\nimport {\n  type ChangeEvent,\n  type KeyboardEvent,\n  type ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PreviewUrlRef} from '../machines/preview-url'\nimport {useAllowPatterns} from '../useAllowPatterns'\nimport {useTargetOrigin} from '../useTargetOrigin'\n\nexport function PreviewLocationInput(props: {\n  fontSize?: number\n  onChange: (value: string) => void\n  previewUrlRef: PreviewUrlRef\n  padding?: number\n  prefix?: ReactNode\n  suffix?: ReactNode\n  value: string\n}): React.JSX.Element {\n  const {fontSize = 1, onChange, padding = 3, prefix, suffix, value, previewUrlRef} = props\n  const allowOrigins = useAllowPatterns(previewUrlRef)\n  const targetOrigin = useTargetOrigin(previewUrlRef)\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {basePath = '/'} = useActiveWorkspace()?.activeWorkspace || {}\n\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(undefined)\n  const [customValidity, setCustomValidity] = useState<string | undefined>(undefined)\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        let absoluteValue = sessionValue\n        try {\n          absoluteValue = new URL(sessionValue, targetOrigin).toString()\n        } catch {\n          // ignore\n        }\n\n        if (Array.isArray(allowOrigins)) {\n          if (!allowOrigins.some((pattern) => pattern.test(absoluteValue))) {\n            setCustomValidity(\n              t('preview-location-input.error', {\n                origin: targetOrigin,\n                context: 'origin-not-allowed',\n              }),\n            )\n            event.currentTarget.reportValidity()\n            return\n          }\n          // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        } else if (\n          !targetOrigin &&\n          (absoluteValue.startsWith(`${basePath}/`) || absoluteValue === basePath)\n        ) {\n          setCustomValidity(\n            t('preview-location-input.error', {basePath, context: 'same-base-path'}),\n          )\n          return\n        }\n\n        const nextValue = absoluteValue === targetOrigin ? `${targetOrigin}/` : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue)\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [allowOrigins, basePath, onChange, sessionValue, t, targetOrigin],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  const handleClear = useCallback(() => {\n    setCustomValidity(undefined)\n    let nextValue = value\n    try {\n      nextValue = new URL(value, targetOrigin).toString()\n    } catch {\n      // ignore\n    }\n    setSessionValue(nextValue)\n  }, [targetOrigin, value])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [targetOrigin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(() => ({icon: ResetIcon}), [])\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={handleClear}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        prefix={prefix}\n        style={{zIndex: 1}}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={suffix}\n        value={sessionValue === undefined ? new URL(value, targetOrigin).toString() : sessionValue}\n      />\n    </>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-shadow,no-negated-condition */\nimport {type ClientPerspective, type SyncTag} from '@sanity/client'\nimport {CopyIcon, ShareIcon} from '@sanity/icons'\nimport {SanityMonogram} from '@sanity/logos'\nimport {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {\n  disablePreviewAccessSharing,\n  enablePreviewAccessSharing,\n} from '@sanity/preview-url-secret/toggle-preview-access-sharing'\nimport {setSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Card,\n  Grid,\n  Menu,\n  MenuDivider,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  useToast,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {lazy, memo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useClient, useCurrentUser, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../ui-components'\nimport {API_VERSION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\nconst QRCodeSVG = lazy(() => import('./QRCodeSVG'))\n\nexport interface SharePreviewMenuProps {\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  previewLocationRoute: string\n  initialUrl: PreviewProps['initialUrl']\n  perspective: ClientPerspective\n}\n\nconst QrCodeLogoSize = 24\nconst QrCodeLogoPadding = 16\nconst QrSize = 224\n\nconst StyledSanityMonogram = styled(SanityMonogram)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: ${QrCodeLogoSize}px;\n  width: ${QrCodeLogoSize}px;\n`\n\nconst MotionSpinner = motion.create(Spinner)\nconst MotionText = motion.create(Text)\nconst MotionMonogram = motion.create(StyledSanityMonogram)\n\nexport const SharePreviewMenu = memo(function SharePreviewMenuComponent(\n  props: SharePreviewMenuProps,\n) {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    initialUrl,\n    previewLocationRoute,\n    perspective,\n  } = props\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [loading, setLoading] = useState(true)\n  const [enabling, setEnabling] = useState(false)\n  const [disabling, setDisabling] = useState(false)\n  const [secret, setSecret] = useState<string | null>(null)\n  const busy = enabling || disabling || loading\n  const url = useMemo(\n    () =>\n      secret\n        ? setSecretSearchParams(\n            initialUrl,\n            secret,\n            previewLocationRoute,\n            encodeStudioPerspective(perspective),\n          )\n        : null,\n    [initialUrl, perspective, previewLocationRoute, secret],\n  )\n\n  const [error, setError] = useState<unknown>(null)\n  if (error) {\n    throw error\n  }\n\n  const handleUnableToToggle = useCallback(() => {\n    pushToast({\n      closable: true,\n      status: 'warning',\n      title: t('share-preview-menu.error_toggle-sharing', {context: 'toggle-sharing'}),\n    })\n  }, [pushToast, t])\n\n  const handleDisableSharing = useCallback(async () => {\n    try {\n      setDisabling(true)\n      await disablePreviewAccessSharing(\n        client,\n        'sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(null)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setDisabling(false)\n    }\n  }, [client, currentUser?.id])\n  const handleEnableSharing = useCallback(async () => {\n    try {\n      setEnabling(true)\n\n      const previewUrlSecret = await enablePreviewAccessSharing(\n        client,\n        'sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(previewUrlSecret.secret)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setEnabling(false)\n    }\n  }, [client, currentUser?.id])\n\n  const handleCopyUrl = useCallback(() => {\n    try {\n      if (!url) {\n        throw new Error('No URL to copy')\n      }\n      navigator.clipboard.writeText(url.toString())\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: t('share-url.clipboard.status', {context: 'success'}),\n      })\n    } catch (error) {\n      setError(error)\n    }\n  }, [pushToast, t, url])\n\n  useEffect(() => {\n    let controller = new AbortController()\n    let usedTags: SyncTag[] = []\n    async function fetchShareSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n      const {result, syncTags} = await client.fetch<string | null>(\n        fetchSharedAccessQuery,\n        {},\n        {filterResponse: false, lastLiveEventId, tag: 'presentation.fetch-shared-access-secret'},\n      )\n      if (Array.isArray(syncTags)) {\n        usedTags = syncTags\n      }\n      if (!signal.aborted) {\n        setSecret(result)\n      }\n    }\n    const subscription = client.live.events().subscribe({\n      next: (event) => {\n        if (event.type === 'message') {\n          controller.abort()\n          controller = new AbortController()\n          if (event.tags.some((tag) => usedTags.includes(tag))) {\n            fetchShareSecret(event.id, controller.signal)\n          }\n        }\n      },\n      error: setError,\n    })\n\n    fetchShareSecret(null, controller.signal).finally(() => setLoading(false))\n\n    return () => {\n      subscription.unsubscribe()\n      controller.abort()\n    }\n  }, [client])\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          aria-label={t('preview-frame.share-button.aria-label')}\n          icon={ShareIcon}\n          mode=\"bleed\"\n          tooltipProps={null}\n        />\n      }\n      id=\"share-menu\"\n      menu={\n        <Menu style={{maxWidth: 248}} padding={canUseSharedPreviewAccess ? undefined : 0}>\n          {canUseSharedPreviewAccess ? (\n            <>\n              <label style={{cursor: 'pointer'}}>\n                <Grid\n                  columns={2}\n                  rows={2}\n                  gapX={3}\n                  gapY={1}\n                  style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gridTemplateColumns: 'min-content 1fr',\n                    gridTemplateRows: 'min-content',\n                  }}\n                  paddingTop={3}\n                  paddingX={3}\n                >\n                  <Tooltip\n                    animate\n                    content={\n                      <Text size={1}>\n                        {t('share-preview-menu.toggle-button.tooltip', {\n                          context: url ? 'disable' : 'enable',\n                        })}\n                      </Text>\n                    }\n                    fallbackPlacements={['bottom-start']}\n                    placement=\"bottom\"\n                    portal\n                  >\n                    <Switch\n                      checked={enabling || (url !== null && !disabling)}\n                      readOnly={enabling || disabling}\n                      indeterminate={loading}\n                      onChange={\n                        !canToggleSharePreviewAccess\n                          ? handleUnableToToggle\n                          : url\n                            ? handleDisableSharing\n                            : handleEnableSharing\n                      }\n                    />\n                  </Tooltip>\n                  <Text size={1} weight=\"medium\">\n                    {t('share-preview-menu.toggle-button.label', {context: 'first-line'})}\n                  </Text>\n                  <span />\n                  <Text muted size={1}>\n                    {t('share-preview-menu.toggle-button.label', {context: 'second-line'})}\n                  </Text>\n                </Grid>\n              </label>\n              <Box padding={3} paddingTop={2}>\n                <Stack space={3}>\n                  <Card\n                    tone={busy || !url ? 'transparent' : undefined}\n                    style={{\n                      position: 'relative',\n                      aspectRatio: '1 / 1',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <AnimatePresence>\n                      {busy ? (\n                        <MotionSpinner\n                          muted\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        />\n                      ) : url ? (\n                        <>\n                          <Suspense fallback={<Spinner />}>\n                            <QRCodeSVG\n                              title={t('share-preview-menu.qr-code.title', {url: url.toString()})}\n                              value={url.toString()}\n                              size={QrSize}\n                              color=\"var(--card-fg-color)\"\n                              logoSize={QrCodeLogoSize + QrCodeLogoPadding}\n                            />\n                            <MotionMonogram\n                              initial={{opacity: -0.5}}\n                              animate={{opacity: 1.5}}\n                              exit={{opacity: 0}}\n                            />\n                          </Suspense>\n                        </>\n                      ) : (\n                        <MotionText\n                          muted\n                          size={1}\n                          style={{maxWidth: '100px', textWrap: 'pretty', textAlign: 'center'}}\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        >\n                          {t('share-preview-menu.qr-code.placeholder')}\n                        </MotionText>\n                      )}\n                    </AnimatePresence>\n                  </Card>\n                  <Text muted size={1}>\n                    {t('share-preview-menu.qr-code.instructions')}\n                  </Text>\n                </Stack>\n              </Box>\n              <MenuDivider />\n              <MenuItem\n                disabled={!url || disabling}\n                icon={CopyIcon}\n                onClick={handleCopyUrl}\n                text={t('share-preview-menu.copy-url.text')}\n              />\n            </>\n          ) : (\n            <Card padding={2} tone=\"caution\" radius={3}>\n              <Text style={{textWrap: 'pretty'}}>\n                {t('share-preview-menu.error', {context: 'missing-grants'})}\n              </Text>\n            </Card>\n          )}\n        </Menu>\n      }\n      popover={{\n        constrainSize: true,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n})\nSharePreviewMenu.displayName = 'Memo(SharePreviewMenu)'\n","import {DesktopIcon, MobileDeviceIcon, PanelLeftIcon, RefreshIcon} from '@sanity/icons'\nimport {withoutSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {Box, Card, Flex, Hotkeys, Switch, Text} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {type RefObject, useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type HeaderOptions} from '../types'\nimport {useId} from '../useId'\nimport {OpenPreviewButton} from './OpenPreviewButton'\nimport {type PreviewProps} from './Preview'\nimport {PreviewLocationInput} from './PreviewLocationInput'\nimport {SharePreviewMenu} from './SharePreviewMenu'\n\n/** @public */\nexport interface PreviewHeaderProps extends PreviewProps {\n  iframeRef: RefObject<HTMLIFrameElement | null>\n  renderDefault: (props: PreviewHeaderProps) => React.JSX.Element\n}\n\nconst PreviewHeaderDefault = (props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n  const {\n    canSharePreviewAccess,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    iframeRef,\n    initialUrl,\n    navigatorEnabled,\n    onPathChange,\n    onRefresh,\n    openPopup,\n    overlaysConnection,\n    presentationRef,\n    perspective,\n    previewUrl,\n    setViewport,\n    targetOrigin,\n    toggleNavigator,\n    toggleOverlay,\n    viewport,\n    previewUrlRef,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const toggleViewportSize = useCallback(\n    () => setViewport(viewport === 'desktop' ? 'mobile' : 'desktop'),\n    [setViewport, viewport],\n  )\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = () => {\n    onRefresh(() => {\n      if (!iframeRef.current) {\n        return\n      }\n      presentationRef.send({type: 'iframe reload'})\n      // Funky way to reload an iframe without CORS issues\n      // ref.current.src = ref.current.src\n      Object.assign(iframeRef.current, {src: `${targetOrigin}${previewUrl || '/'}`})\n    })\n  }\n\n  const isLoading = useSelector(presentationRef, (state) => state.matches('loading'))\n  const isLoaded = useSelector(presentationRef, (state) => state.matches('loaded'))\n  const isRefreshing = useSelector(presentationRef, (state) =>\n    state.matches({loaded: 'refreshing'}),\n  )\n  const isReloading = useSelector(presentationRef, (state) => state.matches({loaded: 'reloading'}))\n  const overlaysEnabled = useSelector(\n    presentationRef,\n    (state) => state.context.visualEditingOverlaysEnabled,\n  )\n\n  const previewLocationRoute = useMemo(() => {\n    const previewURL = new URL(previewUrl || '/', targetOrigin)\n    const {pathname, search} = withoutSecretSearchParams(previewURL)\n\n    return `${pathname}${search}`\n  }, [previewUrl, targetOrigin])\n\n  const perspectiveToggleTooltipId = useId()\n\n  /**\n   * If the preview URL machine is busy it means it's about to change the target origin and reload the iframe,\n   * so we show a spinner\n   */\n  const previewUrlBusy = useSelector(previewUrlRef, (state) => state.hasTag('busy'))\n\n  return (\n    <Flex align=\"center\" gap={1} paddingX={1} style={{width: '100%'}}>\n      {toggleNavigator && (\n        <Button\n          aria-label={t('preview-frame.navigator.toggle-button.aria-label')}\n          icon={PanelLeftIcon}\n          mode=\"bleed\"\n          onClick={toggleNavigator}\n          selected={navigatorEnabled}\n          tooltipProps={{\n            content: <Text size={1}>{t('preview-frame.navigator.toggle-button.tooltip')}</Text>,\n            fallbackPlacements: ['bottom-start'],\n            placement: 'bottom',\n          }}\n        />\n      )}\n\n      <Tooltip\n        animate\n        content={\n          <Flex align=\"center\" style={{whiteSpace: 'nowrap'}}>\n            <Box padding={1}>\n              <Text size={1}>\n                {t('preview-frame.overlay.toggle-button.tooltip', {\n                  context: overlaysEnabled ? 'disable' : 'enable',\n                })}\n              </Text>\n            </Box>\n            <Box paddingY={1}>\n              <Hotkeys keys={['Alt']} style={{marginTop: -4, marginBottom: -4}} />\n            </Box>\n          </Flex>\n        }\n        fallbackPlacements={['bottom-start']}\n        placement=\"bottom\"\n        portal\n      >\n        <Card\n          as=\"label\"\n          flex=\"none\"\n          padding={3}\n          marginX={1}\n          style={{\n            lineHeight: 0,\n            borderRadius: 999,\n            userSelect: 'none',\n          }}\n          tone={overlaysEnabled ? 'transparent' : undefined}\n        >\n          <Flex align=\"center\" gap={3}>\n            <div style={{margin: -4}}>\n              <Switch\n                indeterminate={!isLoaded}\n                checked={overlaysEnabled}\n                onChange={toggleOverlay}\n                disabled={isLoading || overlaysConnection !== 'connected'}\n              />\n            </div>\n            <Box>\n              <Text muted={!overlaysEnabled} size={1} weight=\"medium\">\n                {t('preview-frame.overlay.toggle-button.text')}\n              </Text>\n            </Box>\n          </Flex>\n        </Card>\n      </Tooltip>\n\n      <Box flex={1}>\n        <PreviewLocationInput\n          previewUrlRef={previewUrlRef}\n          prefix={\n            <Box padding={1}>\n              <Tooltip\n                animate\n                content={\n                  <Text size={1}>\n                    {isLoaded\n                      ? t('preview-frame.refresh-button.tooltip')\n                      : t('preview-frame.status', {\n                          context: isLoading\n                            ? 'loading'\n                            : isRefreshing\n                              ? 'refreshing'\n                              : isReloading\n                                ? 'reloading'\n                                : 'unknown',\n                        })}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-end']}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label={t('preview-frame.refresh-button.aria-label')}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={isReloading || isRefreshing || previewUrlBusy}\n                  onClick={handleRefresh}\n                  tooltipProps={null}\n                />\n              </Tooltip>\n            </Box>\n          }\n          onChange={onPathChange}\n          suffix={\n            <Box padding={1}>\n              <OpenPreviewButton\n                openPopup={openPopup}\n                previewLocationOrigin={previewLocationOrigin}\n                previewLocationRoute={previewLocationRoute}\n                perspective={perspective}\n                targetOrigin={targetOrigin}\n              />\n            </Box>\n          }\n          value={previewLocationRoute}\n        />\n      </Box>\n\n      <Flex align=\"center\" flex=\"none\" gap={1}>\n        <Tooltip\n          animate\n          ref={(node) => {\n            node?.style.setProperty('view-transition-name', perspectiveToggleTooltipId)\n          }}\n          content={\n            <Text size={1}>\n              {t('preview-frame.viewport-button.tooltip', {\n                context: viewport === 'desktop' ? 'narrow' : 'full',\n              })}\n            </Text>\n          }\n          fallbackPlacements={['bottom-start']}\n          placement=\"bottom\"\n          portal\n        >\n          <Button\n            data-testid=\"preview-viewport-toggle\"\n            data-viewport={viewport}\n            aria-label={t('preview-frame.viewport-button.aria-label')}\n            icon={viewport === 'desktop' ? MobileDeviceIcon : DesktopIcon}\n            mode=\"bleed\"\n            onClick={toggleViewportSize}\n            tooltipProps={null}\n          />\n        </Tooltip>\n      </Flex>\n\n      {canSharePreviewAccess && (\n        <Flex align=\"center\" flex=\"none\" gap={1}>\n          <SharePreviewMenu\n            canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n            canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n            previewLocationRoute={previewLocationRoute}\n            initialUrl={initialUrl}\n            perspective={perspective}\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\n/** @internal */\nexport function PreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n): React.JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const renderDefault = useCallback((props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n    return <PreviewHeaderDefault {...props} />\n  }, [])\n\n  const HeaderComponent = props.options?.component\n  const header = HeaderComponent ? (\n    <HeaderComponent {...props} renderDefault={renderDefault} />\n  ) : (\n    renderDefault(props)\n  )\n\n  return (\n    <Card flex=\"none\" padding={2} borderBottom style={{position: 'relative'}}>\n      <Flex align=\"center\" style={{minHeight: 0}}>\n        {header}\n      </Flex>\n    </Card>\n  )\n}\n","/* eslint-disable react/no-unused-prop-types */\nimport {createConnectionMachine, createController} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamPreviewPerspective,\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n  type VercelSetBypassCookieValue,\n} from '@sanity/preview-url-secret/constants'\nimport {\n  Card,\n  Code,\n  Flex,\n  Label,\n  Spinner,\n  Stack,\n  Text,\n  usePrefersReducedMotion,\n  useToast,\n} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {AnimatePresence, motion, MotionConfig} from 'framer-motion'\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n} from 'react'\nimport {flushSync} from 'react-dom'\nimport {Translate, useTranslation} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Button, TooltipDelayGroupProvider} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {MAX_TIME_TO_OVERLAYS_CONNECTION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PresentationMachineRef} from '../machines/presentation-machine'\nimport {type PreviewUrlRef} from '../machines/preview-url'\nimport {\n  type ConnectionStatus,\n  type HeaderOptions,\n  type PresentationPerspective,\n  type PresentationViewport,\n} from '../types'\nimport {useAllowPatterns} from '../useAllowPatterns'\nimport {usePresentationNavigate} from '../usePresentationNavigate'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {IFrame} from './IFrame'\nimport {PreviewHeader} from './PreviewHeader'\n\nconst MotionFlex = motion.create(Flex)\n\n/** @public */\nexport interface PreviewProps {\n  canSharePreviewAccess: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  header?: HeaderOptions\n  initialUrl: URL\n  loadersConnection: ConnectionStatus\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  onRefresh: (fallback: () => void) => void\n  openPopup: (url: string) => void\n  overlaysConnection: ConnectionStatus\n  presentationRef: PresentationMachineRef\n  perspective: PresentationPerspective\n  previewUrl?: string\n  setViewport: (mode: 'desktop' | 'mobile') => void\n  targetOrigin: string\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  viewport: PresentationViewport\n  vercelProtectionBypass: string | null\n  previewUrlRef: PreviewUrlRef\n}\n\nexport const Preview = memo(\n  forwardRef<HTMLIFrameElement, PreviewProps>(function PreviewComponent(props, forwardedRef) {\n    const {\n      header,\n      initialUrl,\n      loadersConnection,\n      overlaysConnection,\n      perspective,\n      viewport,\n      vercelProtectionBypass,\n      presentationRef,\n      previewUrlRef,\n    } = props\n\n    const [stablePerspective, setStablePerspective] = useState<typeof perspective | null>(null)\n    const urlPerspective = encodeStudioPerspective(\n      stablePerspective === null ? perspective : stablePerspective,\n    )\n    const previewUrl = useMemo(() => {\n      const url = new URL(initialUrl)\n      // Always set the perspective that's being used, even if preview mode isn't configured\n      if (!url.searchParams.get(urlSearchParamPreviewPerspective)) {\n        url.searchParams.set(urlSearchParamPreviewPerspective, urlPerspective)\n      }\n\n      if (vercelProtectionBypass || url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        // samesitenone is required since the request is from an iframe\n        url.searchParams.set(\n          urlSearchParamVercelSetBypassCookie,\n          'samesitenone' satisfies VercelSetBypassCookieValue,\n        )\n      }\n      // If there's a vercel protection bypass secret in the context, set it if none exists already\n      if (vercelProtectionBypass && !url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        url.searchParams.set(urlSearchParamVercelProtectionBypass, vercelProtectionBypass)\n      }\n\n      return url\n    }, [initialUrl, urlPerspective, vercelProtectionBypass])\n\n    useEffect(() => {\n      /**\n       * If the preview iframe is connected to the loader, we know that switching the perspective can be done without reloading the iframe.\n       */\n      if (loadersConnection === 'connected') {\n        /**\n         * Only set the stable perspective if it hasn't been set yet.\n         */\n        setStablePerspective((prev) => (prev === null ? perspective : prev))\n      }\n    }, [loadersConnection, perspective])\n\n    const {t} = useTranslation(presentationLocaleNamespace)\n    const {devMode} = usePresentationTool()\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const ref = useRef<HTMLIFrameElement | null>(null)\n\n    const previewHeader = <PreviewHeader {...props} iframeRef={ref} options={header} />\n\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    const isLoading = useSelector(\n      presentationRef,\n      (state) => state.matches('loading') || state.matches({loaded: 'reloading'}),\n    )\n\n    const [timedOut, setTimedOut] = useState(false)\n    const isRefreshing = useSelector(presentationRef, (state) =>\n      state.matches({loaded: 'refreshing'}),\n    )\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy = isLoading || isRefreshing || overlaysConnection === 'connecting'\n\n    const handleRetry = useCallback(() => {\n      if (!ref.current) {\n        return\n      }\n\n      ref.current.src = previewUrl.toString()\n\n      presentationRef.send({type: 'iframe reload'})\n    }, [presentationRef, previewUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] = useState(false)\n    useEffect(() => {\n      if (isLoading || isRefreshing) {\n        return undefined\n      }\n\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 5_000)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [overlaysConnection, isLoading, isRefreshing])\n\n    useEffect(() => {\n      if (isLoading || isRefreshing || !showOverlaysConnectionStatus) {\n        return undefined\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          console.error(\n            `Unable to connect to visual editing. Make sure you've setup '@sanity/visual-editing' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [isLoading, overlaysConnection, isRefreshing, showOverlaysConnectionStatus])\n\n    const onIFrameLoad = useCallback(() => {\n      presentationRef.send({type: 'iframe loaded'})\n    }, [presentationRef])\n\n    const preventIframeInteraction = useMemo(() => {\n      return (\n        (isLoading || (overlaysConnection === 'connecting' && !isRefreshing)) && !continueAnyway\n      )\n    }, [continueAnyway, isLoading, isRefreshing, overlaysConnection])\n\n    const canUseViewTransition = useSyncExternalStore(\n      // eslint-disable-next-line no-empty-function\n      useCallback(() => () => {}, []),\n      () => CSS.supports(`(view-transition-name: test)`),\n    )\n    const iframeAnimations = useMemo(() => {\n      return [\n        preventIframeInteraction ? 'background' : 'active',\n        isLoading ? 'reloading' : 'idle',\n        // If CSS View Transitions are supported, then transition iframe viewport dimensions with that instead of Motion\n        canUseViewTransition ? '' : viewport,\n        showOverlaysConnectionStatus && !continueAnyway ? 'timedOut' : '',\n      ]\n    }, [\n      canUseViewTransition,\n      continueAnyway,\n      isLoading,\n      preventIframeInteraction,\n      showOverlaysConnectionStatus,\n      viewport,\n    ])\n\n    const [currentViewport, setCurrentViewport] = useState(viewport)\n    const [iframeStyle, setIframeStyle] = useState(iframeVariants[viewport])\n    useEffect(() => {\n      if (canUseViewTransition && viewport !== currentViewport) {\n        const update = () => {\n          setCurrentViewport(viewport)\n          setIframeStyle(iframeVariants[viewport])\n        }\n        if (\n          !prefersReducedMotion &&\n          'startViewTransition' in document &&\n          typeof document.startViewTransition === 'function'\n        ) {\n          document.startViewTransition({\n            update: () => flushSync(() => update()),\n            types: ['sanity-iframe-viewport'],\n          })\n        } else {\n          update()\n        }\n      }\n    }, [canUseViewTransition, prefersReducedMotion, currentViewport, viewport])\n\n    const toast = useToast()\n    const allowOrigins = useAllowPatterns(previewUrlRef)\n    const [checkOrigin, setCheckOrigin] = useState<false | string>(false)\n    const [reportedMismatches] = useState(new Set<string>())\n    const reportMismatchingOrigin = useEffectEvent((reportedOrigin: string) => {\n      if (allowOrigins.some((allow) => allow.test(reportedOrigin))) {\n        setCheckOrigin(reportedOrigin)\n        return\n      }\n      if (reportedMismatches.has(reportedOrigin)) return\n      reportedMismatches.add(reportedOrigin)\n      console.warn('Visual Editing is here but misconfigured', {reportedOrigin})\n      toast.push({\n        closable: true,\n        id: `presentation-iframe-origin-mismatch-${reportedOrigin}`,\n        status: 'error',\n        duration: Infinity,\n        title: t('preview-frame.configuration.error.title'),\n        description: (\n          <Translate\n            t={t}\n            i18nKey=\"preview-frame.configuration.error.description\"\n            components={{Code: 'code'}}\n            values={{\n              targetOrigin: previewUrl.origin,\n              reportedOrigin,\n            }}\n          />\n        ),\n      })\n    })\n    const navigate = usePresentationNavigate()\n    const navigateEvent = useEffectEvent((url: string) => {\n      if (!checkOrigin) return\n      const nextUrl = new URL(url, checkOrigin)\n      navigate(`${checkOrigin}${nextUrl.pathname}${nextUrl.search}${nextUrl.hash}`)\n    })\n    useEffect(() => {\n      if (!checkOrigin) {\n        return undefined\n      }\n      const target = ref.current?.contentWindow\n      if (!target) {\n        return undefined\n      }\n      const controller = createController({targetOrigin: checkOrigin})\n      controller.addTarget(target)\n      const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n        {\n          name: 'presentation',\n          heartbeat: true,\n          connectTo: 'visual-editing',\n        },\n        createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n          actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n        }),\n      )\n\n      comlink.on('visual-editing/navigate', (data) => {\n        navigateEvent(data.url)\n      })\n      const stop = comlink.start()\n\n      return () => {\n        stop()\n        controller.destroy()\n      }\n    }, [checkOrigin])\n    useEffect(() => {\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const interval = setInterval(() => {\n          ref.current?.contentWindow?.postMessage(\n            {domain: 'sanity/channels', from: 'presentation', type: 'presentation/status'},\n            /**\n             * The targetOrigin is set to '*' intentionally here, as we need to find out if the iframe is misconfigured and has the wrong origin\n             */\n            '*',\n          )\n        }, 1_000)\n\n        const controller = new AbortController()\n        window.addEventListener(\n          'message',\n          ({data}: MessageEvent<unknown>) => {\n            /**\n             * Listen for replies to presentation/status\n             */\n            if (\n              data &&\n              typeof data === 'object' &&\n              'domain' in data &&\n              data.domain === 'sanity/channels' &&\n              'type' in data &&\n              data.type === 'visual-editing/status' &&\n              'data' in data &&\n              typeof data.data === 'object' &&\n              data.data &&\n              'origin' in data.data &&\n              typeof data.data.origin === 'string'\n            ) {\n              reportMismatchingOrigin(data.data.origin)\n            }\n          },\n          {signal: controller.signal},\n        )\n\n        return () => {\n          controller.abort()\n          clearInterval(interval)\n        }\n      }\n      return undefined\n    }, [overlaysConnection, timedOut])\n\n    return (\n      <MotionConfig transition={prefersReducedMotion ? {duration: 0} : undefined}>\n        <TooltipDelayGroupProvider>\n          {previewHeader}\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={(canUseViewTransition ? currentViewport : viewport) === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !isLoading &&\n                !isRefreshing &&\n                // viewport, // using CSS View Transitions instead of framer motion to drive this\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]: 'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition: '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          mode=\"ghost\"\n                          text={t('preview-frame.continue-button.text')}\n                          style={{opacity: 0}}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={4}>\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut\n                              ? t('preview-frame.status', {context: 'timeout'})\n                              : t('preview-frame.status', {context: 'connecting'})}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text={t('preview-frame.continue-button.text')}\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (isLoading || (overlaysConnection === 'connecting' && !isRefreshing)) &&\n                  !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        {t('preview-frame.status', {context: 'loading'})}\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: '0',\n                      position: 'absolute',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message={t('preview-frame.connection.error.text')}\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.overlay.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: overlaysConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.loader.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: loadersConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                animate={iframeAnimations}\n                initial={['background']}\n                onLoad={onIFrameLoad}\n                preventClick={preventIframeInteraction}\n                ref={ref}\n                src={previewUrl.toString()}\n                style={iframeStyle}\n                variants={iframeVariants}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  }),\n)\nPreview.displayName = 'Memo(ForwardRef(Preview))'\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst errorVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","/** @internal */\nexport function defineWarnOnce() {\n  let warned = false\n  // oxlint-disable-next-line no-explicit-any\n  return (...args: any[]): void => {\n    if (!warned) {\n      console.warn(...args)\n      warned = true\n    }\n  }\n}\n","import {validateApiPerspective} from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport {type MutableRefObject, useCallback, useMemo, useRef, useState} from 'react'\n\nimport {type FrameState, type PresentationPerspective} from './types'\nimport {defineWarnOnce} from './util/warnOnce'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\ntype DocumentCache = Record<string, DocumentOnPage>\ntype KeyedDocumentCache = Record<string, DocumentCache>\n\nconst warnOnceAboutCrossDatasetReference = defineWarnOnce()\n\n/**\n * @TODO should be refactored to an lru-cache that is keyed by the perspective, which could be an array (if it is, it should use consistent sorting),\n *       and the url path (optionally the origin too), so that swapping between perspectives and urls is fast.\n */\nexport function useDocumentsOnPage(\n  perspective: PresentationPerspective,\n  frameStateRef: MutableRefObject<FrameState>,\n): [\n  DocumentOnPage[],\n  (key: string, perspective: PresentationPerspective, state: DocumentOnPage[]) => void,\n] {\n  validateApiPerspective(perspective)\n\n  const [published, setPublished] = useState<KeyedDocumentCache>({})\n  const [previewDrafts, setPreviewDrafts] = useState<KeyedDocumentCache>({})\n\n  // Used to compare the frame url with its value when the cache was last updated\n  // If the url has changed, the entire cache is replaced\n  const urlRef = useRef<string | undefined>('')\n\n  const setDocumentsOnPage = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (key: string, perspective: PresentationPerspective, sourceDocuments: DocumentOnPage[] = []) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // @TODO Handle cross dataset references\n\n          warnOnceAboutCrossDatasetReference(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache = perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((cache) => {\n        // Create the `next` documents, dedupe by `_id`\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n\n        // If the frame url has changed, replace the entire cache with the next documents\n        if (urlRef.current !== frameStateRef.current.url) {\n          urlRef.current = frameStateRef.current.url\n          return {[key]: next}\n        }\n\n        // If the keyed cache has changed, return the entire cache and replace the keyed part\n        const prev = cache[key]\n        if (!isEqual(prev, next)) {\n          return {...cache, [key]: next}\n        }\n\n        // Otherwise return the entire cache as is\n        return cache\n      })\n    },\n    [frameStateRef],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    const keyedCache = perspective === 'published' ? published : previewDrafts\n    const uniqueDocuments = Object.values(keyedCache).reduce((acc, cache) => {\n      Object.values(cache).forEach((doc) => {\n        acc[doc._id] = doc\n      })\n      return acc\n    }, {})\n\n    return Object.values(uniqueDocuments)\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import {type ResponseQueryOptions} from '@sanity/client'\nimport {match, type Path} from 'path-to-regexp'\nimport {useEffect, useRef, useState} from 'react'\nimport {useClient, usePerspective} from 'sanity'\nimport {type RouterState, useRouter} from 'sanity/router'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {API_VERSION} from './constants'\nimport {\n  type DocumentResolver,\n  type DocumentResolverContext,\n  type MainDocument,\n  type MainDocumentState,\n  type PresentationNavigate,\n} from './types'\n\n// Helper function to \"unwrap\" a result when it is either explicitly provided or\n// returned as the result of a passed function\nfunction fnOrObj<T, U>(arg: T | ((ctx: U) => T), context: U): T {\n  return arg instanceof Function ? arg(context) : arg\n}\n\nfunction getQueryFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): string | undefined {\n  if (resolver.resolve) {\n    const filter = resolver.resolve(context)?.filter\n    return filter\n      ? `// groq\n*[${filter}][0]{_id, _type}`\n      : undefined\n  }\n\n  if ('type' in resolver) {\n    return `// groq\n*[_type == \"${resolver.type}\"][0]{_id, _type}`\n  }\n\n  return `// groq\n*[${fnOrObj(resolver.filter, context)}][0]{_id, _type}`\n}\n\nfunction getParamsFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): Record<string, string> {\n  if (resolver.resolve) {\n    return resolver.resolve(context)?.params ?? context.params\n  }\n\n  if ('type' in resolver) {\n    return {}\n  }\n\n  return fnOrObj(resolver.params, context) ?? context.params\n}\n\nexport function getRouteContext(route: Path, url: URL): DocumentResolverContext | undefined {\n  const routes = Array.isArray(route) ? route : [route]\n\n  for (route of routes) {\n    let {origin} = url\n    let path = route\n\n    // Handle absolute URLs\n    if (typeof route === 'string') {\n      try {\n        const absolute = new URL(route)\n\n        // If we are dealing with an absolute URL, ensure the origins match\n        if (absolute.origin !== origin) continue\n\n        origin = absolute.origin\n        path = absolute.pathname\n      } catch {\n        // Ignore, as we assume a relative path\n      }\n    }\n\n    try {\n      const matcher = match<Record<string, string>>(path, {decode: decodeURIComponent})\n      const result = matcher(url.pathname)\n      if (result) {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const {params, path} = result\n        return {origin, params, path}\n      }\n    } catch (e) {\n      throw new Error(`\"${route}\" is not a valid route pattern`)\n    }\n  }\n  return undefined\n}\n\nexport function useMainDocument(props: {\n  navigate?: PresentationNavigate\n  navigationHistory: RouterState[]\n  path?: string\n  targetOrigin: string\n  resolvers?: DocumentResolver[]\n}): MainDocumentState | undefined {\n  const {navigate, navigationHistory, path, targetOrigin, resolvers = []} = props\n  const {state: routerState} = useRouter()\n  const {perspectiveStack} = usePerspective()\n  const client = useClient({apiVersion: API_VERSION})\n  const relativeUrl =\n    path || routerState._searchParams?.find(([key]) => key === 'preview')?.[1] || ''\n\n  const [mainDocumentState, setMainDocumentState] = useState<MainDocumentState | undefined>(\n    undefined,\n  )\n  const mainDocumentIdRef = useRef<string | undefined>(undefined)\n\n  const handleResponse = useEffectEvent((doc: MainDocument | undefined, url: URL) => {\n    if (!doc || mainDocumentIdRef.current !== doc._id) {\n      setMainDocumentState({\n        document: doc,\n        path: url.pathname,\n      })\n      mainDocumentIdRef.current = doc?._id\n\n      // We only want to force a navigation to the main document if\n      // the path changed but the document ID did not. An explicit\n      // document navigation should take precedence over displaying\n      // the main document. We determine if an explicit document\n      // navigation has occured by comparing the IDs of the last two\n      // resultant navigation states.\n      if (navigationHistory.at(-1)?.id === navigationHistory.at(-2)?.id) {\n        navigate?.({\n          state: {\n            id: doc?._id,\n            type: doc?._type,\n          },\n        })\n      }\n    }\n  })\n\n  useEffect(() => {\n    const url = new URL(relativeUrl, targetOrigin)\n\n    if (resolvers.length) {\n      let result:\n        | {\n            context: DocumentResolverContext\n            resolver: DocumentResolver\n          }\n        | undefined\n      for (const resolver of resolvers) {\n        const context = getRouteContext(resolver.route, url)\n        if (context) {\n          result = {context, resolver}\n          break\n        }\n      }\n\n      if (result) {\n        const query = getQueryFromResult(result.resolver, result.context)\n        const params = getParamsFromResult(result.resolver, result.context)\n        if (query) {\n          const controller = new AbortController()\n          const options: ResponseQueryOptions = {\n            perspective: perspectiveStack,\n            signal: controller.signal,\n            tag: 'use-main-document',\n          }\n\n          client\n            .fetch<MainDocument | undefined>(query, params, options)\n            .then((doc) => handleResponse(doc, url))\n            .catch((e) => {\n              if (e instanceof Error && e.name === 'AbortError') return\n              setMainDocumentState({document: undefined, path: url.pathname})\n              mainDocumentIdRef.current = undefined\n            })\n          return () => {\n            controller.abort()\n          }\n        }\n      }\n    }\n    setMainDocumentState(undefined)\n    mainDocumentIdRef.current = undefined\n    return undefined\n  }, [client, perspectiveStack, relativeUrl, resolvers, targetOrigin])\n\n  return mainDocumentState\n}\n","import {studioPath} from '@sanity/client/csm'\nimport {urlStringToPath} from '@sanity/visual-editing-csm'\n\nimport {type PresentationStateParams} from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(state: PresentationStateParams): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport {type MutableRefObject, useCallback, useLayoutEffect, useMemo, useRef, useState} from 'react'\nimport {getPublishedId} from 'sanity'\nimport {type RouterContextValue, type RouterState, type SearchParam} from 'sanity/router'\n\nimport {\n  type CombinedSearchParams,\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from './types'\nimport {parseRouterState} from './util/parse'\n\nfunction pruneObject<T extends RouterState | PresentationParamsContextValue>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\n/**\n * Ensures the array contains all members of the union T.\n */\nconst exhaustiveTupleOf =\n  <T>() =>\n  <U extends T[]>(array: U & ([T] extends [U[number]] ? unknown : 'Invalid') & {0: T}) =>\n    array\n\nconst maintainOnDocumentChange = exhaustiveTupleOf<keyof PresentationSearchParams>()([\n  'perspective',\n  'preview',\n  'viewport',\n])\n\nconst maintainOnSameDocument = exhaustiveTupleOf<keyof StructureDocumentPaneParams>()([\n  'changesInspectorTab',\n  'comment',\n  'inspect',\n  'instruction',\n  'parentRefPath',\n  'path',\n  'pathKey',\n  'rev',\n  'since',\n  'template',\n  'templateParams',\n  'version',\n  'view',\n])\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  frameStateRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  frameStateRef: MutableRefObject<FrameState>\n}): {\n  isSameDocument: (state: PresentationStateParams) => boolean\n  navigate: PresentationNavigate\n  navigationHistory: RouterState[]\n  params: PresentationParamsContextValue\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n} {\n  const params = useMemo<PresentationParamsContextValue>(() => {\n    const {id, path, type} = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview: routerSearchParams.preview || initialPreviewUrl.toString(),\n      perspective: routerSearchParams.perspective,\n      viewport: routerSearchParams.viewport,\n      inspect: routerSearchParams.inspect,\n      parentRefPath: routerSearchParams.parentRefPath,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      templateParams: routerSearchParams.templateParams,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n      changesInspectorTab: routerSearchParams.changesInspectorTab as 'history' | 'review',\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const structureParams = useMemo<StructureDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      parentRefPath: params.parentRefPath,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      templateParams: params.templateParams,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n      changesInspectorTab: params.changesInspectorTab,\n    })\n    return pruned\n  }, [\n    params.changesInspectorTab,\n    params.comment,\n    params.inspect,\n    params.instruction,\n    params.path,\n    params.pathKey,\n    params.parentRefPath,\n    params.rev,\n    params.since,\n    params.template,\n    params.templateParams,\n    params.view,\n  ])\n\n  const searchParams = useMemo<PresentationSearchParams>(() => {\n    const pruned = pruneObject({\n      perspective: params.perspective,\n      preview: params.preview,\n      viewport: params.viewport,\n    })\n    return pruned\n  }, [params.perspective, params.preview, params.viewport])\n\n  const routerStateRef = useRef(routerState)\n\n  useLayoutEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const [navigationHistory, setNavigationHistory] = useState<RouterState[]>([routerState])\n\n  // Helper function to check if a given document is the same as the one in the\n  // current router state\n  const isSameDocument = useCallback(({id, type}: PresentationStateParams) => {\n    const {current} = routerStateRef\n    return id === current.id && type === current.type\n  }, [])\n\n  const navigate = useCallback<PresentationNavigate>(\n    (options) => {\n      const {state, params, replace = false} = options\n\n      // Force navigation to use published IDs only\n      if (state?.id) state.id = getPublishedId(state.id)\n\n      // Get the current state and params\n      const {current} = routerStateRef\n      const currentState = {\n        id: current.id,\n        type: current.type,\n        path: current.path,\n      } satisfies PresentationStateParams\n      const currentParams = Object.fromEntries(current._searchParams || []) as CombinedSearchParams\n\n      // If state is provided, replace the current state with the provided\n      // state, otherwise maintain the current state\n      const nextState = state || currentState\n\n      // Different params need to be maintained under different conditions\n      const maintainedParamKeys = [\n        ...maintainOnDocumentChange,\n        ...(isSameDocument(nextState) ? maintainOnSameDocument : []),\n      ] satisfies (keyof CombinedSearchParams)[]\n\n      const maintainedParams = maintainedParamKeys.reduce((acc, key) => {\n        // @ts-expect-error changesInspectorTab union type doesn't play nicely\n        // here, if it were just a string it would be fine\n        acc[key] = currentParams[key]\n        return acc\n      }, {} as Partial<CombinedSearchParams>)\n\n      // If params are provided, merge them with the maintained params\n      const nextParams = {...maintainedParams, ...params}\n\n      const nextRouterState = {\n        ...nextState,\n        _searchParams: Object.entries(nextParams).reduce(\n          (acc, [key, value]) => [...acc, [key, value] as SearchParam],\n          [] as SearchParam[],\n        ),\n      } satisfies RouterState\n\n      setNavigationHistory((prev) => [...prev, nextRouterState])\n      routerNavigate(nextRouterState, {replace})\n    },\n    [isSameDocument, routerNavigate],\n  )\n\n  return {\n    isSameDocument,\n    navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  }\n}\n","import {type Controller} from '@sanity/comlink'\nimport {useCallback, useEffect, useState} from 'react'\n\nimport {POPUP_CHECK_INTERVAL} from './constants'\n\n/**\n * A hook for managing popup Window contexts\n *\n * This hook handles:\n * - Opening new popup Windows, and adding them as targets to the controller\n * - Tracking existing popup windows, and cleaning up closed popups\n *\n * @param controller - Comlink controller instance that manages communication\n * between Window contexts\n *\n * @returns An object containing:\n * - popups: A Set of currently open popup Window objects\n * - open: Function to open a new popup Window with the specified URL\n *\n */\nexport const usePopups = (\n  controller?: Controller,\n): {\n  popups: Set<Window>\n  open: (url: string) => void\n} => {\n  // State to keep track of open popup windows\n  const [popups, setPopups] = useState<Set<Window>>(() => new Set())\n\n  // Function to open a new popup window\n  const open = useCallback((url: string) => {\n    const source = window.open(url, '_blank')\n    if (source) {\n      setPopups((prev) => new Set(prev).add(source))\n    }\n  }, [])\n\n  // Handles syncing the existing popups with the controller\n  useEffect(() => {\n    const unsubs: Array<() => void> = []\n    if (popups.size && controller) {\n      // loop popups and add targets\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          unsubs.push(controller.addTarget(source))\n        }\n      }\n    }\n    return () => {\n      unsubs.forEach((unsub) => unsub())\n    }\n  }, [controller, popups])\n\n  // Checks for closed popups and removes them from the tracked Set\n  useEffect(() => {\n    if (popups.size) {\n      const interval = setInterval(() => {\n        const closed = new Set<Window>()\n        for (const source of popups) {\n          if (source && 'closed' in source && source.closed) {\n            closed.add(source)\n          }\n        }\n        if (closed.size) {\n          setPopups((prev) => {\n            const next = new Set(prev)\n            for (const source of closed) {\n              next.delete(source)\n            }\n            return next\n          })\n        }\n      }, POPUP_CHECK_INTERVAL)\n\n      return () => {\n        clearInterval(interval)\n      }\n    }\n    return undefined\n  }, [popups])\n\n  return {popups, open}\n}\n","import {usePerspective} from 'sanity'\n\nimport {type PresentationPerspective} from './types'\n\n/**\n * @internal\n */\nexport function usePresentationPerspective(): PresentationPerspective {\n  const {perspectiveStack, selectedPerspectiveName = 'drafts', selectedReleaseId} = usePerspective()\n  const perspective = (\n    selectedReleaseId ? perspectiveStack : selectedPerspectiveName\n  ) as PresentationPerspective\n  return perspective\n}\n","import {type StatusEvent} from '@sanity/comlink'\nimport {useCallback, useMemo, useState} from 'react'\n\nimport {type ConnectionStatus} from './types'\n\n/**\n * A hook that manages and returns the connection status of multiple channels\n *\n * returns an array containing the\n * current status and a function to update the status based on incoming events\n *\n * The status can be one of the following:\n * - 'connected': If any channel is connected\n * - 'connecting': If the first connection is being established\n * - 'reconnecting': If a reconnection is in progress\n * - 'idle': If no connections have been made yet\n *\n * The function to update the status takes a `StatusEvent` object which includes\n * the channel and the status\n */\nexport function useStatus(): [ConnectionStatus, (event: StatusEvent) => void] {\n  // State to keep track of the status of each channel\n  const [statusMap, setStatusMap] = useState(\n    new Map<string, {status: ConnectionStatus; hasConnected: boolean}>(),\n  )\n\n  // Memoized computation of the overall status based on the status of individual channels\n  const memoStatus = useMemo(() => {\n    const values = Array.from(statusMap.values())\n    // If any channel is connected, return the `connected` status\n    if (values.find(({status}) => status === 'connected')) {\n      return 'connected'\n    }\n    // If the initial connection is being established, return `connecting` status\n    const handshaking = values.filter(({status}) => status === 'connecting')\n    if (handshaking.length) {\n      return handshaking.some(({hasConnected}) => !hasConnected) ? 'connecting' : 'reconnecting'\n    }\n    // If nothing has happened yet, return `idle` status\n    return 'idle'\n  }, [statusMap])\n\n  // Callback to update the status map based on the received event\n  const setStatusFromEvent = useCallback((event: StatusEvent) => {\n    setStatusMap((prev) => {\n      const next = new Map(prev)\n      if (event.status === 'disconnected') {\n        // Remove the channel from the map if a disconnect event is received\n        next.delete(event.connection)\n      } else {\n        // Update the status and connection flag for the channel\n        const hasConnected =\n          next.get(event.connection)?.hasConnected || event.status === 'connected'\n        const status = event.status === 'handshaking' ? 'connecting' : event.status\n        next.set(event.connection, {status, hasConnected})\n      }\n      return next\n    })\n  }, [])\n\n  // Return the overall status and the function to update the status\n  return [memoStatus, setStatusFromEvent]\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport {\n  type Controller,\n  createConnectionMachine,\n  createController,\n  type Message,\n} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type PreviewKitNodeMsg,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n} from '@sanity/preview-url-secret/constants'\nimport {BoundaryElementProvider, Flex} from '@sanity/ui'\nimport {useActorRef, useSelector} from '@xstate/react'\nimport {lazy, Suspense, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type CommentIntentGetter,\n  COMMENTS_INSPECTOR_NAME,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  useProjectId,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {type RouterContextValue, useRouter} from 'sanity/router'\nimport {styled} from 'styled-components'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {DEFAULT_TOOL_NAME, EDIT_INTENT_MODE} from './constants'\nimport PostMessageFeatures from './features/PostMessageFeatures'\nimport {presentationMachine} from './machines/presentation-machine'\nimport {type PreviewUrlRef} from './machines/preview-url'\nimport {SharedStateProvider} from './overlays/SharedStateProvider'\nimport {Panel} from './panels/Panel'\nimport {Panels} from './panels/Panels'\nimport {PresentationContent} from './PresentationContent'\nimport {PresentationNavigateProvider} from './PresentationNavigateProvider'\nimport {usePresentationNavigator} from './PresentationNavigator'\nimport {PresentationParamsProvider} from './PresentationParamsProvider'\nimport {PresentationProvider} from './PresentationProvider'\nimport {Preview} from './preview/Preview'\nimport {\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationPluginOptions,\n  type PresentationStateParams,\n  type PresentationViewport,\n  type StructureDocumentPaneParams,\n  type VisualEditingConnection,\n} from './types'\nimport {useAllowPatterns} from './useAllowPatterns'\nimport {useDocumentsOnPage} from './useDocumentsOnPage'\nimport {useMainDocument} from './useMainDocument'\nimport {useParams} from './useParams'\nimport {usePopups} from './usePopups'\nimport {usePresentationPerspective} from './usePresentationPerspective'\nimport {useStatus} from './useStatus'\nimport {useTargetOrigin} from './useTargetOrigin'\nimport {debounce} from './util/debounce'\n\nconst LiveQueries = lazy(() => import('./loader/LiveQueries'))\nconst PostMessageDocuments = lazy(() => import('./overlays/PostMessageDocuments'))\nconst PostMessageRefreshMutations = lazy(() => import('./editor/PostMessageRefreshMutations'))\nconst PostMessagePerspective = lazy(() => import('./PostMessagePerspective'))\nconst PostMessagePreviewSnapshots = lazy(() => import('./editor/PostMessagePreviewSnapshots'))\nconst PostMessageSchema = lazy(() => import('./overlays/schema/PostMessageSchema'))\nconst PostMessageTelemetry = lazy(() => import('./PostMessageTelemetry'))\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  vercelProtectionBypass: string | null\n  initialPreviewUrl: URL\n  previewUrlRef: PreviewUrlRef\n}): React.JSX.Element {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    tool,\n    vercelProtectionBypass,\n    initialPreviewUrl,\n    previewUrlRef,\n  } = props\n\n  const allowOrigins = useAllowPatterns(previewUrlRef)\n  const targetOrigin = useTargetOrigin(previewUrlRef)\n\n  const components = tool.options?.components\n  const name = tool.name || DEFAULT_TOOL_NAME\n  const {unstable_navigator, unstable_header} = components || {}\n\n  const {navigate: routerNavigate, state: routerState} = useRouter() as RouterContextValue & {\n    state: PresentationStateParams\n  }\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n  const perspective = usePresentationPerspective()\n\n  const canSharePreviewAccess = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewMode?.shareAccess !== false,\n  )\n\n  const [devMode] = useState(() => {\n    const option = tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return typeof window !== 'undefined' && window.location.hostname === 'localhost'\n  })\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [controller, setController] = useState<Controller>()\n  const [visualEditingComlink, setVisualEditingComlink] = useState<VisualEditingConnection | null>(\n    null,\n  )\n\n  const frameStateRef = useRef<FrameState>({\n    title: undefined,\n    url: undefined,\n  })\n\n  const {isSameDocument, navigate, navigationHistory, params, searchParams, structureParams} =\n    useParams({\n      initialPreviewUrl,\n      routerNavigate,\n      routerState,\n      routerSearchParams,\n      frameStateRef,\n    })\n\n  const presentationRef = useActorRef(presentationMachine)\n\n  const viewport = useMemo(() => (params.viewport ? 'mobile' : 'desktop'), [params.viewport])\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective, frameStateRef)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const mainDocumentState = useMainDocument({\n    navigate,\n    navigationHistory,\n    path: params.preview,\n    targetOrigin,\n    resolvers: tool.options?.resolve?.mainDocuments,\n  })\n\n  const [overlaysConnection, setOverlaysConnection] = useStatus()\n  const [loadersConnection, setLoadersConnection] = useStatus()\n  const [previewKitConnection, setPreviewKitConnection] = useStatus()\n\n  const {open: handleOpenPopup} = usePopups(controller)\n\n  const isLoading = useSelector(presentationRef, (state) => state.matches('loading'))\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target || isLoading) return undefined\n\n    const controller = createController({targetOrigin})\n    controller.addTarget(target)\n    setController(controller)\n\n    return () => {\n      controller.destroy()\n      setController(undefined)\n    }\n  }, [targetOrigin, isLoading])\n\n  const handleNavigate = useEffectEvent<PresentationNavigate>((options) => {\n    navigate(options)\n  })\n\n  useEffect(() => {\n    if (!controller) return undefined\n\n    const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n      {\n        name: 'presentation',\n        heartbeat: true,\n        connectTo: 'visual-editing',\n      },\n      createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n      }),\n    )\n\n    comlink.on('visual-editing/focus', (data) => {\n      if (!('id' in data)) return\n      handleNavigate({\n        state: {\n          type: data.type,\n          id: data.id,\n          path: data.path,\n        },\n      })\n    })\n\n    comlink.on('visual-editing/navigate', (data) => {\n      const {title} = data\n      let url = data.url\n      /**\n       * The URL is relative, we need to resolve it to an absolute URL\n       */\n      if (!url.startsWith('http')) {\n        try {\n          url = new URL(url, targetOrigin).toString()\n        } catch {\n          // ignore\n        }\n      }\n\n      if (frameStateRef.current.url !== url) {\n        try {\n          // Handle bypass params being forwarded to the final URL\n          const [urlWithoutSearch, search] = url.split('?')\n          const searchParams = new URLSearchParams(search)\n          searchParams.delete(urlSearchParamVercelProtectionBypass)\n          searchParams.delete(urlSearchParamVercelSetBypassCookie)\n          handleNavigate({\n            params: {\n              preview: `${urlWithoutSearch}${searchParams.size > 0 ? '?' : ''}${searchParams}`,\n            },\n          })\n        } catch {\n          handleNavigate({params: {preview: url}})\n        }\n      }\n      frameStateRef.current = {title, url}\n    })\n\n    comlink.on('visual-editing/meta', (data) => {\n      frameStateRef.current.title = data.title\n    })\n\n    comlink.on('visual-editing/toggle', (data) => {\n      presentationRef.send({type: 'toggle visual editing overlays', enabled: data.enabled})\n    })\n\n    comlink.on('visual-editing/documents', (data) => {\n      setDocumentsOnPage(\n        'visual-editing',\n        // oxlint-disable-next-line no-explicit-any\n        data.perspective as unknown as any,\n        data.documents,\n      )\n    })\n\n    // @todo This won't work for multiple window contexts?\n    comlink.on('visual-editing/refreshing', (data) => {\n      if (data.source === 'manual') {\n        clearTimeout(refreshRef.current)\n      } else if (data.source === 'mutation') {\n        presentationRef.send({type: 'iframe refresh'})\n      }\n    })\n\n    comlink.on('visual-editing/refreshed', () => {\n      presentationRef.send({type: 'iframe loaded'})\n    })\n\n    comlink.onStatus(setOverlaysConnection)\n\n    const stop = comlink.start()\n    setVisualEditingComlink(comlink)\n    return () => {\n      stop()\n      setVisualEditingComlink(null)\n    }\n  }, [controller, presentationRef, setDocumentsOnPage, setOverlaysConnection, targetOrigin])\n\n  useEffect(() => {\n    if (!controller) return undefined\n    const comlink = controller.createChannel<Message, PreviewKitNodeMsg>(\n      {\n        name: 'presentation',\n        connectTo: 'preview-kit',\n        heartbeat: true,\n      },\n      createConnectionMachine<Message, PreviewKitNodeMsg>().provide({\n        actors: createCompatibilityActors(),\n      }),\n    )\n\n    comlink.onStatus(setPreviewKitConnection)\n\n    comlink.on('preview-kit/documents', (data) => {\n      if (data.projectId === projectId && data.dataset === dataset) {\n        setDocumentsOnPage(\n          'preview-kit',\n          // oxlint-disable-next-line no-explicit-any\n          data.perspective as unknown as any,\n          data.documents,\n        )\n      }\n    })\n\n    return comlink.start()\n  }, [controller, dataset, projectId, setDocumentsOnPage, setPreviewKitConnection, targetOrigin])\n\n  const handleFocusPath = useMemo(\n    () =>\n      // When moving from one field to another, blur and focus events will trigger\n      // this handler. We debounce to avoid unwanted intermediate navigations this\n      // would cause.\n      debounce<(state: Required<PresentationStateParams>) => void>((state) => {\n        // We only ever want to update the path if we are still viewing the\n        // document that was active when the focus event was triggered\n        if (isSameDocument(state)) {\n          navigate({\n            state,\n            replace: true,\n          })\n        }\n      }, 0),\n    [isSameDocument, navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, targetOrigin)\n      const preview = url.toString()\n      if (params.preview === preview) {\n        return\n      }\n      if (Array.isArray(allowOrigins)) {\n        if (allowOrigins.some((pattern) => pattern.test(preview))) {\n          navigate({params: {preview}})\n        }\n      } else if (url.origin === targetOrigin) {\n        navigate({params: {preview}})\n      }\n    },\n    [targetOrigin, params.preview, allowOrigins, navigate],\n  )\n\n  const handleStructureParams = useCallback(\n    (params: StructureDocumentPaneParams) => {\n      navigate({params})\n    },\n    [navigate],\n  )\n\n  const handleEditReference = useCallback<PresentationNavigate>(\n    (options) => {\n      navigate(options)\n    },\n    [navigate],\n  )\n\n  // Dispatch a focus or blur message when the id or path change\n  useEffect(() => {\n    if (params.id && params.path) {\n      visualEditingComlink?.post('presentation/focus', {id: params.id, path: params.path})\n    } else {\n      visualEditingComlink?.post('presentation/blur')\n    }\n  }, [params.id, params.path, visualEditingComlink])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      frameStateRef.current.url &&\n      params.preview &&\n      frameStateRef.current.url !== params.preview\n    ) {\n      try {\n        const frameOrigin = new URL(frameStateRef.current.url, targetOrigin).origin\n        const previewOrigin = new URL(params.preview, targetOrigin).origin\n        if (frameOrigin !== previewOrigin) {\n          return\n        }\n      } catch {\n        // ignore\n      }\n\n      frameStateRef.current.url = params.preview\n      if (overlaysConnection === 'connected') {\n        /**\n         * Translate the possibly absolute params url back to a relative URL\n         */\n        let url = params.preview\n        if (url.startsWith('http')) {\n          try {\n            const newUrl = new URL(params.preview, targetOrigin)\n            url = newUrl.pathname + newUrl.search + newUrl.hash\n          } catch {\n            // ignore\n          }\n        }\n        visualEditingComlink?.post('presentation/navigate', {\n          url,\n          type: 'replace',\n        })\n      }\n    }\n  }, [overlaysConnection, targetOrigin, params.preview, visualEditingComlink])\n\n  const toggleOverlay = useCallback(\n    () => visualEditingComlink?.post('presentation/toggle-overlay'),\n    [visualEditingComlink],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const [{navigatorEnabled, toggleNavigator}, PresentationNavigator] = usePresentationNavigator({\n    unstable_navigator,\n  })\n\n  const refreshRef = useRef<number>(undefined)\n  const handleRefresh = useCallback(\n    (fallback: () => void) => {\n      presentationRef.send({type: 'iframe refresh'})\n      if (visualEditingComlink) {\n        // We only wait 300ms for the iframe to ack the refresh request before running the fallback logic\n        refreshRef.current = window.setTimeout(fallback, 300)\n        visualEditingComlink.post('presentation/refresh', {\n          source: 'manual',\n          livePreviewEnabled:\n            previewKitConnection === 'connected' || loadersConnection === 'connected',\n        })\n        return\n      }\n      fallback()\n    },\n    [loadersConnection, presentationRef, previewKitConnection, visualEditingComlink],\n  )\n\n  const workspace = useWorkspace()\n\n  const getCommentIntent = useCallback<CommentIntentGetter>(\n    ({id, type, path}) => {\n      if (frameStateRef.current.url) {\n        return {\n          title: frameStateRef.current.title || frameStateRef.current.url,\n          name: 'edit',\n          params: {\n            id,\n            path,\n            type,\n            inspect: COMMENTS_INSPECTOR_NAME,\n            workspace: workspace.name,\n            mode: EDIT_INTENT_MODE,\n            preview: params.preview,\n          },\n        }\n      }\n      return undefined\n    },\n    [params.preview, workspace.name],\n  )\n\n  const setViewport = useCallback(\n    (next: PresentationViewport) => {\n      // Omit the viewport URL search param if the next viewport state is the\n      // default: 'desktop'\n      const viewport = next === 'desktop' ? undefined : 'mobile'\n      navigate({\n        params: {viewport},\n        replace: true,\n      })\n    },\n    [navigate],\n  )\n\n  return (\n    <>\n      <PresentationProvider\n        devMode={devMode}\n        name={name}\n        navigate={navigate}\n        params={params}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <SharedStateProvider comlink={visualEditingComlink}>\n              <Container data-testid=\"presentation-root\" height=\"fill\">\n                <Panels>\n                  <PresentationNavigator />\n                  <Panel\n                    id=\"preview\"\n                    minWidth={325}\n                    defaultSize={navigatorEnabled ? 50 : 75}\n                    order={3}\n                  >\n                    <Flex direction=\"column\" flex={1} height=\"fill\" ref={setBoundaryElement}>\n                      <BoundaryElementProvider element={boundaryElement}>\n                        <Preview\n                          // @TODO move closer to the <iframe> element itself to allow for more precise handling of when to reload the iframe and when to reconnect when the target origin changes\n                          // Make sure the iframe is unmounted if the targetOrigin has changed\n                          key={targetOrigin}\n                          canSharePreviewAccess={canSharePreviewAccess}\n                          canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n                          canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n                          header={unstable_header}\n                          initialUrl={initialPreviewUrl}\n                          loadersConnection={loadersConnection}\n                          navigatorEnabled={navigatorEnabled}\n                          onPathChange={handlePreviewPath}\n                          onRefresh={handleRefresh}\n                          openPopup={handleOpenPopup}\n                          overlaysConnection={overlaysConnection}\n                          previewUrl={params.preview}\n                          perspective={perspective}\n                          ref={iframeRef}\n                          setViewport={setViewport}\n                          targetOrigin={targetOrigin}\n                          toggleNavigator={toggleNavigator}\n                          toggleOverlay={toggleOverlay}\n                          viewport={viewport}\n                          vercelProtectionBypass={vercelProtectionBypass}\n                          presentationRef={presentationRef}\n                          previewUrlRef={previewUrlRef}\n                        />\n                      </BoundaryElementProvider>\n                    </Flex>\n                  </Panel>\n                  <PresentationContent\n                    documentId={params.id}\n                    documentsOnPage={documentsOnPage}\n                    documentType={params.type}\n                    getCommentIntent={getCommentIntent}\n                    mainDocumentState={mainDocumentState}\n                    onEditReference={handleEditReference}\n                    onFocusPath={handleFocusPath}\n                    onStructureParams={handleStructureParams}\n                    searchParams={searchParams}\n                    setDisplayedDocument={setDisplayedDocument}\n                    structureParams={structureParams}\n                  />\n                </Panels>\n              </Container>\n            </SharedStateProvider>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      <Suspense>\n        {controller && (\n          <LiveQueries\n            controller={controller}\n            perspective={perspective}\n            liveDocument={displayedDocument}\n            onDocumentsOnPage={setDocumentsOnPage}\n            onLoadersConnection={setLoadersConnection}\n          />\n        )}\n        {visualEditingComlink && params.id && params.type && (\n          <PostMessageRefreshMutations\n            comlink={visualEditingComlink}\n            id={params.id}\n            type={params.type}\n            loadersConnection={loadersConnection}\n            previewKitConnection={previewKitConnection}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageSchema comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && documentsOnPage.length > 0 && (\n          <PostMessagePreviewSnapshots\n            comlink={visualEditingComlink}\n            perspective={perspective}\n            refs={documentsOnPage}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageDocuments comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageFeatures comlink={visualEditingComlink} />}\n        {visualEditingComlink && (\n          <PostMessagePerspective comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageTelemetry comlink={visualEditingComlink} />}\n      </Suspense>\n    </>\n  )\n}\n\n// @TODO reconcile with core utils\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n\n// @TODO reconcile with core utils\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\n// @TODO reconcile with core utils\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\n","import {createPreviewSecret} from '@sanity/preview-url-secret/create-secret'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\n/** @internal */\nexport function defineCreatePreviewSecretActor({\n  client,\n  currentUserId,\n}: {\n  client: SanityClient\n  currentUserId: string | undefined\n}): PromiseActorLogic<{\n  secret: string\n  expiresAt: Date\n}> {\n  return fromPromise(async () => {\n    return await createPreviewSecret(client, 'sanity/presentation', location.href, currentUserId)\n  })\n}\n","import {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\n/** @internal */\nexport function defineReadSharedSecretActor({\n  client,\n}: {\n  client: SanityClient\n}): PromiseActorLogic<string | null> {\n  return fromPromise(async () => {\n    return client.fetch<string | null>(\n      fetchSharedAccessQuery,\n      {},\n      {tag: 'presentation.fallback-to-shared-access-secret'},\n    )\n  })\n}\n","import {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {type PreviewUrlAllowOption, type PreviewUrlAllowOptionContext} from '../types'\n\ninterface Context extends Pick<PreviewUrlAllowOptionContext, 'client'> {\n  allowOption: PreviewUrlAllowOption | undefined\n}\ntype Input = Omit<PreviewUrlAllowOptionContext, 'client' | 'origin'>\n\n/** @internal */\nexport function defineResolveAllowPatternsActor({\n  client,\n  allowOption,\n}: Context): PromiseActorLogic<URLPattern[], Input> {\n  return fromPromise<URLPattern[], Input>(async ({input}) => {\n    const {initialUrl} = input\n\n    /**\n     * Lazy load the URLPattern polyfill on-demand, if needed\n     */\n    if (typeof URLPattern === 'undefined') {\n      await import('urlpattern-polyfill')\n    }\n\n    /**\n     * If no allow option is provided, we use the initial URL to infer the pattern\n     */\n    if (!allowOption) {\n      return [new URLPattern(initialUrl.origin)]\n    }\n\n    const maybePatterns =\n      typeof allowOption === 'function'\n        ? await allowOption({client, origin, initialUrl})\n        : allowOption\n    const patterns = Array.isArray(maybePatterns) ? maybePatterns : [maybePatterns]\n    const urlPatterns = patterns.map((value) => {\n      const urlPattern = new URLPattern(value)\n      if (urlPattern.hostname === '*') {\n        throw new Error(\n          `It's insecure to allow any hostname, it could disclose data to a malicious site`,\n        )\n      }\n      return urlPattern\n    })\n    /**\n     * If the declared patterns don't consider the initial URL valid, we add it to the list of patterns\n     */\n    if (!urlPatterns.some((pattern) => pattern.test(initialUrl.origin))) {\n      return [...urlPatterns, new URLPattern(initialUrl.origin)]\n    }\n\n    return urlPatterns\n  })\n}\n","import {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {type PresentationPerspective, type PreviewUrlOption} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\n\n/** @internal */\nexport function defineResolveInitialUrlActor({\n  client,\n  studioBasePath,\n  previewUrlOption,\n  perspective,\n}: {\n  client: SanityClient\n  studioBasePath: string\n  previewUrlOption: PreviewUrlOption | undefined\n  perspective: PresentationPerspective\n}): PromiseActorLogic<URL, {previewSearchParam: string | null}> {\n  return fromPromise<URL, {previewSearchParam: string | null}>(\n    async ({input}: {input: {previewSearchParam: string | null}}) => {\n      const {origin} = location\n      /**\n       * If the previewUrlOption is a function, we need to resolve it and maintain backwards compatibility\n       */\n      if (typeof previewUrlOption === 'function') {\n        const initial = await previewUrlOption({\n          client,\n          studioBasePath,\n          // @TODO handle checking permissions here, and then generating a secret\n          previewUrlSecret: '',\n          studioPreviewPerspective: encodeStudioPerspective(perspective),\n          previewSearchParam: input.previewSearchParam,\n        })\n        return new URL(initial, origin)\n      }\n\n      /**\n       * Provide backwards compatibility for versions where `previewUrl` where optional\n       */\n      if (!previewUrlOption) {\n        return new URL('/', origin)\n      }\n      /**\n       * Support setting `previewUrl` as a string shorthand\n       */\n      if (typeof previewUrlOption === 'string') {\n        return new URL(previewUrlOption, origin)\n      }\n\n      if (typeof previewUrlOption.initial === 'function') {\n        const initial = await previewUrlOption.initial({\n          client,\n          origin,\n        })\n        return new URL(initial, origin)\n      }\n\n      if (typeof previewUrlOption.initial === 'string') {\n        return new URL(previewUrlOption.initial, origin)\n      }\n\n      return new URL(previewUrlOption.preview || '/', previewUrlOption.origin || origin)\n    },\n  )\n}\n","import {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {\n  type PreviewUrlOption,\n  type PreviewUrlPreviewMode,\n  type PreviewUrlPreviewModeOptionContext,\n} from '../types'\n\ntype Options = Omit<PreviewUrlPreviewModeOptionContext, 'origin'>\n\ninterface Context extends Pick<Options, 'client'> {\n  previewUrlOption: PreviewUrlOption | undefined\n}\ntype Input = Omit<Options, 'client'>\n\n/** @internal */\nexport function defineResolvePreviewModeActor({\n  client,\n  previewUrlOption,\n}: Context): PromiseActorLogic<PreviewUrlPreviewMode | false, Input> {\n  return fromPromise<PreviewUrlPreviewMode | false, Input>(async ({input}) => {\n    const {targetOrigin} = input\n\n    /**\n     * Handle legacy draftMode options\n     */\n    if (typeof previewUrlOption === 'object' && previewUrlOption?.draftMode) {\n      return {\n        enable: previewUrlOption.draftMode.enable,\n        shareAccess: previewUrlOption.draftMode.shareAccess ?? true,\n      }\n    }\n\n    /**\n     * If no preview mode option is provided, we disable preview mode\n     */\n    if (\n      !previewUrlOption ||\n      typeof previewUrlOption === 'string' ||\n      typeof previewUrlOption === 'function' ||\n      !previewUrlOption.previewMode\n    ) {\n      return false\n    }\n\n    /**\n     * If the option is a function, we resolve it\n     */\n    const previewMode =\n      typeof previewUrlOption.previewMode === 'function'\n        ? await previewUrlOption.previewMode({client, origin, targetOrigin})\n        : previewUrlOption.previewMode\n\n    if (previewMode === false) {\n      return false\n    }\n\n    /**\n     * Return only supported preview mode options, filter out unknowns\n     */\n    return {\n      enable: previewMode.enable,\n      shareAccess: previewMode.shareAccess ?? true,\n    }\n  })\n}\n","import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n} from '@sanity/preview-url-secret/constants'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {\n  type PresentationPerspective,\n  type PreviewUrlOption,\n  type PreviewUrlPreviewMode,\n} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\n\n/** @internal */\nexport interface ResolvePreviewModeUrlInput {\n  previewUrlSecret: string\n  resolvedPreviewMode: PreviewUrlPreviewMode\n  initialUrl: URL\n}\n\n/** @internal */\nexport function defineResolvePreviewModeUrlActor({\n  client,\n  studioBasePath,\n  previewUrlOption,\n  perspective,\n}: {\n  client: SanityClient\n  studioBasePath: string\n  previewUrlOption: PreviewUrlOption | undefined\n  perspective: PresentationPerspective\n}): PromiseActorLogic<URL, ResolvePreviewModeUrlInput> {\n  return fromPromise<URL, ResolvePreviewModeUrlInput>(async ({input}) => {\n    const {previewUrlSecret, resolvedPreviewMode, initialUrl} = input\n\n    /**\n     * If the previewUrlOption is a function, we need to resolve it and maintain backwards compatibility\n     */\n    if (typeof previewUrlOption === 'function') {\n      const initial = await previewUrlOption({\n        client,\n        studioBasePath,\n        previewUrlSecret,\n        studioPreviewPerspective: encodeStudioPerspective(perspective),\n        previewSearchParam: initialUrl.toString(),\n      })\n      return new URL(initial, initialUrl)\n    }\n\n    /**\n     * If the resolved preview mode is false then we have an unexpected state that shouldn't be possible\n     */\n    if (!resolvedPreviewMode) {\n      throw new Error('Resolved preview mode is false')\n    }\n\n    const url = new URL(resolvedPreviewMode.enable, initialUrl)\n\n    url.searchParams.set(urlSearchParamPreviewSecret, previewUrlSecret)\n    url.searchParams.set(urlSearchParamPreviewPerspective, encodeStudioPerspective(perspective))\n    if (initialUrl.pathname !== url.pathname) {\n      url.searchParams.set(\n        urlSearchParamPreviewPathname,\n        `${initialUrl.pathname}${initialUrl.search}${initialUrl.hash}`,\n      )\n    }\n\n    return url\n  })\n}\n","import {fromPromise} from 'xstate'\n\n/** @internal */\nexport const resolveUrlFromPreviewSearchParamActor = fromPromise<\n  URL,\n  {initialUrl: URL; previewSearchParam: string | null | undefined; allowOrigins: URLPattern[]}\n>(async ({input}) => {\n  const {previewSearchParam, initialUrl, allowOrigins} = input\n\n  /**\n   * If the preview search param is falsy we can skip\n   */\n  if (!previewSearchParam) {\n    return initialUrl\n  }\n\n  /**\n   * Validate the previewSearchParam\n   */\n  try {\n    const previewSearchParamUrl = new URL(previewSearchParam, initialUrl.origin)\n    if (!allowOrigins.some((pattern) => pattern.test(previewSearchParamUrl.origin))) {\n      return initialUrl\n    }\n    return previewSearchParamUrl\n  } catch (err) {\n    return initialUrl\n  }\n})\n","import {\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n} from '@sanity/preview-url-secret/constants'\nimport {type SanityDocument} from '@sanity/types'\nimport {uuid} from '@sanity/uuid'\nimport {throwError} from 'rxjs'\nimport {type DocumentValuePermission, type PermissionCheckResult} from 'sanity'\nimport {type ActorRefFrom, assign, fromObservable, fromPromise, log, setup} from 'xstate'\n\nimport {type ResolvePreviewModeUrlInput} from '../actors/resolve-preview-mode-url'\nimport {resolveUrlFromPreviewSearchParamActor} from '../actors/resolve-url-from-preview-search-param'\nimport {type PreviewUrlPreviewMode} from '../types'\n\ninterface Context {\n  initialUrl: URL | null\n  previewUrl: URL | null\n  allowOrigins: URLPattern[] | null\n  error: Error | null\n  previewSearchParam: string | null\n  previewUrlSecret: {secret: string; expiresAt: Date} | null\n  previewAccessSharingCreatePermission: PermissionCheckResult | null\n  previewAccessSharingReadPermission: PermissionCheckResult | null\n  previewAccessSharingUpdatePermission: PermissionCheckResult | null\n  previewUrlSecretPermission: PermissionCheckResult | null\n  previewMode: PreviewUrlPreviewMode | null\n}\n\ntype SetPreviewSearchParamEvent = {\n  type: 'set preview search param'\n  previewSearchParam: string | null\n}\ntype Event = SetPreviewSearchParamEvent\n\ntype Input = Omit<SetPreviewSearchParamEvent, 'type'>\n\nexport interface CheckPermissionInput {\n  checkPermissionName: DocumentValuePermission\n  document: Partial<SanityDocument> | null\n}\n\n/**\n * Used for permissions checks\n */\nexport const shareAccessSingletonDocument = {_id: schemaIdSingleton, _type: schemaTypeSingleton}\nexport const previewUrlSecretDocument = {\n  _id: `drafts.${uuid()}`,\n  _type: schemaType,\n}\n\nexport const previewUrlMachine = setup({\n  types: {} as {\n    context: Context\n    events: Event\n    input: Input\n    tags: 'busy' | 'error'\n  },\n  actions: {\n    'notify preview will likely fail': log(\n      `Missing permissions to create preview secret, or read shared preview secret. Preview will likely fail loading.`,\n    ),\n    'assign preview search param': assign({\n      previewSearchParam: (_, params: {previewSearchParam: string | null}) =>\n        params.previewSearchParam,\n    }),\n    'assign error': assign({\n      error: (_, params: {message: string; error: unknown}) => {\n        return params.error instanceof Error\n          ? params.error\n          : new Error(params.message, {cause: params.error})\n      },\n    }),\n  },\n  actors: {\n    'check permission': fromObservable<PermissionCheckResult, CheckPermissionInput>(() =>\n      throwError(\n        () =>\n          new Error(\n            `The 'check permission' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'check permission': fromObservable(({input}: {input: CheckPermissionInput}) => ...)}})`,\n          ),\n      ),\n    ),\n    'resolve initial url': fromPromise<URL, {previewSearchParam: string | null}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve initial url' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve initial url': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve allow patterns': fromPromise<URLPattern[], {initialUrl: URL}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve allow patterns' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve allow pattern': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve url from preview search param': resolveUrlFromPreviewSearchParamActor,\n    'resolve preview mode': fromPromise<PreviewUrlPreviewMode | false, {targetOrigin: string}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve preview mode' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve preview mode': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'create preview secret': fromPromise<{\n      secret: string\n      expiresAt: Date\n    }>(async () =>\n      Promise.reject(\n        new Error(\n          `The 'create preview secret' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'create preview secret': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'read shared preview secret': fromPromise<string | null>(async () =>\n      Promise.reject(\n        new Error(\n          `The 'read shared preview secret' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'read shared preview secret': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve preview mode url': fromPromise<URL, ResolvePreviewModeUrlInput>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve preview mode url' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve preview mode url': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n  },\n  guards: {\n    'has checked permissions': ({context}) => {\n      return Boolean(\n        context.previewAccessSharingCreatePermission &&\n          context.previewAccessSharingReadPermission &&\n          context.previewAccessSharingUpdatePermission &&\n          context.previewUrlSecretPermission,\n      )\n    },\n    'search param has new origin': ({context, event}) => {\n      if (!context.previewUrl || !event.previewSearchParam) {\n        return false\n      }\n      try {\n        const previewSearchParamUrl = new URL(event.previewSearchParam, context.previewUrl)\n        return context.previewUrl.origin !== previewSearchParamUrl.origin\n      } catch {\n        return false\n      }\n    },\n    'can create preview secret': ({context}) => {\n      return context.previewUrlSecretPermission?.granted === true\n    },\n\n    'has preview mode with created secret': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return context.previewUrlSecretPermission?.granted === true\n    },\n    'has preview mode with share access': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return context.previewAccessSharingReadPermission?.granted === true\n    },\n    'has preview mode without permissions': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return (\n        context.previewAccessSharingReadPermission?.granted === false &&\n        context.previewUrlSecretPermission?.granted === false\n      )\n    },\n  },\n  delays: {\n    expiredSecret: ({context}) => {\n      if (!context.previewUrlSecret?.expiresAt) {\n        return 0\n      }\n      const now = Date.now()\n      const expiresAt = context.previewUrlSecret.expiresAt.getTime()\n      return Math.max(expiresAt - now, 0)\n    },\n  },\n}).createMachine({\n  // eslint-disable-next-line tsdoc/syntax\n  /** @xstate-layout N4IgpgJg5mDOIC5QAUBOYBuBLMB3ABAKoBKAMgMRiqoD2qAdAA4A2AhgC4BmdAtvWphwESpBFgB2GGgGMOWGuIDaABgC6K1YlCMasLO3nitIAB6IArAA56AZgCcAdkcBGS8vMAmO+YBszgDQgAJ6Izs4+9M7KACzKztGWHg4OPubmAL7pgQLYeERklNR0TGxcvPzoucJkYpIycgqKzupqxjp6BgrGZggAtM520ZHRdjZjNjFe7oEhCGERUbHxicmpGVkgOUL5FFS0DCwc3Kh8W3kitVKynUoeLZpIIO36ht2IvV62Hl7elmE2lh83xmoXCkRicQSSRS5gSmWylW2IkK+xKR3KZ2qogkVwaShs9zauheXUePV6gPo3jSUyi-xBczBi0hKxh5mc8M2iPOBVgYHY+EY3IIfNYqGkAAtBWLWDwNESOq8yaCbM56A4bB5fGllHYvD4fAz4h56CNfG5LKqHMpLdFOZidvRJWBpABrCRQZBUHhYWB6BSwcjyx7PG5vPrs5TqjWqyyjTXRDwMjwxei68J2ZQ2nyWXN2jYOkT0dCwGjMbDiKAASXEL1YzEIqGY5AgCjA9BxNFd7cLZGLcDLFertYM9cbzEu9RuGmD2mJYeVfRGdipyh86Yc0XiE3MDK3JssIwcrmtPjGSXzCMEPNI-dL5Y9NbrDabKOKhzKJwq16xd8Hj5HLAxybSdrkMGdWhDeclVAclN3odlzBsKwBjSSxjwcZM7DVeJ1w8P4xmidk7HtYVHRLf9KwAQWYZgaFwZAOHYKhxEDVtxHbTtu2-KpyIHB9qNo+jGPYZjUFY0C8Qgh450VUlYPedkHHoHwnDSZDVOiGwfGiBlUhXXwwjsQYtKSYzSJ-Pj7yHGi6IYpiWMDPZ31KY5TjIosKIEqBbOEhzxNgSTpzUWcnmg+TTHePV6Hw3MYgzaItJ0hlYRNTNkLiHxBl1GILN4zz+KHccADFaB4TEAGUwDFSVGNQWUWzbDs6m43tby8oqm1KmhyuFKqaolOrZSC8CQsg2SSSMRdel8ZSNUTdlcw8M07AZQZrDXdaDRtUZnHWK98r7DqPRKsrKuq8VBplHg3wOVyMQ8o7CpOrqzr6i7auukbGjGmSwrkqaFL6MJlLiWFlC1EGty0hknAiXVVPMRx12UJwOQLR72ueytMQAWRoCAwEajjmqkVrMb-by8YJsBvqUX6FUm8Nem2+hbWPUZErGTcjS8NUJg8AE9T1ZwHHwvKkSe6yPWpwnic4lqewp46ceFfHCbpmdmkZhcgZmyxzFsDmTPcXUUiNRKDy3ZQJlVLSkYlm9KaHWWifYhWyaVyyCul1Wf3V2nOzAn71DuHWYMivovGsBxPCy74beWaJDWCUJzBSFTrUcQYdMzIFHd-FXPTVmn5dJrsvcOrHfeL-2ac1kKCXDiLyWcNKJiiHM-BtONwgtnMEM1DVNwhhI7B8AurMo2uqgD260U-dzval6fXYbwkoIB5moijLLkm5tvYRBo1nGQtND11ZaIdzEiMeX6vV5LuW+QFIVLNFS7pXquVxv+pnF1FtYP4OY7AG3QohJMqcEDeGUq4NwYQBhLEnkWWAABXaQ0g4CBhfoKMiH9JRf1lKFUMEceiizVPA0+7gtQQy8LzXU6obaJTFtEJwHhXDIL7G-WepccHcO2PgqUjBrrEPCoDSOFI3C2AGHtQ8sIiJJGTILZS7JRaeGSKw7CnDbz8LwAHJ06AOBgHOtIdA7Ay5cUrpLHRT92ymOqsxExZj16iK3gAqI6oaQ6QtE4YylhkynzmkCBGNgNR7VvgdaxTBbEGIccY969jzHOTuuiL8bVol10JrEoxTj+QuN-iQlu7xwjKX1P8bSTC0hGhcKaBIOZAQGkBKE7RGSeFZMMRACqEoxRgCohgrBFjFY8Sibo3A+iOldJ6X0zBfp8l-UKeIshjgqTGTiPYPaGotS7igd8QWtgsp6iQnFOEd8q6tKEOM6qnTunoGmQM5JC83LDKdqMy5rBrlTP6bMoOUkGab3-kDU+ERVEpnsEjDRVSdljBXKeQY3h5gOBaa8mmzt4k-nHIMz2zzfzIvaYVNFVRxxzObosxAfg1Q2jSOERIh5kIBNGKaNZ2lvjhFhEimJHUCVCAxQ8j8Tz0m4vbJyzERKfnBQ3hNXWkdyWeJsCMVhqNsK6mTO4Q2Q9DysLCEhDw7LMntjQV8wMJhYDsCMfQVgnAxIAAowAmEYFgdAnSXRmIAJTkAFTEg1MzYCuIBZHKYKlUiqWwrCMJkDZgDAYceRMfwUisPYZYTIGxxA03gI8NqJLmZ6msKqENcjErqIZL0cethvDGXLew9hiYWnOjdDLb0vp-SsUzdNcwEMEJ7WTohDMfgU4RpTCpUJnhYrHghuEFpRcnyjhfMwFtet2Q2FNOwsWZarBan8TsuMkRvhIzPJGDwmkWnJLnf6g0aZl0mQTURDdsxYiGwwsRIEgwEwTuxj5IS9lRKORPeSJCOF4XgrUZqbZsxwZszcJtbC4RUg2FfTXU6PVzoDSGjwH9ik-gxRGG4NtxkkZblhgyxIhFQG5lSPEODj89VoYjKqGKURkij0zImXSUCwiozZuDLUCQQY6tOVEr1WDqMsxNCkP4RFPBZj+I4I0qoRMODjIlceBzkK6raWAIT7DDZlNPhUuVkKI0pEXbHBISF1yAiIqpi5KL7E5ISWYoTna2b6Qg+DcFN7EAphLdpdOWVoPJ0RXxl5HKrmTNuYahzaQviaQPVERa8mlGeBUnnQyDStSwcCzi4L1kuV4HHNR4DCFdRaVVFSzcZ4VVIVsDEVhZ5QnWlYZZvRKLj3-KlT0FIKjVRZghkCXwqkjQGzVFxvOMisoWYy46QV9ABN+mo3mFZZ427lp032jzVa2bJGtCUtciak1AA */\n  id: 'Preview URL',\n  context: ({input}) => ({\n    initialUrl: null,\n    previewUrl: null,\n    error: null,\n    allowOrigins: null,\n    previewSearchParam: input.previewSearchParam,\n    previewUrlSecret: null,\n    previewAccessSharingCreatePermission: null,\n    previewAccessSharingReadPermission: null,\n    previewAccessSharingUpdatePermission: null,\n    previewUrlSecretPermission: null,\n    previewMode: null,\n  }),\n\n  invoke: [\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'read', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingReadPermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'create', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingCreatePermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'update', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingUpdatePermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'create', document: previewUrlSecretDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewUrlSecretPermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n  ],\n\n  on: {\n    'set preview search param': {\n      actions: {\n        type: 'assign preview search param',\n        params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n      },\n    },\n  },\n\n  states: {\n    checkingPermissions: {\n      always: {\n        guard: 'has checked permissions',\n        target: 'resolvingInitialUrl',\n      },\n      tags: 'busy',\n    },\n\n    resolvingInitialUrl: {\n      invoke: {\n        src: 'resolve initial url',\n        input: ({context}) => ({previewSearchParam: context.previewSearchParam}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve initial url',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingAllowPatterns',\n          actions: assign({initialUrl: ({event}) => event.output}),\n        },\n      },\n\n      tags: 'busy',\n    },\n\n    error: {\n      type: 'final',\n      tags: 'error',\n    },\n\n    resolvingAllowPatterns: {\n      invoke: {\n        src: 'resolve allow patterns',\n        input: ({context}) => ({initialUrl: context.initialUrl!}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url allow patterns',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingUrlFromPreviewSearchParam',\n          actions: assign({allowOrigins: ({event}) => event.output}),\n        },\n      },\n      tags: ['busy'],\n    },\n\n    resolvingUrlFromPreviewSearchParam: {\n      id: 'loop',\n      invoke: {\n        src: 'resolve url from preview search param',\n        input: ({context}) => ({\n          initialUrl: context.initialUrl!,\n          allowOrigins: context.allowOrigins!,\n          previewSearchParam: context.previewSearchParam,\n        }),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url from search param',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingPreviewMode',\n          actions: assign({initialUrl: ({event}) => event.output}),\n        },\n      },\n      tags: ['busy'],\n    },\n\n    resolvingPreviewMode: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n      invoke: {\n        src: 'resolve preview mode',\n        input: ({context}) => ({targetOrigin: context.initialUrl!.origin}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url allow patterns',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: [\n          {\n            guard: {\n              type: 'has preview mode with created secret',\n              params: ({event}) => event.output,\n            },\n            actions: assign({\n              previewMode: ({event}) => event.output as unknown as PreviewUrlPreviewMode,\n            }),\n            target: 'previewMode.createPreviewSecret',\n          },\n          {\n            guard: {\n              type: 'has preview mode with share access',\n              params: ({event}) => event.output,\n            },\n            actions: assign({\n              previewMode: ({event}) => event.output as unknown as PreviewUrlPreviewMode,\n            }),\n            target: 'previewMode.readShareAccess',\n          },\n          {\n            guard: {\n              type: 'has preview mode without permissions',\n              params: ({event}) => event.output,\n            },\n            actions: [\n              assign({\n                previewUrl: ({context}) => context.initialUrl,\n              }),\n              'notify preview will likely fail',\n            ],\n            target: 'success',\n          },\n          {\n            actions: assign({\n              previewUrl: ({context}) => context.initialUrl,\n            }),\n            target: 'success',\n          },\n        ],\n      },\n      tags: ['busy'],\n    },\n\n    success: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n    },\n\n    previewMode: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n\n      states: {\n        createPreviewSecret: {\n          invoke: {\n            src: 'create preview secret',\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to create preview secret',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'resolvePreviewUrl',\n              actions: assign({previewUrlSecret: ({event}) => event.output}),\n            },\n          },\n          tags: ['busy'],\n        },\n        readShareAccess: {\n          invoke: {\n            src: 'read shared preview secret',\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to read shared preview secret',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'resolvePreviewUrl',\n              actions: assign({\n                previewUrlSecret: ({event}) => ({\n                  secret: event.output!,\n                  expiresAt: new Date(Date.now() + 1000 * 60 * 60 * 60 * 24),\n                }),\n              }),\n            },\n          },\n          tags: ['busy'],\n        },\n        resolvePreviewUrl: {\n          invoke: {\n            src: 'resolve preview mode url',\n            input: ({context}) => ({\n              initialUrl: context.initialUrl!,\n              resolvedPreviewMode: context.previewMode!,\n              previewUrlSecret: context.previewUrlSecret!.secret,\n            }),\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to resolve preview url',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'success',\n              actions: assign({previewUrl: ({event}) => event.output}),\n            },\n          },\n          tags: ['busy'],\n        },\n        error: {\n          type: 'final',\n          tags: ['error'],\n        },\n        success: {\n          after: {\n            expiredSecret: {\n              guard: 'can create preview secret',\n              actions: assign({previewUrlSecret: null}),\n              target: 'createPreviewSecret',\n              reenter: true,\n            },\n          },\n        },\n      },\n      initial: 'readShareAccess',\n    },\n  },\n\n  initial: 'checkingPermissions',\n})\nexport type PreviewUrlRef = ActorRefFrom<typeof previewUrlMachine>\n","import {useToast} from '@sanity/ui'\nimport {useActorRef, useSelector} from '@xstate/react'\nimport {useEffect} from 'react'\nimport {useActiveWorkspace, useClient, useCurrentUser, useGrantsStore, useTranslation} from 'sanity'\nimport {useRouter} from 'sanity/router'\nimport {fromObservable} from 'xstate'\n\nimport {defineCreatePreviewSecretActor} from './actors/create-preview-secret'\nimport {defineReadSharedSecretActor} from './actors/read-shared-secret'\nimport {defineResolveAllowPatternsActor} from './actors/resolve-allow-patterns'\nimport {defineResolveInitialUrlActor} from './actors/resolve-initial-url'\nimport {defineResolvePreviewModeActor} from './actors/resolve-preview-mode'\nimport {defineResolvePreviewModeUrlActor} from './actors/resolve-preview-mode-url'\nimport {API_VERSION} from './constants'\nimport {presentationLocaleNamespace} from './i18n'\nimport {previewUrlMachine, type PreviewUrlRef} from './machines/preview-url'\nimport {type PreviewUrlAllowOption, type PreviewUrlOption} from './types'\nimport {usePresentationPerspective} from './usePresentationPerspective'\n\nexport function usePreviewUrlActorRef(\n  previewUrlOption: PreviewUrlOption | undefined,\n  allowOption: PreviewUrlAllowOption | undefined,\n): PreviewUrlRef {\n  const grantsStore = useGrantsStore()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const currentUserId = currentUser?.id\n  const workspace = useActiveWorkspace()\n  const studioBasePath = workspace?.activeWorkspace?.basePath || '/'\n  const router = useRouter()\n  const routerSearchParams = new URLSearchParams(router.state._searchParams)\n  const previewSearchParam = routerSearchParams.get('preview')\n  const {push: pushToast} = useToast()\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const perspective = usePresentationPerspective()\n\n  const actorRef = useActorRef(\n    previewUrlMachine.provide({\n      actions: {\n        'notify preview will likely fail': () =>\n          pushToast({\n            id: 'preview-url-secret.missing-grants',\n            closable: true,\n            status: 'error',\n            duration: Infinity,\n            title: t('preview-url-secret.missing-grants'),\n          }),\n      },\n      actors: {\n        'create preview secret': defineCreatePreviewSecretActor({client, currentUserId}),\n        'read shared preview secret': defineReadSharedSecretActor({client}),\n        'resolve allow patterns': defineResolveAllowPatternsActor({\n          client,\n          allowOption,\n        }),\n        'resolve initial url': defineResolveInitialUrlActor({\n          client,\n          studioBasePath,\n          previewUrlOption,\n          perspective,\n        }),\n        'resolve preview mode': defineResolvePreviewModeActor({\n          client,\n          previewUrlOption,\n        }),\n        'resolve preview mode url': defineResolvePreviewModeUrlActor({\n          client,\n          studioBasePath,\n          previewUrlOption,\n          perspective,\n        }),\n        'check permission': fromObservable(({input}) =>\n          grantsStore.checkDocumentPermission(input.checkPermissionName, input.document),\n        ),\n      },\n    }),\n    {input: {previewSearchParam}},\n  )\n\n  /**\n   * Sync changes to router state for the preview search param\n   */\n  useEffect(() => {\n    actorRef.send({type: 'set preview search param', previewSearchParam})\n  }, [actorRef, previewSearchParam])\n\n  const error = useSelector(actorRef, (state) =>\n    state.status === 'error' ? state.error : state.hasTag('error') ? state.context.error : null,\n  )\n\n  // Propagate the error to the nearest error boundary\n  if (error) throw error\n\n  return actorRef\n}\n","import {useToast} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {useEffect} from 'react'\nimport {Translate, useTranslation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from './i18n'\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useReportInvalidPreviewSearchParam(previewUrlRef: PreviewUrlRef): void {\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const router = useRouter()\n  const routerSearchParams = new URLSearchParams(router.state._searchParams)\n  const previewSearchParam = routerSearchParams.get('preview')\n\n  const allowOrigins = useSelector(previewUrlRef, (state) => state.context.allowOrigins)\n  const currentOrigin = useSelector(previewUrlRef, (state) => state.context.previewUrl?.origin)\n  useEffect(() => {\n    if (!Array.isArray(allowOrigins) || !previewSearchParam || !currentOrigin) return\n    const nextOrigin = new URL(previewSearchParam, currentOrigin).origin\n    if (!allowOrigins.some((pattern) => pattern.test(nextOrigin))) {\n      pushToast({\n        closable: true,\n        id: `presentation-iframe-origin-mismatch-${nextOrigin}`,\n        status: 'error',\n        duration: Infinity,\n        title: t('preview-search-param.configuration.error.title'),\n        description: (\n          <Translate\n            t={t}\n            i18nKey=\"preview-search-param.configuration.error.description\"\n            components={{Code: 'code'}}\n            values={{\n              previewSearchParam,\n              blockedOrigin: nextOrigin,\n            }}\n          />\n        ),\n      })\n    }\n  }, [allowOrigins, currentOrigin, previewSearchParam, pushToast, t])\n}\n","import {subcribeToVercelProtectionBypass} from '@sanity/preview-url-secret/toggle-vercel-protection-bypass'\nimport {useEffect, useReducer, useState} from 'react'\nimport {useClient} from 'sanity'\n\nimport {API_VERSION} from './constants'\n\ntype VercelProtectionBypassReadyState = 'loading' | 'ready'\n\nexport function useVercelBypassSecret(): [\n  vercelProtectionBypassSecret: string | null,\n  vercelProtectionBypassReadyState: VercelProtectionBypassReadyState,\n] {\n  const client = useClient({apiVersion: API_VERSION})\n  const [vercelProtectionBypassReadyState, ready] = useReducer(\n    () => 'ready' as 'ready' | 'loading',\n    'loading',\n  )\n  const [vercelProtectionBypassSecret, setVercelProtectionBypassSecret] = useState<string | null>(\n    null,\n  )\n\n  useEffect(() => {\n    const unsubscribe = subcribeToVercelProtectionBypass(client, (secret) => {\n      setVercelProtectionBypassSecret(secret)\n      ready()\n    })\n    return () => unsubscribe()\n  }, [client])\n\n  return [vercelProtectionBypassSecret, vercelProtectionBypassReadyState]\n}\n","import {useSelector} from '@xstate/react'\nimport {type Tool} from 'sanity'\n\nimport {PresentationSpinner} from './PresentationSpinner'\nimport PresentationTool from './PresentationTool'\nimport {type PresentationPluginOptions} from './types'\nimport {usePreviewUrlActorRef} from './usePreviewUrlActorRef'\nimport {useReportInvalidPreviewSearchParam} from './useReportInvalidPreviewSearchParam'\nimport {useVercelBypassSecret} from './useVercelBypassSecret'\n\nexport default function PresentationToolGrantsCheck({\n  tool,\n}: {\n  tool: Tool<PresentationPluginOptions>\n}): React.JSX.Element {\n  const previewUrlRef = usePreviewUrlActorRef(tool.options?.previewUrl, tool.options?.allowOrigins)\n  useReportInvalidPreviewSearchParam(previewUrlRef)\n\n  const previewAccessSharingCreatePermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingCreatePermission,\n  )\n  const previewAccessSharingUpdatePermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingUpdatePermission,\n  )\n  const previewAccessSharingReadPermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingReadPermission,\n  )\n  const previewUrlSecretPermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewUrlSecretPermission,\n  )\n  const url = useSelector(previewUrlRef, (state) => state.context.previewUrl)\n  // @TODO the vercel protection bypass can be moved to the iframe level\n  const [vercelProtectionBypass, vercelProtectionBypassReadyState] = useVercelBypassSecret()\n\n  if (\n    !url ||\n    vercelProtectionBypassReadyState === 'loading' ||\n    !previewAccessSharingCreatePermission ||\n    typeof previewAccessSharingCreatePermission.granted === 'undefined' ||\n    !previewAccessSharingUpdatePermission ||\n    typeof previewAccessSharingUpdatePermission.granted === 'undefined' ||\n    !previewUrlSecretPermission ||\n    !previewAccessSharingReadPermission ||\n    typeof previewAccessSharingReadPermission.granted === 'undefined' ||\n    typeof previewUrlSecretPermission.granted === 'undefined'\n  ) {\n    return <PresentationSpinner />\n  }\n\n  return (\n    <PresentationTool\n      tool={tool}\n      initialPreviewUrl={url}\n      vercelProtectionBypass={vercelProtectionBypass}\n      canToggleSharePreviewAccess={\n        previewAccessSharingCreatePermission?.granted === true &&\n        previewAccessSharingUpdatePermission?.granted === true\n      }\n      canUseSharedPreviewAccess={previewAccessSharingReadPermission?.granted === true}\n      previewUrlRef={previewUrlRef}\n    />\n  )\n}\n"],"names":["_id","_type","tag","PostMessageFeatures","props","$","_c","comlink","t0","t1","on","_temp","useEffect","memo","features","optimistic","presentationMachine","types","actions","actors","guards","createMachine","id","context","url","error","visualEditingOverlaysEnabled","assign","target","states","description","tags","loading","loaded","event","enabled","refreshing","reloading","initial","SharedStateProvider","children","Symbol","for","useRef","t2","state","sharedState","current","t3","key","value","post","setValue","t4","key_0","removeValue","t5","t6","Root","div","Panel","defaultSize","minWidth","maxWidth","order","undefined","useContext","PresentationPanelsContext","Error","getPanelStyle","registerElement","unregisterElement","style","type","useLayoutEffect","debounce","fn","timeout","timer","args","clearTimeout","setTimeout","apply","itemKey","getStoredItem","JSON","parse","localStorage","getItem","setStoredItem","data","setItem","stringify","getKeyForPanels","panels","map","panel","join","usePanelsStorage","get","_temp2","set","_temp3","setDebounced","panels_0","widths","stored_0","stored","Array","isArray","some","val","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getNextWidths","delta","panelBefore","panelAfter","panelsState","initialDragState","prevWidths","initialWidths","nextWidths","pivotPanel","index","findIndex","width","abs","deltaApplied","deltaRemaining","toPrecision","localeCompare","numeric","length","getPanelWidth","getOffset","handleElement","initialOffset","initialHandleElementRect","pointerOffset","clientX","elementOffset","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","from","values","sort","a","b","validateWidths","widthsToValidate","total","reduce","remainingWidth","toFixed","getDefaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","PanelsWrapper","styled","Panels","panelsEl","Map","setElements","useState","filter","setWidths","activeResizer","setActiveResizer","panelsRef","flexGrow","pointerEvents","id_0","prev","has","next","t7","id_1","prev_0","next_0","delete","t8","window","innerWidth","dragOffset","resizerIndex","resizerRect","startX","dragRef","t9","id_2","elementsArr","el","resizer","resizeElement","acc","el_0","i","acc_0","el_1","i_0","pageX","startDragging","t10","stopDragging","t11","id_3","event_0","preventDefault","stopPropagation","resizer_0","resizeElement_0","offset","rect","prevWidth","i_1","drag","t12","t13","storage","t14","t15","widths_0","storedWidths","validatedStoredWidths","defaultWidths","t16","t17","t18","t19","resizeObserver","ResizeObserver","prevWidths_0","nextWidths_0","prevWidth_0","i_2","observe","disconnect","t20","t21","t22","ErrorCard","message","onContinueAnyway","onRetry","restProps","t","useTranslation","presentationLocaleNamespace","retryButton","continueAnywayButton","Container","ChildLink","forwardRef","ref","childId","childParameters","childType","rest","searchParams","childPayload","Object","entries","_searchParams","ReferenceChildLink","documentId","documentType","parentRefPath","template","params","pathToString","encodeQueryString","parts","resolveQueryStringFromParams","nextParams","allowed","safeNextParams","includes","obj","BackLink","PresentationPaneRouterProvider","onEditReference","onStructureParams","structureParams","refs","routerState","resolvePathFromState","useRouter","fromEntries","routerSearchParams","useUnique","path","qs","createPathWithParams","childLinkProps","doc","find","r","getPublishedId","console","warn","backLinkProps","ref_0","childLinkProps_0","ref_1","options","version","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ParameterizedLink","closeCurrentAndAfter","handleEditReference","replaceCurrent","closeCurrent","_temp4","duplicateCurrent","_temp5","setView","_temp6","setParams","setPayload","_temp7","navigateIntent","_temp8","intentName","intentParams","options_0","viewId","pane_0","pane","RootLayout","PaneLayout","Flex","WrappedCode","Code","DocumentListPane","mainDocumentState","devMode","usePresentationTool","document","ids","schemaTypeName","title","errorParams","setErrorParams","handleRetry","StructureDocumentListPane","r_0","DocumentPane","onFocusPath","templateParams","decodeJsonParams","templateParameters","paneDocumentNode","studioPath","toString","handleFocusPath","height","StructureDocumentPane","DocumentPanel","StructureToolProvider","usePreviewState","schemaType","documentPreviewStore","useDocumentPreviewStore","preview","setPreview","perspectiveStack","usePerspective","subscription","getPreviewStateObservable","subscribe","unsubscribe","ContentEditor","schema","useSchema","props_0","MainDocumentLink","previewState","bb0","snapshot","getPreviewValueWithFallback","fallback","usePanelId","uuid","panelId","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","isDragging","nativeEvent","onMouseDown","e","onDrag","blur","onDragStop","resetDocumentStyles","bodyStyle","body","documentStyle","documentElement","cursor","userSelect","removeProperty","addEventListener","removeEventListener","PresentationContentWrapper","setDisplayedDocument","getCommentIntent","PresentationContent","documentsOnPage","PresentationNavigateProvider","navigate","_navigate","useLocalState","defaultValue","usePresentationNavigator","unstable_navigator","navigatorProvided","component","_navigatorEnabled","setNavigatorEnabled","navigatorEnabled","toggleNavigator","Component","NavigatorComponent","navigatorDisabled","Navigator","PresentationParamsProvider","PresentationProvider","name","useAllowPatterns","previewUrlRef","allowPatterns","useSelector","TypeError","allowOrigins","encodeStudioPerspective","studioPerspective","useId","useReactId","startsWith","replace","IFrame","forwardedRef","animate","onLoad","preventClick","src","variants","useImperativeHandle","instance","handleBlur","activeElement","dispatchEvent","MouseEvent","bubbles","cancelable","viewTransitionName","IFrameElement","motion","create","iframe","IFrameOverlay","Box","GlobalViewTransition","createGlobalStyle","OpenPreviewButton","openPopup","previewLocationOrigin","previewLocationRoute","perspective","targetOrigin","URL","urlSearchParamPreviewPerspective","pathname","search","openPreviewLink","currentTarget","href","handleOpenPopup","LaunchIcon","useTargetOrigin","previewUrl","origin","PreviewLocationInput","fontSize","onChange","padding","prefix","suffix","basePath","useActiveWorkspace","activeWorkspace","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","absoluteValue","pattern","test","reportValidity","nextValue","handleKeyDown","nextValue_0","handleClear","icon","ResetIcon","zIndex","QRCodeSVG","lazy","QrCodeLogoSize","QrCodeLogoPadding","QrSize","StyledSanityMonogram","SanityMonogram","MotionSpinner","Spinner","MotionText","Text","MotionMonogram","SharePreviewMenu","canToggleSharePreviewAccess","canUseSharedPreviewAccess","initialUrl","push","pushToast","useToast","client","useClient","apiVersion","API_VERSION","currentUser","useCurrentUser","setLoading","enabling","setEnabling","disabling","setDisabling","secret","setSecret","busy","useMemo","setSecretSearchParams","setError","handleUnableToToggle","useCallback","closable","status","handleDisableSharing","disablePreviewAccessSharing","location","handleEnableSharing","previewUrlSecret","enablePreviewAccessSharing","handleCopyUrl","navigator","clipboard","writeText","controller","AbortController","usedTags","fetchShareSecret","lastLiveEventId","signal","result","syncTags","fetch","fetchSharedAccessQuery","filterResponse","aborted","live","events","abort","finally","ShareIcon","justifyContent","alignItems","gridTemplateColumns","gridTemplateRows","position","aspectRatio","display","opacity","textWrap","textAlign","CopyIcon","constrainSize","placement","portal","displayName","PreviewHeaderDefault","canSharePreviewAccess","iframeRef","onPathChange","onRefresh","overlaysConnection","presentationRef","setViewport","toggleOverlay","viewport","toggleViewportSize","send","handleRefresh","isLoading","isLoaded","isRefreshing","isReloading","overlaysEnabled","previewURL","withoutSecretSearchParams","perspectiveToggleTooltipId","previewUrlBusy","PanelLeftIcon","content","fallbackPlacements","whiteSpace","marginTop","marginBottom","lineHeight","borderRadius","margin","t23","t24","t25","t26","t27","t28","RefreshIcon","t29","t30","t31","t32","node","setProperty","t33","t34","t35","t36","t37","t38","MobileDeviceIcon","DesktopIcon","t39","t40","t41","t42","PreviewHeader","renderDefault","HeaderComponent","header","minHeight","matches","state_0","state_1","state_2","state_3","state_4","hasTag","MotionFlex","Preview","loadersConnection","vercelProtectionBypass","stablePerspective","setStablePerspective","urlPerspective","urlSearchParamVercelProtectionBypass","urlSearchParamVercelSetBypassCookie","prefersReducedMotion","usePrefersReducedMotion","previewHeader","timedOut","setTimedOut","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","onIFrameLoad","preventIframeInteraction","canUseViewTransition","useSyncExternalStore","CSS","supports","iframeAnimations","currentViewport","setCurrentViewport","iframeStyle","setIframeStyle","iframeVariants","update","startViewTransition","flushSync","toast","checkOrigin","setCheckOrigin","reportedMismatches","Set","reportMismatchingOrigin","useEffectEvent","reportedOrigin","allow","add","duration","Infinity","usePresentationNavigate","navigateEvent","nextUrl","hash","contentWindow","createController","addTarget","createChannel","heartbeat","connectTo","createConnectionMachine","provide","createCompatibilityActors","stop","start","destroy","interval","setInterval","postMessage","domain","clearInterval","spinnerVariants","inset","backdropFilter","WebkitBackdropFilter","WebkitTransition","sizes","errorVariants","background","desktop","mobile","exit","boxShadow","scale","idle","active","defineWarnOnce","warned","warnOnceAboutCrossDatasetReference","useDocumentsOnPage","frameStateRef","validateApiPerspective","published","setPublished","previewDrafts","setPreviewDrafts","urlRef","perspective_0","documents","setCache","cache","isEqual","setDocumentsOnPage","keyedCache","uniqueDocuments","cache_0","forEach","sourceDocument","_projectId","fnOrObj","arg","Function","getQueryFromResult","resolver","resolve","getParamsFromResult","getRouteContext","route","routes","absolute","match","decode","decodeURIComponent","useMainDocument","navigationHistory","resolvers","relativeUrl","setMainDocumentState","mainDocumentIdRef","at","handleResponse","url_0","query","then","doc_0","catch","parseId","rawId","segments","split","shift","parsePath","rawPath","urlStringToPath","parseRouterState","pruneObject","exhaustiveTupleOf","array","maintainOnDocumentChange","maintainOnSameDocument","useParams","initialPreviewUrl","routerNavigate","inspect","rev","since","view","pathKey","instruction","comment","changesInspectorTab","routerStateRef","setNavigationHistory","isSameDocument","currentState","currentParams","nextState","nextRouterState","usePopups","popups","setPopups","source","open","unsubs","size","source_0","closed","source_1","source_2","POPUP_CHECK_INTERVAL","unsub","usePresentationPerspective","selectedPerspectiveName","selectedReleaseId","useStatus","statusMap","setStatusMap","handshaking","memoStatus","connection","hasConnected_0","hasConnected","status_1","setStatusFromEvent","status_0","LiveQueries","PostMessageDocuments","PostMessageRefreshMutations","PostMessagePerspective","PostMessagePreviewSnapshots","PostMessageSchema","PostMessageTelemetry","PresentationTool","tool","components","DEFAULT_TOOL_NAME","unstable_header","previewMode","shareAccess","option","hostname","setController","visualEditingComlink","setVisualEditingComlink","useActorRef","projectId","useProjectId","dataset","useDataset","mainDocuments","setOverlaysConnection","setLoadersConnection","previewKitConnection","setPreviewKitConnection","handleNavigate","urlWithoutSearch","URLSearchParams","refreshRef","onStatus","handlePreviewPath","nextPath","handleStructureParams","frameOrigin","previewOrigin","newUrl","displayedDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey","boundaryElement","setBoundaryElement","PresentationNavigator","livePreviewEnabled","workspace","useWorkspace","COMMENTS_INSPECTOR_NAME","mode","EDIT_INTENT_MODE","IS_MAC","platform","MODIFIERS","alt","ctrl","mod","keys","every","toUpperCase","defineCreatePreviewSecretActor","currentUserId","fromPromise","createPreviewSecret","defineReadSharedSecretActor","defineResolveAllowPatternsActor","allowOption","input","URLPattern","maybePatterns","urlPatterns","urlPattern","defineResolveInitialUrlActor","studioBasePath","previewUrlOption","studioPreviewPerspective","previewSearchParam","defineResolvePreviewModeActor","draftMode","enable","defineResolvePreviewModeUrlActor","resolvedPreviewMode","urlSearchParamPreviewSecret","urlSearchParamPreviewPathname","resolveUrlFromPreviewSearchParamActor","previewSearchParamUrl","shareAccessSingletonDocument","schemaIdSingleton","schemaTypeSingleton","previewUrlSecretDocument","previewUrlMachine","setup","log","_","cause","fromObservable","throwError","Promise","reject","has checked permissions","Boolean","previewAccessSharingCreatePermission","previewAccessSharingReadPermission","previewAccessSharingUpdatePermission","previewUrlSecretPermission","search param has new origin","can create preview secret","granted","has preview mode with created secret","has preview mode with share access","has preview mode without permissions","delays","expiredSecret","expiresAt","now","Date","getTime","invoke","checkPermissionName","onError","onSnapshot","checkingPermissions","always","guard","resolvingInitialUrl","onDone","output","resolvingAllowPatterns","resolvingUrlFromPreviewSearchParam","resolvingPreviewMode","reenter","success","readShareAccess","resolvePreviewUrl","after","usePreviewUrlActorRef","grantsStore","useGrantsStore","router","checkDocumentPermission","actorRef","useReportInvalidPreviewSearchParam","currentOrigin","nextOrigin","blockedOrigin","useVercelBypassSecret","vercelProtectionBypassReadyState","ready","useReducer","vercelProtectionBypassSecret","setVercelProtectionBypassSecret","subcribeToVercelProtectionBypass","PresentationToolGrantsCheck"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68]}