{"version":3,"sources":["turbopack:///[project]/node_modules/next/dist/src/server/instrumentation/utils.ts","turbopack:///[project]/node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js","turbopack:///[project]/node_modules/next/dist/esm/server/base-http/index.js","turbopack:///[project]/node_modules/next/dist/esm/server/api-utils/index.js","turbopack:///[project]/node_modules/next/dist/esm/server/base-http/node.js","turbopack:///[project]/node_modules/next/dist/esm/server/api-utils/get-cookie-parser.js","turbopack:///[project]/node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js","turbopack:///[project]/node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js","turbopack:///[project]/node_modules/next/dist/src/server/lib/cache-control.ts","turbopack:///[project]/node_modules/groq/src/define.ts","turbopack:///[project]/node_modules/groq/src/groq.ts","turbopack:///[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs","turbopack:///[project]/node_modules/next/src/shared/lib/utils/warn-once.ts","turbopack:///[project]/node_modules/next/src/shared/lib/image-blur-svg.ts","turbopack:///[project]/node_modules/next/src/shared/lib/image-config.ts","turbopack:///[project]/node_modules/next/src/shared/lib/get-img-props.ts","turbopack:///[project]/node_modules/next/dist/client/image-component.js/__nextjs-internal-proxy.cjs","turbopack:///[project]/node_modules/next/src/client/image-component.tsx","turbopack:///[project]/node_modules/next/src/shared/lib/image-loader.ts","turbopack:///[project]/node_modules/next/src/shared/lib/image-external.tsx","turbopack:///[project]/node_modules/next/image.js","turbopack:///[project]/node_modules/@portabletext/toolkit/src/asserters.ts","turbopack:///[project]/node_modules/@portabletext/toolkit/src/sortMarksByOccurences.ts","turbopack:///[project]/node_modules/@portabletext/toolkit/src/buildMarksTree.ts","turbopack:///[project]/node_modules/@portabletext/toolkit/src/nestLists.ts","turbopack:///[project]/node_modules/@portabletext/toolkit/src/spanToPlainText.ts","turbopack:///[project]/node_modules/@portabletext/toolkit/src/toPlainText.ts","turbopack:///[project]/node_modules/@portabletext/toolkit/src/types.ts","turbopack:///[project]/.next-internal/server/app/(store)/product/[slug]/page/actions.js (server actions loader)","turbopack:///[project]/components/addToBasketButton.tsx/__nextjs-internal-proxy.mjs","turbopack:///[project]/sanity/lib/products/getProductBySlug.ts","turbopack:///[project]/app/(store)/product/[slug]/page.tsx","turbopack:///[project]/node_modules/@portabletext/react/src/components/list.tsx","turbopack:///[project]/node_modules/@portabletext/react/src/components/marks.tsx","turbopack:///[project]/node_modules/@portabletext/react/src/warnings.ts","turbopack:///[project]/node_modules/@portabletext/react/src/components/unknown.tsx","turbopack:///[project]/node_modules/@portabletext/react/src/components/defaults.tsx","turbopack:///[project]/node_modules/@portabletext/react/src/components/merge.ts","turbopack:///[project]/node_modules/@portabletext/react/src/react-portable-text.tsx"],"sourcesContent":["export function getRevalidateReason(params: {\n  isOnDemandRevalidate?: boolean\n  isRevalidate?: boolean\n}): 'on-demand' | 'stale' | undefined {\n  if (params.isOnDemandRevalidate) {\n    return 'on-demand'\n  }\n  if (params.isRevalidate) {\n    return 'stale'\n  }\n  return undefined\n}\n","import { ReflectAdapter } from './reflect';\n/**\n * @internal\n */ export class ReadonlyHeadersError extends Error {\n    constructor(){\n        super('Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers');\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nexport class HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === 'symbol') {\n                    return ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === 'undefined') return;\n                // If the original casing exists, return the value.\n                return ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === 'symbol') {\n                    return ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === 'symbol') return ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === 'undefined') return false;\n                // If the original casing exists, return true.\n                return ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === 'symbol') return ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === 'undefined') return true;\n                // If the original casing exists, delete the property.\n                return ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'append':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(', ');\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === 'string') {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== 'undefined') return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== 'undefined';\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n\n//# sourceMappingURL=headers.js.map","import { RedirectStatusCode } from '../../client/components/redirect-status-code';\nimport { getCookieParser } from '../api-utils/get-cookie-parser';\nexport class BaseNextRequest {\n    constructor(method, url, body){\n        this.method = method;\n        this.url = url;\n        this.body = body;\n    }\n    // Utils implemented using the abstract methods above\n    get cookies() {\n        if (this._cookies) return this._cookies;\n        return this._cookies = getCookieParser(this.headers)();\n    }\n}\nexport class BaseNextResponse {\n    constructor(destination){\n        this.destination = destination;\n    }\n    // Utils implemented using the abstract methods above\n    redirect(destination, statusCode) {\n        this.setHeader('Location', destination);\n        this.statusCode = statusCode;\n        // Since IE11 doesn't support the 308 header add backwards\n        // compatibility using refresh header\n        if (statusCode === RedirectStatusCode.PermanentRedirect) {\n            this.setHeader('Refresh', `0;url=${destination}`);\n        }\n        return this;\n    }\n}\n\n//# sourceMappingURL=index.js.map","import { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { PRERENDER_REVALIDATE_HEADER, PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER } from '../../lib/constants';\nimport { getTracer } from '../lib/trace/tracer';\nimport { NodeSpan } from '../lib/trace/constants';\nexport function wrapApiHandler(page, handler) {\n    return (...args)=>{\n        getTracer().setRootSpanAttribute('next.route', page);\n        // Call API route method\n        return getTracer().trace(NodeSpan.runHandler, {\n            spanName: `executing api route (pages) ${page}`\n        }, ()=>handler(...args));\n    };\n}\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */ export function sendStatusCode(res, statusCode) {\n    res.statusCode = statusCode;\n    return res;\n}\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */ export function redirect(res, statusOrUrl, url) {\n    if (typeof statusOrUrl === 'string') {\n        url = statusOrUrl;\n        statusOrUrl = 307;\n    }\n    if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n        throw Object.defineProperty(new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`), \"__NEXT_ERROR_CODE\", {\n            value: \"E389\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    res.writeHead(statusOrUrl, {\n        Location: url\n    });\n    res.write(url);\n    res.end();\n    return res;\n}\nexport function checkIsOnDemandRevalidate(req, previewProps) {\n    const headers = HeadersAdapter.from(req.headers);\n    const previewModeId = headers.get(PRERENDER_REVALIDATE_HEADER);\n    const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\n    const revalidateOnlyGenerated = headers.has(PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\n    return {\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated\n    };\n}\nexport const COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nexport const COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nexport const RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\nexport const SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nexport const SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nexport function clearPreviewData(res, options = {}) {\n    if (SYMBOL_CLEARED_COOKIES in res) {\n        return res;\n    }\n    const { serialize } = require('next/dist/compiled/cookie');\n    const previous = res.getHeader('Set-Cookie');\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === 'string' ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        })\n    ]);\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n        value: true,\n        enumerable: false\n    });\n    return res;\n}\n/**\n * Custom error class\n */ export class ApiError extends Error {\n    constructor(statusCode, message){\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */ export function sendError(res, statusCode, message) {\n    res.statusCode = statusCode;\n    res.statusMessage = message;\n    res.end(message);\n}\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */ export function setLazyProp({ req }, prop, getter) {\n    const opts = {\n        configurable: true,\n        enumerable: true\n    };\n    const optsReset = {\n        ...opts,\n        writable: true\n    };\n    Object.defineProperty(req, prop, {\n        ...opts,\n        get: ()=>{\n            const value = getter();\n            // we set the property on the object to avoid recalculating it\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n            return value;\n        },\n        set: (value)=>{\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n        }\n    });\n}\n\n//# sourceMappingURL=index.js.map","import { SYMBOL_CLEARED_COOKIES } from '../api-utils';\nimport { NEXT_REQUEST_META } from '../request-meta';\nimport { BaseNextRequest, BaseNextResponse } from './index';\nlet prop;\nexport class NodeNextRequest extends BaseNextRequest {\n    static #_ = prop = _NEXT_REQUEST_META = NEXT_REQUEST_META;\n    constructor(_req){\n        var _this__req;\n        super(_req.method.toUpperCase(), _req.url, _req), this._req = _req, this.headers = this._req.headers, this.fetchMetrics = (_this__req = this._req) == null ? void 0 : _this__req.fetchMetrics, this[_NEXT_REQUEST_META] = this._req[NEXT_REQUEST_META] || {}, this.streaming = false;\n    }\n    get originalRequest() {\n        // Need to mimic these changes to the original req object for places where we use it:\n        // render.tsx, api/ssg requests\n        this._req[NEXT_REQUEST_META] = this[NEXT_REQUEST_META];\n        this._req.url = this.url;\n        this._req.cookies = this.cookies;\n        return this._req;\n    }\n    set originalRequest(value) {\n        this._req = value;\n    }\n    /**\n   * Returns the request body as a Web Readable Stream. The body here can only\n   * be read once as the body will start flowing as soon as the data handler\n   * is attached.\n   *\n   * @internal\n   */ stream() {\n        if (this.streaming) {\n            throw Object.defineProperty(new Error('Invariant: NodeNextRequest.stream() can only be called once'), \"__NEXT_ERROR_CODE\", {\n                value: \"E467\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this.streaming = true;\n        return new ReadableStream({\n            start: (controller)=>{\n                this._req.on('data', (chunk)=>{\n                    controller.enqueue(new Uint8Array(chunk));\n                });\n                this._req.on('end', ()=>{\n                    controller.close();\n                });\n                this._req.on('error', (err)=>{\n                    controller.error(err);\n                });\n            }\n        });\n    }\n}\nexport class NodeNextResponse extends BaseNextResponse {\n    get originalResponse() {\n        if (SYMBOL_CLEARED_COOKIES in this) {\n            this._res[SYMBOL_CLEARED_COOKIES] = this[SYMBOL_CLEARED_COOKIES];\n        }\n        return this._res;\n    }\n    constructor(_res){\n        super(_res), this._res = _res, this.textBody = undefined;\n    }\n    get sent() {\n        return this._res.finished || this._res.headersSent;\n    }\n    get statusCode() {\n        return this._res.statusCode;\n    }\n    set statusCode(value) {\n        this._res.statusCode = value;\n    }\n    get statusMessage() {\n        return this._res.statusMessage;\n    }\n    set statusMessage(value) {\n        this._res.statusMessage = value;\n    }\n    setHeader(name, value) {\n        this._res.setHeader(name, value);\n        return this;\n    }\n    removeHeader(name) {\n        this._res.removeHeader(name);\n        return this;\n    }\n    getHeaderValues(name) {\n        const values = this._res.getHeader(name);\n        if (values === undefined) return undefined;\n        return (Array.isArray(values) ? values : [\n            values\n        ]).map((value)=>value.toString());\n    }\n    hasHeader(name) {\n        return this._res.hasHeader(name);\n    }\n    getHeader(name) {\n        const values = this.getHeaderValues(name);\n        return Array.isArray(values) ? values.join(',') : undefined;\n    }\n    getHeaders() {\n        return this._res.getHeaders();\n    }\n    appendHeader(name, value) {\n        const currentValues = this.getHeaderValues(name) ?? [];\n        if (!currentValues.includes(value)) {\n            this._res.setHeader(name, [\n                ...currentValues,\n                value\n            ]);\n        }\n        return this;\n    }\n    body(value) {\n        this.textBody = value;\n        return this;\n    }\n    send() {\n        this._res.end(this.textBody);\n    }\n    onClose(callback) {\n        this.originalResponse.on('close', callback);\n    }\n}\nvar _NEXT_REQUEST_META;\n\n//# sourceMappingURL=node.js.map","/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */ export function getCookieParser(headers) {\n    return function parseCookie() {\n        const { cookie } = headers;\n        if (!cookie) {\n            return {};\n        }\n        const { parse: parseCookieFn } = require('next/dist/compiled/cookie');\n        return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie);\n    };\n}\n\n//# sourceMappingURL=get-cookie-parser.js.map","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash';\nimport { isGroupSegment } from '../../segment';\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */ export function normalizeAppPath(route) {\n    return ensureLeadingSlash(route.split('/').reduce((pathname, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return pathname;\n        }\n        // Groups are ignored.\n        if (isGroupSegment(segment)) {\n            return pathname;\n        }\n        // Parallel segments are ignored.\n        if (segment[0] === '@') {\n            return pathname;\n        }\n        // The last segment (if it's a leaf) should be ignored.\n        if ((segment === 'page' || segment === 'route') && index === segments.length - 1) {\n            return pathname;\n        }\n        return pathname + \"/\" + segment;\n    }, ''));\n}\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */ export function normalizeRscURL(url) {\n    return url.replace(/\\.rsc($|\\?)/, // $1 ensures `?` is preserved\n    '$1');\n}\n\n//# sourceMappingURL=app-paths.js.map","/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */ export function ensureLeadingSlash(path) {\n    return path.startsWith('/') ? path : \"/\" + path;\n}\n\n//# sourceMappingURL=ensure-leading-slash.js.map","import { CACHE_ONE_YEAR } from '../../lib/constants'\n\n/**\n * The revalidate option used internally for pages. A value of `false` means\n * that the page should not be revalidated. A number means that the page\n * should be revalidated after the given number of seconds (this also includes\n * `1` which means to revalidate after 1 second). A value of `0` is not a valid\n * value for this option.\n */\nexport type Revalidate = number | false\n\nexport interface CacheControl {\n  revalidate: Revalidate\n  expire: number | undefined\n}\n\nexport function getCacheControlHeader({\n  revalidate,\n  expire,\n}: CacheControl): string {\n  const swrHeader =\n    typeof revalidate === 'number' &&\n    expire !== undefined &&\n    revalidate < expire\n      ? `, stale-while-revalidate=${expire - revalidate}`\n      : ''\n\n  if (revalidate === 0) {\n    return 'private, no-cache, no-store, max-age=0, must-revalidate'\n  } else if (typeof revalidate === 'number') {\n    return `s-maxage=${revalidate}${swrHeader}`\n  }\n\n  return `s-maxage=${CACHE_ONE_YEAR}${swrHeader}`\n}\n","/**\n * Define a GROQ query. This is a no-op, but it helps editor integrations\n * understand that a string represents a GROQ query in order to provide syntax highlighting\n * and other features.\n *\n * Ideally the `groq` template tag would be used, but we cannot infer types from it until\n * microsoft/TypeScript#33304 is resolved. Otherwise, there is no difference between this\n * and the `groq` template tag.\n *\n * @param query - The GROQ query\n * @returns The same string as the input\n * @public\n */\nexport function defineQuery<const Q extends string>(query: Q): Q {\n  return query\n}\n","/**\n * Pass-through groq template tag. This is a no-op, but it helps editor integrations\n * understand that a string represents a GROQ query in order to provide syntax highlighting\n * and other features.\n *\n * @param strings - Template string parts\n * @param keys - Template string keys\n * @returns The same string as the input\n * @public\n */\nexport function groq(strings: TemplateStringsArray, ...keys: any[]): string {\n  const lastIndex = strings.length - 1\n  return (\n    strings.slice(0, lastIndex).reduce((acc, str, i) => {\n      return acc + str + keys[i]\n    }, '') + strings[lastIndex]\n  )\n}\n","\"use strict\";\n\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nexports._ = _interop_require_default;\n","let warnOnce = (_: string) => {}\nif (process.env.NODE_ENV !== 'production') {\n  const warnings = new Set<string>()\n  warnOnce = (msg: string) => {\n    if (!warnings.has(msg)) {\n      console.warn(msg)\n    }\n    warnings.add(msg)\n  }\n}\n\nexport { warnOnce }\n","/**\n * A shared function, used on both client and server, to generate a SVG blur placeholder.\n */\nexport function getImageBlurSvg({\n  widthInt,\n  heightInt,\n  blurWidth,\n  blurHeight,\n  blurDataURL,\n  objectFit,\n}: {\n  widthInt?: number\n  heightInt?: number\n  blurWidth?: number\n  blurHeight?: number\n  blurDataURL: string\n  objectFit?: string\n}): string {\n  const std = 20\n  const svgWidth = blurWidth ? blurWidth * 40 : widthInt\n  const svgHeight = blurHeight ? blurHeight * 40 : heightInt\n\n  const viewBox =\n    svgWidth && svgHeight ? `viewBox='0 0 ${svgWidth} ${svgHeight}'` : ''\n  const preserveAspectRatio = viewBox\n    ? 'none'\n    : objectFit === 'contain'\n      ? 'xMidYMid'\n      : objectFit === 'cover'\n        ? 'xMidYMid slice'\n        : 'none'\n\n  return `%3Csvg xmlns='http://www.w3.org/2000/svg' ${viewBox}%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='${std}'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='${std}'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='${preserveAspectRatio}' style='filter: url(%23b);' href='${blurDataURL}'/%3E%3C/svg%3E`\n}\n","export const VALID_LOADERS = [\n  'default',\n  'imgix',\n  'cloudinary',\n  'akamai',\n  'custom',\n] as const\n\nexport type LoaderValue = (typeof VALID_LOADERS)[number]\n\nexport type ImageLoaderProps = {\n  src: string\n  width: number\n  quality?: number\n}\n\nexport type ImageLoaderPropsWithConfig = ImageLoaderProps & {\n  config: Readonly<ImageConfig>\n}\n\nexport type LocalPattern = {\n  /**\n   * Can be literal or wildcard.\n   * Single `*` matches a single path segment.\n   * Double `**` matches any number of path segments.\n   */\n  pathname?: string\n\n  /**\n   * Can be literal query string such as `?v=1` or\n   * empty string meaning no query string.\n   */\n  search?: string\n}\n\nexport type RemotePattern = {\n  /**\n   * Must be `http` or `https`.\n   */\n  protocol?: 'http' | 'https'\n\n  /**\n   * Can be literal or wildcard.\n   * Single `*` matches a single subdomain.\n   * Double `**` matches any number of subdomains.\n   */\n  hostname: string\n\n  /**\n   * Can be literal port such as `8080` or empty string\n   * meaning no port.\n   */\n  port?: string\n\n  /**\n   * Can be literal or wildcard.\n   * Single `*` matches a single path segment.\n   * Double `**` matches any number of path segments.\n   */\n  pathname?: string\n\n  /**\n   * Can be literal query string such as `?v=1` or\n   * empty string meaning no query string.\n   */\n  search?: string\n}\n\ntype ImageFormat = 'image/avif' | 'image/webp'\n\n/**\n * Image configurations\n *\n * @see [Image configuration options](https://nextjs.org/docs/api-reference/next/image#configuration-options)\n */\nexport type ImageConfigComplete = {\n  /** @see [Device sizes documentation](https://nextjs.org/docs/api-reference/next/image#device-sizes) */\n  deviceSizes: number[]\n\n  /** @see [Image sizing documentation](https://nextjs.org/docs/app/building-your-application/optimizing/images#image-sizing) */\n  imageSizes: number[]\n\n  /** @see [Image loaders configuration](https://nextjs.org/docs/api-reference/next/legacy/image#loader) */\n  loader: LoaderValue\n\n  /** @see [Image loader configuration](https://nextjs.org/docs/app/api-reference/components/image#path) */\n  path: string\n\n  /** @see [Image loader configuration](https://nextjs.org/docs/api-reference/next/image#loader-configuration) */\n  loaderFile: string\n\n  /**\n   * @deprecated Use `remotePatterns` instead.\n   */\n  domains: string[]\n\n  /** @see [Disable static image import configuration](https://nextjs.org/docs/api-reference/next/image#disable-static-imports) */\n  disableStaticImages: boolean\n\n  /** @see [Cache behavior](https://nextjs.org/docs/api-reference/next/image#caching-behavior) */\n  minimumCacheTTL: number\n\n  /** @see [Acceptable formats](https://nextjs.org/docs/api-reference/next/image#acceptable-formats) */\n  formats: ImageFormat[]\n\n  /** @see [Dangerously Allow SVG](https://nextjs.org/docs/api-reference/next/image#dangerously-allow-svg) */\n  dangerouslyAllowSVG: boolean\n\n  /** @see [Content Security Policy](https://nextjs.org/docs/api-reference/next/image#contentsecuritypolicy) */\n  contentSecurityPolicy: string\n\n  /** @see [Content Disposition Type](https://nextjs.org/docs/api-reference/next/image#contentdispositiontype) */\n  contentDispositionType: 'inline' | 'attachment'\n\n  /** @see [Remote Patterns](https://nextjs.org/docs/api-reference/next/image#remotepatterns) */\n  remotePatterns: Array<URL | RemotePattern>\n\n  /** @see [Local Patterns](https://nextjs.org/docs/api-reference/next/image#localPatterns) */\n  localPatterns: LocalPattern[] | undefined\n\n  /** @see [Qualities](https://nextjs.org/docs/api-reference/next/image#qualities) */\n  qualities: number[] | undefined\n\n  /** @see [Unoptimized](https://nextjs.org/docs/api-reference/next/image#unoptimized) */\n  unoptimized: boolean\n}\n\nexport type ImageConfig = Partial<ImageConfigComplete>\n\nexport const imageConfigDefault: ImageConfigComplete = {\n  deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],\n  imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],\n  path: '/_next/image',\n  loader: 'default',\n  loaderFile: '',\n  domains: [],\n  disableStaticImages: false,\n  minimumCacheTTL: 60,\n  formats: ['image/webp'],\n  dangerouslyAllowSVG: false,\n  contentSecurityPolicy: `script-src 'none'; frame-src 'none'; sandbox;`,\n  contentDispositionType: 'attachment',\n  localPatterns: undefined, // default: allow all local images\n  remotePatterns: [], // default: allow no remote images\n  qualities: undefined, // default: allow all qualities\n  unoptimized: false,\n}\n","import { warnOnce } from './utils/warn-once'\nimport { getImageBlurSvg } from './image-blur-svg'\nimport { imageConfigDefault } from './image-config'\nimport type {\n  ImageConfigComplete,\n  ImageLoaderProps,\n  ImageLoaderPropsWithConfig,\n} from './image-config'\n\nimport type { CSSProperties, JSX } from 'react'\n\nexport interface StaticImageData {\n  src: string\n  height: number\n  width: number\n  blurDataURL?: string\n  blurWidth?: number\n  blurHeight?: number\n}\n\nexport interface StaticRequire {\n  default: StaticImageData\n}\n\nexport type StaticImport = StaticRequire | StaticImageData\n\nexport type ImageProps = Omit<\n  JSX.IntrinsicElements['img'],\n  'src' | 'srcSet' | 'ref' | 'alt' | 'width' | 'height' | 'loading'\n> & {\n  src: string | StaticImport\n  alt: string\n  width?: number | `${number}`\n  height?: number | `${number}`\n  fill?: boolean\n  loader?: ImageLoader\n  quality?: number | `${number}`\n  priority?: boolean\n  loading?: LoadingValue\n  placeholder?: PlaceholderValue\n  blurDataURL?: string\n  unoptimized?: boolean\n  overrideSrc?: string\n  /**\n   * @deprecated Use `onLoad` instead.\n   * @see https://nextjs.org/docs/app/api-reference/components/image#onload\n   */\n  onLoadingComplete?: OnLoadingComplete\n  /**\n   * @deprecated Use `fill` prop instead of `layout=\"fill\"` or change import to `next/legacy/image`.\n   * @see https://nextjs.org/docs/api-reference/next/legacy/image\n   */\n  layout?: string\n  /**\n   * @deprecated Use `style` prop instead.\n   */\n  objectFit?: string\n  /**\n   * @deprecated Use `style` prop instead.\n   */\n  objectPosition?: string\n  /**\n   * @deprecated This prop does not do anything.\n   */\n  lazyBoundary?: string\n  /**\n   * @deprecated This prop does not do anything.\n   */\n  lazyRoot?: string\n}\n\nexport type ImgProps = Omit<ImageProps, 'src' | 'loader'> & {\n  loading: LoadingValue\n  width: number | undefined\n  height: number | undefined\n  style: NonNullable<JSX.IntrinsicElements['img']['style']>\n  sizes: string | undefined\n  srcSet: string | undefined\n  src: string\n}\n\nconst VALID_LOADING_VALUES = ['lazy', 'eager', undefined] as const\n\n// Object-fit values that are not valid background-size values\nconst INVALID_BACKGROUND_SIZE_VALUES = [\n  '-moz-initial',\n  'fill',\n  'none',\n  'scale-down',\n  undefined,\n]\ntype LoadingValue = (typeof VALID_LOADING_VALUES)[number]\ntype ImageConfig = ImageConfigComplete & {\n  allSizes: number[]\n  output?: 'standalone' | 'export'\n}\n\nexport type ImageLoader = (p: ImageLoaderProps) => string\n\n// Do not export - this is an internal type only\n// because `next.config.js` is only meant for the\n// built-in loaders, not for a custom loader() prop.\ntype ImageLoaderWithConfig = (p: ImageLoaderPropsWithConfig) => string\n\nexport type PlaceholderValue = 'blur' | 'empty' | `data:image/${string}`\nexport type OnLoad = React.ReactEventHandler<HTMLImageElement> | undefined\nexport type OnLoadingComplete = (img: HTMLImageElement) => void\n\nexport type PlaceholderStyle = Partial<\n  Pick<\n    CSSProperties,\n    | 'backgroundSize'\n    | 'backgroundPosition'\n    | 'backgroundRepeat'\n    | 'backgroundImage'\n  >\n>\n\nfunction isStaticRequire(\n  src: StaticRequire | StaticImageData\n): src is StaticRequire {\n  return (src as StaticRequire).default !== undefined\n}\n\nfunction isStaticImageData(\n  src: StaticRequire | StaticImageData\n): src is StaticImageData {\n  return (src as StaticImageData).src !== undefined\n}\n\nfunction isStaticImport(src: string | StaticImport): src is StaticImport {\n  return (\n    !!src &&\n    typeof src === 'object' &&\n    (isStaticRequire(src as StaticImport) ||\n      isStaticImageData(src as StaticImport))\n  )\n}\n\nconst allImgs = new Map<\n  string,\n  { src: string; priority: boolean; placeholder: PlaceholderValue }\n>()\nlet perfObserver: PerformanceObserver | undefined\n\nfunction getInt(x: unknown): number | undefined {\n  if (typeof x === 'undefined') {\n    return x\n  }\n  if (typeof x === 'number') {\n    return Number.isFinite(x) ? x : NaN\n  }\n  if (typeof x === 'string' && /^[0-9]+$/.test(x)) {\n    return parseInt(x, 10)\n  }\n  return NaN\n}\n\nfunction getWidths(\n  { deviceSizes, allSizes }: ImageConfig,\n  width: number | undefined,\n  sizes: string | undefined\n): { widths: number[]; kind: 'w' | 'x' } {\n  if (sizes) {\n    // Find all the \"vw\" percent sizes used in the sizes prop\n    const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g\n    const percentSizes = []\n    for (let match; (match = viewportWidthRe.exec(sizes)); match) {\n      percentSizes.push(parseInt(match[2]))\n    }\n    if (percentSizes.length) {\n      const smallestRatio = Math.min(...percentSizes) * 0.01\n      return {\n        widths: allSizes.filter((s) => s >= deviceSizes[0] * smallestRatio),\n        kind: 'w',\n      }\n    }\n    return { widths: allSizes, kind: 'w' }\n  }\n  if (typeof width !== 'number') {\n    return { widths: deviceSizes, kind: 'w' }\n  }\n\n  const widths = [\n    ...new Set(\n      // > This means that most OLED screens that say they are 3x resolution,\n      // > are actually 3x in the green color, but only 1.5x in the red and\n      // > blue colors. Showing a 3x resolution image in the app vs a 2x\n      // > resolution image will be visually the same, though the 3x image\n      // > takes significantly more data. Even true 3x resolution screens are\n      // > wasteful as the human eye cannot see that level of detail without\n      // > something like a magnifying glass.\n      // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n      [width, width * 2 /*, width * 3*/].map(\n        (w) => allSizes.find((p) => p >= w) || allSizes[allSizes.length - 1]\n      )\n    ),\n  ]\n  return { widths, kind: 'x' }\n}\n\ntype GenImgAttrsData = {\n  config: ImageConfig\n  src: string\n  unoptimized: boolean\n  loader: ImageLoaderWithConfig\n  width?: number\n  quality?: number\n  sizes?: string\n}\n\ntype GenImgAttrsResult = {\n  src: string\n  srcSet: string | undefined\n  sizes: string | undefined\n}\n\nfunction generateImgAttrs({\n  config,\n  src,\n  unoptimized,\n  width,\n  quality,\n  sizes,\n  loader,\n}: GenImgAttrsData): GenImgAttrsResult {\n  if (unoptimized) {\n    return { src, srcSet: undefined, sizes: undefined }\n  }\n\n  const { widths, kind } = getWidths(config, width, sizes)\n  const last = widths.length - 1\n\n  return {\n    sizes: !sizes && kind === 'w' ? '100vw' : sizes,\n    srcSet: widths\n      .map(\n        (w, i) =>\n          `${loader({ config, src, quality, width: w })} ${\n            kind === 'w' ? w : i + 1\n          }${kind}`\n      )\n      .join(', '),\n\n    // It's intended to keep `src` the last attribute because React updates\n    // attributes in order. If we keep `src` the first one, Safari will\n    // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n    // updated by React. That causes multiple unnecessary requests if `srcSet`\n    // and `sizes` are defined.\n    // This bug cannot be reproduced in Chrome or Firefox.\n    src: loader({ config, src, quality, width: widths[last] }),\n  }\n}\n\n/**\n * A shared function, used on both client and server, to generate the props for <img>.\n */\nexport function getImgProps(\n  {\n    src,\n    sizes,\n    unoptimized = false,\n    priority = false,\n    loading,\n    className,\n    quality,\n    width,\n    height,\n    fill = false,\n    style,\n    overrideSrc,\n    onLoad,\n    onLoadingComplete,\n    placeholder = 'empty',\n    blurDataURL,\n    fetchPriority,\n    decoding = 'async',\n    layout,\n    objectFit,\n    objectPosition,\n    lazyBoundary,\n    lazyRoot,\n    ...rest\n  }: ImageProps,\n  _state: {\n    defaultLoader: ImageLoaderWithConfig\n    imgConf: ImageConfigComplete\n    showAltText?: boolean\n    blurComplete?: boolean\n  }\n): {\n  props: ImgProps\n  meta: {\n    unoptimized: boolean\n    priority: boolean\n    placeholder: NonNullable<ImageProps['placeholder']>\n    fill: boolean\n  }\n} {\n  const { imgConf, showAltText, blurComplete, defaultLoader } = _state\n  let config: ImageConfig\n  let c = imgConf || imageConfigDefault\n  if ('allSizes' in c) {\n    config = c as ImageConfig\n  } else {\n    const allSizes = [...c.deviceSizes, ...c.imageSizes].sort((a, b) => a - b)\n    const deviceSizes = c.deviceSizes.sort((a, b) => a - b)\n    const qualities = c.qualities?.sort((a, b) => a - b)\n    config = { ...c, allSizes, deviceSizes, qualities }\n  }\n\n  if (typeof defaultLoader === 'undefined') {\n    throw new Error(\n      'images.loaderFile detected but the file is missing default export.\\nRead more: https://nextjs.org/docs/messages/invalid-images-config'\n    )\n  }\n  let loader: ImageLoaderWithConfig = rest.loader || defaultLoader\n\n  // Remove property so it's not spread on <img> element\n  delete rest.loader\n  delete (rest as any).srcSet\n\n  // This special value indicates that the user\n  // didn't define a \"loader\" prop or \"loader\" config.\n  const isDefaultLoader = '__next_img_default' in loader\n\n  if (isDefaultLoader) {\n    if (config.loader === 'custom') {\n      throw new Error(\n        `Image with src \"${src}\" is missing \"loader\" prop.` +\n          `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader`\n      )\n    }\n  } else {\n    // The user defined a \"loader\" prop or config.\n    // Since the config object is internal only, we\n    // must not pass it to the user-defined \"loader\".\n    const customImageLoader = loader as ImageLoader\n    loader = (obj) => {\n      const { config: _, ...opts } = obj\n      return customImageLoader(opts)\n    }\n  }\n\n  if (layout) {\n    if (layout === 'fill') {\n      fill = true\n    }\n    const layoutToStyle: Record<string, Record<string, string> | undefined> = {\n      intrinsic: { maxWidth: '100%', height: 'auto' },\n      responsive: { width: '100%', height: 'auto' },\n    }\n    const layoutToSizes: Record<string, string | undefined> = {\n      responsive: '100vw',\n      fill: '100vw',\n    }\n    const layoutStyle = layoutToStyle[layout]\n    if (layoutStyle) {\n      style = { ...style, ...layoutStyle }\n    }\n    const layoutSizes = layoutToSizes[layout]\n    if (layoutSizes && !sizes) {\n      sizes = layoutSizes\n    }\n  }\n\n  let staticSrc = ''\n  let widthInt = getInt(width)\n  let heightInt = getInt(height)\n  let blurWidth: number | undefined\n  let blurHeight: number | undefined\n  if (isStaticImport(src)) {\n    const staticImageData = isStaticRequire(src) ? src.default : src\n\n    if (!staticImageData.src) {\n      throw new Error(\n        `An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received ${JSON.stringify(\n          staticImageData\n        )}`\n      )\n    }\n    if (!staticImageData.height || !staticImageData.width) {\n      throw new Error(\n        `An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received ${JSON.stringify(\n          staticImageData\n        )}`\n      )\n    }\n\n    blurWidth = staticImageData.blurWidth\n    blurHeight = staticImageData.blurHeight\n    blurDataURL = blurDataURL || staticImageData.blurDataURL\n    staticSrc = staticImageData.src\n\n    if (!fill) {\n      if (!widthInt && !heightInt) {\n        widthInt = staticImageData.width\n        heightInt = staticImageData.height\n      } else if (widthInt && !heightInt) {\n        const ratio = widthInt / staticImageData.width\n        heightInt = Math.round(staticImageData.height * ratio)\n      } else if (!widthInt && heightInt) {\n        const ratio = heightInt / staticImageData.height\n        widthInt = Math.round(staticImageData.width * ratio)\n      }\n    }\n  }\n  src = typeof src === 'string' ? src : staticSrc\n\n  let isLazy =\n    !priority && (loading === 'lazy' || typeof loading === 'undefined')\n  if (!src || src.startsWith('data:') || src.startsWith('blob:')) {\n    // https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n    unoptimized = true\n    isLazy = false\n  }\n  if (config.unoptimized) {\n    unoptimized = true\n  }\n  if (\n    isDefaultLoader &&\n    !config.dangerouslyAllowSVG &&\n    src.split('?', 1)[0].endsWith('.svg')\n  ) {\n    // Special case to make svg serve as-is to avoid proxying\n    // through the built-in Image Optimization API.\n    unoptimized = true\n  }\n\n  const qualityInt = getInt(quality)\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (config.output === 'export' && isDefaultLoader && !unoptimized) {\n      throw new Error(\n        `Image Optimization using the default loader is not compatible with \\`{ output: 'export' }\\`.\n  Possible solutions:\n    - Remove \\`{ output: 'export' }\\` and run \"next start\" to run server mode including the Image Optimization API.\n    - Configure \\`{ images: { unoptimized: true } }\\` in \\`next.config.js\\` to disable the Image Optimization API.\n  Read more: https://nextjs.org/docs/messages/export-image-api`\n      )\n    }\n    if (!src) {\n      // React doesn't show the stack trace and there's\n      // no `src` to help identify which image, so we\n      // instead console.error(ref) during mount.\n      unoptimized = true\n    } else {\n      if (fill) {\n        if (width) {\n          throw new Error(\n            `Image with src \"${src}\" has both \"width\" and \"fill\" properties. Only one should be used.`\n          )\n        }\n        if (height) {\n          throw new Error(\n            `Image with src \"${src}\" has both \"height\" and \"fill\" properties. Only one should be used.`\n          )\n        }\n        if (style?.position && style.position !== 'absolute') {\n          throw new Error(\n            `Image with src \"${src}\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.`\n          )\n        }\n        if (style?.width && style.width !== '100%') {\n          throw new Error(\n            `Image with src \"${src}\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.`\n          )\n        }\n        if (style?.height && style.height !== '100%') {\n          throw new Error(\n            `Image with src \"${src}\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.`\n          )\n        }\n      } else {\n        if (typeof widthInt === 'undefined') {\n          throw new Error(\n            `Image with src \"${src}\" is missing required \"width\" property.`\n          )\n        } else if (isNaN(widthInt)) {\n          throw new Error(\n            `Image with src \"${src}\" has invalid \"width\" property. Expected a numeric value in pixels but received \"${width}\".`\n          )\n        }\n        if (typeof heightInt === 'undefined') {\n          throw new Error(\n            `Image with src \"${src}\" is missing required \"height\" property.`\n          )\n        } else if (isNaN(heightInt)) {\n          throw new Error(\n            `Image with src \"${src}\" has invalid \"height\" property. Expected a numeric value in pixels but received \"${height}\".`\n          )\n        }\n        // eslint-disable-next-line no-control-regex\n        if (/^[\\x00-\\x20]/.test(src)) {\n          throw new Error(\n            `Image with src \"${src}\" cannot start with a space or control character. Use src.trimStart() to remove it or encodeURIComponent(src) to keep it.`\n          )\n        }\n        // eslint-disable-next-line no-control-regex\n        if (/[\\x00-\\x20]$/.test(src)) {\n          throw new Error(\n            `Image with src \"${src}\" cannot end with a space or control character. Use src.trimEnd() to remove it or encodeURIComponent(src) to keep it.`\n          )\n        }\n      }\n    }\n    if (!VALID_LOADING_VALUES.includes(loading)) {\n      throw new Error(\n        `Image with src \"${src}\" has invalid \"loading\" property. Provided \"${loading}\" should be one of ${VALID_LOADING_VALUES.map(\n          String\n        ).join(',')}.`\n      )\n    }\n    if (priority && loading === 'lazy') {\n      throw new Error(\n        `Image with src \"${src}\" has both \"priority\" and \"loading='lazy'\" properties. Only one should be used.`\n      )\n    }\n    if (\n      placeholder !== 'empty' &&\n      placeholder !== 'blur' &&\n      !placeholder.startsWith('data:image/')\n    ) {\n      throw new Error(\n        `Image with src \"${src}\" has invalid \"placeholder\" property \"${placeholder}\".`\n      )\n    }\n    if (placeholder !== 'empty') {\n      if (widthInt && heightInt && widthInt * heightInt < 1600) {\n        warnOnce(\n          `Image with src \"${src}\" is smaller than 40x40. Consider removing the \"placeholder\" property to improve performance.`\n        )\n      }\n    }\n    if (qualityInt && qualityInt !== 75 && !config.qualities) {\n      warnOnce(\n        `Image with src \"${src}\" is using quality \"${qualityInt}\" which is not configured in images.qualities. This config will be required starting in Next.js 16.` +\n          `\\nRead more: https://nextjs.org/docs/messages/next-image-unconfigured-qualities`\n      )\n    }\n    if (\n      src.startsWith('/') &&\n      src.includes('?') &&\n      (!config?.localPatterns?.length ||\n        (config.localPatterns.length === 1 &&\n          config.localPatterns[0].pathname === '/_next/static/media/**'))\n    ) {\n      warnOnce(\n        `Image with src \"${src}\" is using a query string which is not configured in images.localPatterns. This config will be required starting in Next.js 16.` +\n          `\\nRead more: https://nextjs.org/docs/messages/next-image-unconfigured-localpatterns`\n      )\n    }\n    if (placeholder === 'blur' && !blurDataURL) {\n      const VALID_BLUR_EXT = ['jpeg', 'png', 'webp', 'avif'] // should match next-image-loader\n\n      throw new Error(\n        `Image with src \"${src}\" has \"placeholder='blur'\" property but is missing the \"blurDataURL\" property.\n        Possible solutions:\n          - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\n          - Change the \"src\" property to a static import with one of the supported file types: ${VALID_BLUR_EXT.join(\n            ','\n          )} (animated images not supported)\n          - Remove the \"placeholder\" property, effectively no blur effect\n        Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url`\n      )\n    }\n    if ('ref' in rest) {\n      warnOnce(\n        `Image with src \"${src}\" is using unsupported \"ref\" property. Consider using the \"onLoad\" property instead.`\n      )\n    }\n\n    if (!unoptimized && !isDefaultLoader) {\n      const urlStr = loader({\n        config,\n        src,\n        width: widthInt || 400,\n        quality: qualityInt || 75,\n      })\n      let url: URL | undefined\n      try {\n        url = new URL(urlStr)\n      } catch (err) {}\n      if (urlStr === src || (url && url.pathname === src && !url.search)) {\n        warnOnce(\n          `Image with src \"${src}\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.` +\n            `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width`\n        )\n      }\n    }\n\n    if (onLoadingComplete) {\n      warnOnce(\n        `Image with src \"${src}\" is using deprecated \"onLoadingComplete\" property. Please use the \"onLoad\" property instead.`\n      )\n    }\n\n    for (const [legacyKey, legacyValue] of Object.entries({\n      layout,\n      objectFit,\n      objectPosition,\n      lazyBoundary,\n      lazyRoot,\n    })) {\n      if (legacyValue) {\n        warnOnce(\n          `Image with src \"${src}\" has legacy prop \"${legacyKey}\". Did you forget to run the codemod?` +\n            `\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13`\n        )\n      }\n    }\n\n    if (\n      typeof window !== 'undefined' &&\n      !perfObserver &&\n      window.PerformanceObserver\n    ) {\n      perfObserver = new PerformanceObserver((entryList) => {\n        for (const entry of entryList.getEntries()) {\n          // @ts-ignore - missing \"LargestContentfulPaint\" class with \"element\" prop\n          const imgSrc = entry?.element?.src || ''\n          const lcpImage = allImgs.get(imgSrc)\n          if (\n            lcpImage &&\n            !lcpImage.priority &&\n            lcpImage.placeholder === 'empty' &&\n            !lcpImage.src.startsWith('data:') &&\n            !lcpImage.src.startsWith('blob:')\n          ) {\n            // https://web.dev/lcp/#measure-lcp-in-javascript\n            warnOnce(\n              `Image with src \"${lcpImage.src}\" was detected as the Largest Contentful Paint (LCP). Please add the \"priority\" property if this image is above the fold.` +\n                `\\nRead more: https://nextjs.org/docs/api-reference/next/image#priority`\n            )\n          }\n        }\n      })\n      try {\n        perfObserver.observe({\n          type: 'largest-contentful-paint',\n          buffered: true,\n        })\n      } catch (err) {\n        // Log error but don't crash the app\n        console.error(err)\n      }\n    }\n  }\n  const imgStyle = Object.assign(\n    fill\n      ? {\n          position: 'absolute',\n          height: '100%',\n          width: '100%',\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          objectFit,\n          objectPosition,\n        }\n      : {},\n    showAltText ? {} : { color: 'transparent' },\n    style\n  )\n\n  const backgroundImage =\n    !blurComplete && placeholder !== 'empty'\n      ? placeholder === 'blur'\n        ? `url(\"data:image/svg+xml;charset=utf-8,${getImageBlurSvg({\n            widthInt,\n            heightInt,\n            blurWidth,\n            blurHeight,\n            blurDataURL: blurDataURL || '', // assume not undefined\n            objectFit: imgStyle.objectFit,\n          })}\")`\n        : `url(\"${placeholder}\")` // assume `data:image/`\n      : null\n\n  const backgroundSize = !INVALID_BACKGROUND_SIZE_VALUES.includes(\n    imgStyle.objectFit\n  )\n    ? imgStyle.objectFit\n    : imgStyle.objectFit === 'fill'\n      ? '100% 100%' // the background-size equivalent of `fill`\n      : 'cover'\n\n  let placeholderStyle: PlaceholderStyle = backgroundImage\n    ? {\n        backgroundSize,\n        backgroundPosition: imgStyle.objectPosition || '50% 50%',\n        backgroundRepeat: 'no-repeat',\n        backgroundImage,\n      }\n    : {}\n\n  if (process.env.NODE_ENV === 'development') {\n    if (\n      placeholderStyle.backgroundImage &&\n      placeholder === 'blur' &&\n      blurDataURL?.startsWith('/')\n    ) {\n      // During `next dev`, we don't want to generate blur placeholders with webpack\n      // because it can delay starting the dev server. Instead, `next-image-loader.js`\n      // will inline a special url to lazily generate the blur placeholder at request time.\n      placeholderStyle.backgroundImage = `url(\"${blurDataURL}\")`\n    }\n  }\n\n  const imgAttributes = generateImgAttrs({\n    config,\n    src,\n    unoptimized,\n    width: widthInt,\n    quality: qualityInt,\n    sizes,\n    loader,\n  })\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof window !== 'undefined') {\n      let fullUrl: URL\n      try {\n        fullUrl = new URL(imgAttributes.src)\n      } catch (e) {\n        fullUrl = new URL(imgAttributes.src, window.location.href)\n      }\n      allImgs.set(fullUrl.href, { src, priority, placeholder })\n    }\n  }\n\n  const props: ImgProps = {\n    ...rest,\n    loading: isLazy ? 'lazy' : loading,\n    fetchPriority,\n    width: widthInt,\n    height: heightInt,\n    decoding,\n    className,\n    style: { ...imgStyle, ...placeholderStyle },\n    sizes: imgAttributes.sizes,\n    srcSet: imgAttributes.srcSet,\n    src: overrideSrc || imgAttributes.src,\n  }\n  const meta = { unoptimized, priority, placeholder, fill }\n  return { props, meta }\n}\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/image-component.js\"));\n","'use client'\n\nimport React, {\n  useRef,\n  useEffect,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n  forwardRef,\n  use,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport Head from '../shared/lib/head'\nimport { getImgProps } from '../shared/lib/get-img-props'\nimport type {\n  ImageProps,\n  ImgProps,\n  OnLoad,\n  OnLoadingComplete,\n  PlaceholderValue,\n} from '../shared/lib/get-img-props'\nimport type {\n  ImageConfigComplete,\n  ImageLoaderProps,\n} from '../shared/lib/image-config'\nimport { imageConfigDefault } from '../shared/lib/image-config'\nimport { ImageConfigContext } from '../shared/lib/image-config-context.shared-runtime'\nimport { warnOnce } from '../shared/lib/utils/warn-once'\nimport { RouterContext } from '../shared/lib/router-context.shared-runtime'\n\n// This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader'\nimport { useMergedRef } from './use-merged-ref'\n\n// This is replaced by webpack define plugin\nconst configEnv = process.env.__NEXT_IMAGE_OPTS as any as ImageConfigComplete\n\nif (typeof window === 'undefined') {\n  ;(globalThis as any).__NEXT_IMAGE_IMPORTED = true\n}\n\nexport type { ImageLoaderProps }\nexport type ImageLoader = (p: ImageLoaderProps) => string\n\ntype ImgElementWithDataProp = HTMLImageElement & {\n  'data-loaded-src': string | undefined\n}\n\ntype ImageElementProps = ImgProps & {\n  unoptimized: boolean\n  placeholder: PlaceholderValue\n  onLoadRef: React.MutableRefObject<OnLoad | undefined>\n  onLoadingCompleteRef: React.MutableRefObject<OnLoadingComplete | undefined>\n  setBlurComplete: (b: boolean) => void\n  setShowAltText: (b: boolean) => void\n  sizesInput: string | undefined\n}\n\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(\n  img: ImgElementWithDataProp,\n  placeholder: PlaceholderValue,\n  onLoadRef: React.MutableRefObject<OnLoad | undefined>,\n  onLoadingCompleteRef: React.MutableRefObject<OnLoadingComplete | undefined>,\n  setBlurComplete: (b: boolean) => void,\n  unoptimized: boolean,\n  sizesInput: string | undefined\n) {\n  const src = img?.src\n  if (!img || img['data-loaded-src'] === src) {\n    return\n  }\n  img['data-loaded-src'] = src\n  const p = 'decode' in img ? img.decode() : Promise.resolve()\n  p.catch(() => {}).then(() => {\n    if (!img.parentElement || !img.isConnected) {\n      // Exit early in case of race condition:\n      // - onload() is called\n      // - decode() is called but incomplete\n      // - unmount is called\n      // - decode() completes\n      return\n    }\n    if (placeholder !== 'empty') {\n      setBlurComplete(true)\n    }\n    if (onLoadRef?.current) {\n      // Since we don't have the SyntheticEvent here,\n      // we must create one with the same shape.\n      // See https://reactjs.org/docs/events.html\n      const event = new Event('load')\n      Object.defineProperty(event, 'target', { writable: false, value: img })\n      let prevented = false\n      let stopped = false\n      onLoadRef.current({\n        ...event,\n        nativeEvent: event,\n        currentTarget: img,\n        target: img,\n        isDefaultPrevented: () => prevented,\n        isPropagationStopped: () => stopped,\n        persist: () => {},\n        preventDefault: () => {\n          prevented = true\n          event.preventDefault()\n        },\n        stopPropagation: () => {\n          stopped = true\n          event.stopPropagation()\n        },\n      })\n    }\n    if (onLoadingCompleteRef?.current) {\n      onLoadingCompleteRef.current(img)\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const origSrc = new URL(src, 'http://n').searchParams.get('url') || src\n      if (img.getAttribute('data-nimg') === 'fill') {\n        if (!unoptimized && (!sizesInput || sizesInput === '100vw')) {\n          let widthViewportRatio =\n            img.getBoundingClientRect().width / window.innerWidth\n          if (widthViewportRatio < 0.6) {\n            if (sizesInput === '100vw') {\n              warnOnce(\n                `Image with src \"${origSrc}\" has \"fill\" prop and \"sizes\" prop of \"100vw\", but image is not rendered at full viewport width. Please adjust \"sizes\" to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes`\n              )\n            } else {\n              warnOnce(\n                `Image with src \"${origSrc}\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes`\n              )\n            }\n          }\n        }\n        if (img.parentElement) {\n          const { position } = window.getComputedStyle(img.parentElement)\n          const valid = ['absolute', 'fixed', 'relative']\n          if (!valid.includes(position)) {\n            warnOnce(\n              `Image with src \"${origSrc}\" has \"fill\" and parent element with invalid \"position\". Provided \"${position}\" should be one of ${valid\n                .map(String)\n                .join(',')}.`\n            )\n          }\n        }\n        if (img.height === 0) {\n          warnOnce(\n            `Image with src \"${origSrc}\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.`\n          )\n        }\n      }\n\n      const heightModified =\n        img.height.toString() !== img.getAttribute('height')\n      const widthModified = img.width.toString() !== img.getAttribute('width')\n      if (\n        (heightModified && !widthModified) ||\n        (!heightModified && widthModified)\n      ) {\n        warnOnce(\n          `Image with src \"${origSrc}\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles 'width: \"auto\"' or 'height: \"auto\"' to maintain the aspect ratio.`\n        )\n      }\n    }\n  })\n}\n\nfunction getDynamicProps(\n  fetchPriority?: string\n): Record<string, string | undefined> {\n  if (Boolean(use)) {\n    // In React 19.0.0 or newer, we must use camelCase\n    // prop to avoid \"Warning: Invalid DOM property\".\n    // See https://github.com/facebook/react/pull/25927\n    return { fetchPriority }\n  }\n  // In React 18.2.0 or older, we must use lowercase prop\n  // to avoid \"Warning: Invalid DOM property\".\n  return { fetchpriority: fetchPriority }\n}\n\nconst ImageElement = forwardRef<HTMLImageElement | null, ImageElementProps>(\n  (\n    {\n      src,\n      srcSet,\n      sizes,\n      height,\n      width,\n      decoding,\n      className,\n      style,\n      fetchPriority,\n      placeholder,\n      loading,\n      unoptimized,\n      fill,\n      onLoadRef,\n      onLoadingCompleteRef,\n      setBlurComplete,\n      setShowAltText,\n      sizesInput,\n      onLoad,\n      onError,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const ownRef = useCallback(\n      (img: ImgElementWithDataProp | null) => {\n        if (!img) {\n          return\n        }\n        if (onError) {\n          // If the image has an error before react hydrates, then the error is lost.\n          // The workaround is to wait until the image is mounted which is after hydration,\n          // then we set the src again to trigger the error handler (if there was an error).\n          // eslint-disable-next-line no-self-assign\n          img.src = img.src\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          if (!src) {\n            console.error(`Image is missing required \"src\" property:`, img)\n          }\n          if (img.getAttribute('alt') === null) {\n            console.error(\n              `Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.`\n            )\n          }\n        }\n        if (img.complete) {\n          handleLoading(\n            img,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            unoptimized,\n            sizesInput\n          )\n        }\n      },\n      [\n        src,\n        placeholder,\n        onLoadRef,\n        onLoadingCompleteRef,\n        setBlurComplete,\n        onError,\n        unoptimized,\n        sizesInput,\n      ]\n    )\n\n    const ref = useMergedRef(forwardedRef, ownRef)\n\n    return (\n      <img\n        {...rest}\n        {...getDynamicProps(fetchPriority)}\n        // It's intended to keep `loading` before `src` because React updates\n        // props in order which causes Safari/Firefox to not lazy load properly.\n        // See https://github.com/facebook/react/issues/25883\n        loading={loading}\n        width={width}\n        height={height}\n        decoding={decoding}\n        data-nimg={fill ? 'fill' : '1'}\n        className={className}\n        style={style}\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        sizes={sizes}\n        srcSet={srcSet}\n        src={src}\n        ref={ref}\n        onLoad={(event) => {\n          const img = event.currentTarget as ImgElementWithDataProp\n          handleLoading(\n            img,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            unoptimized,\n            sizesInput\n          )\n        }}\n        onError={(event) => {\n          // if the real image fails to load, this will ensure \"alt\" is visible\n          setShowAltText(true)\n          if (placeholder !== 'empty') {\n            // If the real image fails to load, this will still remove the placeholder.\n            setBlurComplete(true)\n          }\n          if (onError) {\n            onError(event)\n          }\n        }}\n      />\n    )\n  }\n)\n\nfunction ImagePreload({\n  isAppRouter,\n  imgAttributes,\n}: {\n  isAppRouter: boolean\n  imgAttributes: ImgProps\n}) {\n  const opts: ReactDOM.PreloadOptions = {\n    as: 'image',\n    imageSrcSet: imgAttributes.srcSet,\n    imageSizes: imgAttributes.sizes,\n    crossOrigin: imgAttributes.crossOrigin,\n    referrerPolicy: imgAttributes.referrerPolicy,\n    ...getDynamicProps(imgAttributes.fetchPriority),\n  }\n\n  if (isAppRouter && ReactDOM.preload) {\n    ReactDOM.preload(imgAttributes.src, opts)\n    return null\n  }\n\n  return (\n    <Head>\n      <link\n        key={\n          '__nimg-' +\n          imgAttributes.src +\n          imgAttributes.srcSet +\n          imgAttributes.sizes\n        }\n        rel=\"preload\"\n        // Note how we omit the `href` attribute, as it would only be relevant\n        // for browsers that do not support `imagesrcset`, and in those cases\n        // it would cause the incorrect image to be preloaded.\n        //\n        // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n        href={imgAttributes.srcSet ? undefined : imgAttributes.src}\n        {...opts}\n      />\n    </Head>\n  )\n}\n\n/**\n * The `Image` component is used to optimize images.\n *\n * Read more: [Next.js docs: `Image`](https://nextjs.org/docs/app/api-reference/components/image)\n */\nexport const Image = forwardRef<HTMLImageElement | null, ImageProps>(\n  (props, forwardedRef) => {\n    const pagesRouter = useContext(RouterContext)\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter\n\n    const configContext = useContext(ImageConfigContext)\n    const config = useMemo(() => {\n      const c = configEnv || configContext || imageConfigDefault\n      const allSizes = [...c.deviceSizes, ...c.imageSizes].sort((a, b) => a - b)\n      const deviceSizes = c.deviceSizes.sort((a, b) => a - b)\n      const qualities = c.qualities?.sort((a, b) => a - b)\n      return { ...c, allSizes, deviceSizes, qualities }\n    }, [configContext])\n\n    const { onLoad, onLoadingComplete } = props\n    const onLoadRef = useRef(onLoad)\n\n    useEffect(() => {\n      onLoadRef.current = onLoad\n    }, [onLoad])\n\n    const onLoadingCompleteRef = useRef(onLoadingComplete)\n\n    useEffect(() => {\n      onLoadingCompleteRef.current = onLoadingComplete\n    }, [onLoadingComplete])\n\n    const [blurComplete, setBlurComplete] = useState(false)\n    const [showAltText, setShowAltText] = useState(false)\n\n    const { props: imgAttributes, meta: imgMeta } = getImgProps(props, {\n      defaultLoader,\n      imgConf: config,\n      blurComplete,\n      showAltText,\n    })\n\n    return (\n      <>\n        {\n          <ImageElement\n            {...imgAttributes}\n            unoptimized={imgMeta.unoptimized}\n            placeholder={imgMeta.placeholder}\n            fill={imgMeta.fill}\n            onLoadRef={onLoadRef}\n            onLoadingCompleteRef={onLoadingCompleteRef}\n            setBlurComplete={setBlurComplete}\n            setShowAltText={setShowAltText}\n            sizesInput={props.sizes}\n            ref={forwardedRef}\n          />\n        }\n        {imgMeta.priority ? (\n          <ImagePreload\n            isAppRouter={isAppRouter}\n            imgAttributes={imgAttributes}\n          />\n        ) : null}\n      </>\n    )\n  }\n)\n","import type { ImageLoaderPropsWithConfig } from './image-config'\n\nconst DEFAULT_Q = 75\n\nfunction defaultLoader({\n  config,\n  src,\n  width,\n  quality,\n}: ImageLoaderPropsWithConfig): string {\n  if (process.env.NODE_ENV !== 'production') {\n    const missingValues = []\n\n    // these should always be provided but make sure they are\n    if (!src) missingValues.push('src')\n    if (!width) missingValues.push('width')\n\n    if (missingValues.length > 0) {\n      throw new Error(\n        `Next Image Optimization requires ${missingValues.join(\n          ', '\n        )} to be provided. Make sure you pass them as props to the \\`next/image\\` component. Received: ${JSON.stringify(\n          { src, width, quality }\n        )}`\n      )\n    }\n\n    if (src.startsWith('//')) {\n      throw new Error(\n        `Failed to parse src \"${src}\" on \\`next/image\\`, protocol-relative URL (//) must be changed to an absolute URL (http:// or https://)`\n      )\n    }\n\n    if (src.startsWith('/') && config.localPatterns) {\n      if (\n        process.env.NODE_ENV !== 'test' &&\n        // micromatch isn't compatible with edge runtime\n        process.env.NEXT_RUNTIME !== 'edge'\n      ) {\n        // We use dynamic require because this should only error in development\n        const { hasLocalMatch } =\n          require('./match-local-pattern') as typeof import('./match-local-pattern')\n        if (!hasLocalMatch(config.localPatterns, src)) {\n          throw new Error(\n            `Invalid src prop (${src}) on \\`next/image\\` does not match \\`images.localPatterns\\` configured in your \\`next.config.js\\`\\n` +\n              `See more info: https://nextjs.org/docs/messages/next-image-unconfigured-localpatterns`\n          )\n        }\n      }\n    }\n\n    if (!src.startsWith('/') && (config.domains || config.remotePatterns)) {\n      let parsedSrc: URL\n      try {\n        parsedSrc = new URL(src)\n      } catch (err) {\n        console.error(err)\n        throw new Error(\n          `Failed to parse src \"${src}\" on \\`next/image\\`, if using relative image it must start with a leading slash \"/\" or be an absolute URL (http:// or https://)`\n        )\n      }\n\n      if (\n        process.env.NODE_ENV !== 'test' &&\n        // micromatch isn't compatible with edge runtime\n        process.env.NEXT_RUNTIME !== 'edge'\n      ) {\n        // We use dynamic require because this should only error in development\n        const { hasRemoteMatch } =\n          require('./match-remote-pattern') as typeof import('./match-remote-pattern')\n        if (\n          !hasRemoteMatch(config.domains!, config.remotePatterns!, parsedSrc)\n        ) {\n          throw new Error(\n            `Invalid src prop (${src}) on \\`next/image\\`, hostname \"${parsedSrc.hostname}\" is not configured under images in your \\`next.config.js\\`\\n` +\n              `See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host`\n          )\n        }\n      }\n    }\n\n    if (quality && config.qualities && !config.qualities.includes(quality)) {\n      throw new Error(\n        `Invalid quality prop (${quality}) on \\`next/image\\` does not match \\`images.qualities\\` configured in your \\`next.config.js\\`\\n` +\n          `See more info: https://nextjs.org/docs/messages/next-image-unconfigured-qualities`\n      )\n    }\n  }\n\n  const q =\n    quality ||\n    config.qualities?.reduce((prev, cur) =>\n      Math.abs(cur - DEFAULT_Q) < Math.abs(prev - DEFAULT_Q) ? cur : prev\n    ) ||\n    DEFAULT_Q\n\n  return `${config.path}?url=${encodeURIComponent(src)}&w=${width}&q=${q}${\n    src.startsWith('/_next/static/media/') && process.env.NEXT_DEPLOYMENT_ID\n      ? `&dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n      : ''\n  }`\n}\n\n// We use this to determine if the import is the default loader\n// or a custom loader defined by the user in next.config.js\ndefaultLoader.__next_img_default = true\n\nexport default defaultLoader\n","import type { ImageConfigComplete, ImageLoaderProps } from './image-config'\nimport type { ImageProps, ImageLoader, StaticImageData } from './get-img-props'\n\nimport { getImgProps } from './get-img-props'\nimport { Image } from '../../client/image-component'\n\n// This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader'\n\n/**\n * For more advanced use cases, you can call `getImageProps()`\n * to get the props that would be passed to the underlying `<img>` element,\n * and instead pass to them to another component, style, canvas, etc.\n *\n * Read more: [Next.js docs: `getImageProps`](https://nextjs.org/docs/app/api-reference/components/image#getimageprops)\n */\nexport function getImageProps(imgProps: ImageProps) {\n  const { props } = getImgProps(imgProps, {\n    defaultLoader,\n    // This is replaced by webpack define plugin\n    imgConf: process.env.__NEXT_IMAGE_OPTS as any as ImageConfigComplete,\n  })\n  // Normally we don't care about undefined props because we pass to JSX,\n  // but this exported function could be used by the end user for anything\n  // so we delete undefined props to clean it up a little.\n  for (const [key, value] of Object.entries(props)) {\n    if (value === undefined) {\n      delete props[key as keyof typeof props]\n    }\n  }\n  return { props }\n}\n\nexport default Image\n\nexport type { ImageProps, ImageLoaderProps, ImageLoader, StaticImageData }\n","module.exports = require('./dist/shared/lib/image-external')\n","import type {\n  ArbitraryTypedObject,\n  PortableTextBlock,\n  PortableTextListItemBlock,\n  PortableTextSpan,\n  TypedObject,\n} from '@portabletext/types'\n\nimport type {ToolkitNestedPortableTextSpan, ToolkitPortableTextList, ToolkitTextNode} from './types'\n\n/**\n * Strict check to determine if node is a correctly formatted Portable Text span.\n *\n * @param node - Node to check\n * @returns True if valid Portable Text span, otherwise false\n */\nexport function isPortableTextSpan(\n  node: ArbitraryTypedObject | PortableTextSpan,\n): node is PortableTextSpan {\n  return (\n    node._type === 'span' &&\n    'text' in node &&\n    typeof node.text === 'string' &&\n    (typeof node.marks === 'undefined' ||\n      (Array.isArray(node.marks) && node.marks.every((mark) => typeof mark === 'string')))\n  )\n}\n\n/**\n * Strict check to determine if node is a correctly formatted Portable Text block.\n *\n * @param node - Node to check\n * @returns True if valid Portable Text block, otherwise false\n */\nexport function isPortableTextBlock(\n  node: PortableTextBlock | TypedObject,\n): node is PortableTextBlock {\n  return (\n    // A block doesn't _have_ to be named 'block' - to differentiate between\n    // allowed child types and marks, one might name them differently\n    typeof node._type === 'string' &&\n    // Toolkit-types like nested spans are @-prefixed\n    node._type[0] !== '@' &&\n    // `markDefs` isn't _required_ per say, but if it's there, it needs to be an array\n    (!('markDefs' in node) ||\n      !node.markDefs ||\n      (Array.isArray(node.markDefs) &&\n        // Every mark definition needs to have an `_key` to be mappable in child spans\n        node.markDefs.every((def) => typeof def._key === 'string'))) &&\n    // `children` is required and needs to be an array\n    'children' in node &&\n    Array.isArray(node.children) &&\n    // All children are objects with `_type` (usually spans, but can contain other stuff)\n    node.children.every((child) => typeof child === 'object' && '_type' in child)\n  )\n}\n\n/**\n * Strict check to determine if node is a correctly formatted portable list item block.\n *\n * @param block - Block to check\n * @returns True if valid Portable Text list item block, otherwise false\n */\nexport function isPortableTextListItemBlock(\n  block: PortableTextBlock | TypedObject,\n): block is PortableTextListItemBlock {\n  return (\n    isPortableTextBlock(block) &&\n    'listItem' in block &&\n    typeof block.listItem === 'string' &&\n    (typeof block.level === 'undefined' || typeof block.level === 'number')\n  )\n}\n\n/**\n * Loose check to determine if block is a toolkit list node.\n * Only checks `_type`, assumes correct structure.\n *\n * @param block - Block to check\n * @returns True if toolkit list, otherwise false\n */\nexport function isPortableTextToolkitList(\n  block: TypedObject | ToolkitPortableTextList,\n): block is ToolkitPortableTextList {\n  return block._type === '@list'\n}\n\n/**\n * Loose check to determine if span is a toolkit span node.\n * Only checks `_type`, assumes correct structure.\n *\n * @param span - Span to check\n * @returns True if toolkit span, otherwise false\n */\nexport function isPortableTextToolkitSpan(\n  span: TypedObject | ToolkitNestedPortableTextSpan,\n): span is ToolkitNestedPortableTextSpan {\n  return span._type === '@span'\n}\n\n/**\n * Loose check to determine if node is a toolkit text node.\n * Only checks `_type`, assumes correct structure.\n *\n * @param node - Node to check\n * @returns True if toolkit text node, otherwise false\n */\nexport function isPortableTextToolkitTextNode(\n  node: TypedObject | ToolkitTextNode,\n): node is ToolkitTextNode {\n  return node._type === '@text'\n}\n","import type {PortableTextSpan, TypedObject} from '@portabletext/types'\n\nimport {isPortableTextSpan} from './asserters'\n\nconst knownDecorators = ['strong', 'em', 'code', 'underline', 'strike-through']\n\n/**\n * Figures out the optimal order of marks, in order to minimize the amount of\n * nesting/repeated elements in environments such as HTML. For instance, a naive\n * implementation might render something like:\n *\n * ```html\n * <strong>This block contains </strong>\n * <strong><a href=\"https://some.url/\">a link</a></strong>\n * <strong> and some bolded text</strong>\n * ```\n *\n * ...whereas an optimal order would be:\n *\n * ```html\n * <strong>\n *   This block contains <a href=\"https://some.url/\">a link</a> and some bolded text\n * </strong>\n * ```\n *\n * This is particularly necessary for cases like links, where you don't want multiple\n * individual links for different segments of the link text, even if parts of it are\n * bolded/italicized.\n *\n * This function is meant to be used like: `block.children.map(sortMarksByOccurences)`,\n * and is used internally in {@link buildMarksTree | `buildMarksTree()`}.\n *\n * The marks are sorted in the following order:\n *\n *  1. Marks that are shared amongst the most adjacent siblings\n *  2. Non-default marks (links, custom metadata)\n *  3. Decorators (bold, emphasis, code etc), in a predefined, preferred order\n *\n * @param span - The current span to sort\n * @param index - The index of the current span within the block\n * @param blockChildren - All children of the block being sorted\n * @returns Array of decorators and annotations, sorted by \"most adjacent siblings\"\n */\nexport function sortMarksByOccurences(\n  span: PortableTextSpan | TypedObject,\n  index: number,\n  blockChildren: (PortableTextSpan | TypedObject)[],\n): string[] {\n  if (!isPortableTextSpan(span) || !span.marks) {\n    return []\n  }\n\n  if (!span.marks.length) {\n    return []\n  }\n\n  // Slicing because we'll be sorting with `sort()`, which mutates\n  const marks = span.marks.slice()\n  const occurences: Record<string, number> = {}\n  marks.forEach((mark) => {\n    occurences[mark] = 1\n\n    for (let siblingIndex = index + 1; siblingIndex < blockChildren.length; siblingIndex++) {\n      const sibling = blockChildren[siblingIndex]\n\n      if (\n        sibling &&\n        isPortableTextSpan(sibling) &&\n        Array.isArray(sibling.marks) &&\n        sibling.marks.indexOf(mark) !== -1\n      ) {\n        occurences[mark]++\n      } else {\n        break\n      }\n    }\n  })\n\n  return marks.sort((markA, markB) => sortMarks(occurences, markA, markB))\n}\n\nfunction sortMarks<U extends string, T extends Record<U, number>>(\n  occurences: T,\n  markA: U,\n  markB: U,\n): number {\n  const aOccurences = occurences[markA]\n  const bOccurences = occurences[markB]\n\n  if (aOccurences !== bOccurences) {\n    return bOccurences - aOccurences\n  }\n\n  const aKnownPos = knownDecorators.indexOf(markA)\n  const bKnownPos = knownDecorators.indexOf(markB)\n\n  // Sort known decorators last\n  if (aKnownPos !== bKnownPos) {\n    return aKnownPos - bKnownPos\n  }\n\n  // Sort other marks simply by key\n  return markA.localeCompare(markB)\n}\n","import type {\n  ArbitraryTypedObject,\n  PortableTextBlock,\n  PortableTextMarkDefinition,\n} from '@portabletext/types'\n\nimport {isPortableTextSpan} from './asserters'\nimport {sortMarksByOccurences} from './sortMarksByOccurences'\nimport type {ToolkitNestedPortableTextSpan, ToolkitTextNode} from './types'\n\n/**\n * Takes a Portable Text block and returns a nested tree of nodes optimized for rendering\n * in HTML-like environments where you want marks/annotations to be nested inside of eachother.\n * For instance, a naive span-by-span rendering might yield:\n *\n * ```html\n * <strong>This block contains </strong>\n * <strong><a href=\"https://some.url/\">a link</a></strong>\n * <strong> and some bolded and </strong>\n * <em><strong>italicized text</strong></em>\n * ```\n *\n * ...whereas an optimal order would be:\n *\n * ```html\n * <strong>\n *   This block contains <a href=\"https://some.url/\">a link</a>\n *   and some bolded and <em>italicized text</em>\n * </strong>\n * ```\n *\n * Note that since \"native\" Portable Text spans cannot be nested,\n * this function returns an array of \"toolkit specific\" types:\n * {@link ToolkitTextNode | `@text`} and {@link ToolkitNestedPortableTextSpan | `@span` }.\n *\n * The toolkit-specific type can hold both types, as well as any arbitrary inline objects,\n * creating an actual tree.\n *\n * @param block - The Portable Text block to create a tree of nodes from\n * @returns Array of (potentially) nested spans, text nodes and/or arbitrary inline objects\n */\nexport function buildMarksTree<M extends PortableTextMarkDefinition = PortableTextMarkDefinition>(\n  block: PortableTextBlock<M>,\n): (ToolkitNestedPortableTextSpan<M> | ToolkitTextNode | ArbitraryTypedObject)[] {\n  const {children} = block\n  const markDefs = block.markDefs ?? []\n  if (!children || !children.length) {\n    return []\n  }\n\n  const sortedMarks = children.map(sortMarksByOccurences)\n\n  const rootNode: ToolkitNestedPortableTextSpan<M> = {\n    _type: '@span',\n    children: [],\n    markType: '<unknown>',\n  }\n\n  let nodeStack: ToolkitNestedPortableTextSpan<M>[] = [rootNode]\n\n  for (let i = 0; i < children.length; i++) {\n    const span = children[i]\n    if (!span) {\n      continue\n    }\n\n    const marksNeeded = sortedMarks[i] || []\n    let pos = 1\n\n    // Start at position one. Root is always plain and should never be removed\n    if (nodeStack.length > 1) {\n      for (pos; pos < nodeStack.length; pos++) {\n        const mark = nodeStack[pos]?.markKey || ''\n        const index = marksNeeded.indexOf(mark)\n\n        if (index === -1) {\n          break\n        }\n\n        marksNeeded.splice(index, 1)\n      }\n    }\n\n    // Keep from beginning to first miss\n    nodeStack = nodeStack.slice(0, pos)\n\n    // Add needed nodes\n    let currentNode = nodeStack[nodeStack.length - 1]\n    if (!currentNode) {\n      continue\n    }\n\n    for (const markKey of marksNeeded) {\n      const markDef = markDefs?.find((def) => def._key === markKey)\n      const markType = markDef ? markDef._type : markKey\n      const node: ToolkitNestedPortableTextSpan<M> = {\n        _type: '@span',\n        _key: span._key,\n        children: [],\n        markDef,\n        markType,\n        markKey,\n      }\n\n      currentNode.children.push(node)\n      nodeStack.push(node)\n      currentNode = node\n    }\n\n    // Split at newlines to make individual line chunks, but keep newline\n    // characters as individual elements in the array. We use these characters\n    // in the span serializer to trigger hard-break rendering\n    if (isPortableTextSpan(span)) {\n      const lines = span.text.split('\\n')\n      for (let line = lines.length; line-- > 1; ) {\n        lines.splice(line, 0, '\\n')\n      }\n\n      currentNode.children = currentNode.children.concat(\n        lines.map((text) => ({_type: '@text', text})),\n      )\n    } else {\n      // This is some other inline object, not a text span\n      currentNode.children = currentNode.children.concat(span)\n    }\n  }\n\n  return rootNode.children\n}\n","import type {PortableTextBlock, PortableTextListItemBlock, TypedObject} from '@portabletext/types'\n\nimport {\n  isPortableTextListItemBlock,\n  isPortableTextSpan,\n  isPortableTextToolkitList,\n} from './asserters'\nimport type {\n  ToolkitListNestMode,\n  ToolkitPortableTextDirectList,\n  ToolkitPortableTextHtmlList,\n  ToolkitPortableTextList,\n  ToolkitPortableTextListItem,\n} from './types'\n\nexport type ToolkitNestListsOutputNode<T> =\n  | T\n  | ToolkitPortableTextHtmlList\n  | ToolkitPortableTextDirectList\n\n/**\n * Takes an array of blocks and returns an array of nodes optimized for rendering in HTML-like\n * environment, where lists are nested inside of eachother instead of appearing \"flat\" as in\n * native Portable Text data structures.\n *\n * Note that the list node is not a native Portable Text node type, and thus is represented\n * using the {@link ToolkitPortableTextList | `@list`} type name (`{_type: '@list'}`).\n *\n * The nesting can be configured in two modes:\n *\n * - `direct`: deeper list nodes will appear as a direct child of the parent list\n * - `html`, deeper list nodes will appear as a child of the last _list item_ in the parent list\n *\n * When using `direct`, all list nodes will be of type {@link ToolkitPortableTextDirectList},\n * while with `html` they will be of type {@link ToolkitPortableTextHtmlList}\n *\n * These modes are available as {@link LIST_NEST_MODE_HTML} and {@link LIST_NEST_MODE_DIRECT}.\n *\n * @param blocks - Array of Portable Text blocks and other arbitrary types\n * @param mode - Mode to use for nesting, `direct` or `html`\n * @returns Array of potentially nested nodes optimized for rendering\n */\nexport function nestLists<T extends TypedObject = PortableTextBlock | TypedObject>(\n  blocks: T[],\n  mode: 'direct',\n): (T | ToolkitPortableTextDirectList)[]\nexport function nestLists<T extends TypedObject = PortableTextBlock | TypedObject>(\n  blocks: T[],\n  mode: 'html',\n): (T | ToolkitPortableTextHtmlList)[]\nexport function nestLists<T extends TypedObject = PortableTextBlock | TypedObject>(\n  blocks: T[],\n  mode: 'direct' | 'html',\n): (T | ToolkitPortableTextHtmlList | ToolkitPortableTextDirectList)[]\nexport function nestLists<T extends TypedObject = PortableTextBlock | TypedObject>(\n  blocks: T[],\n  mode: ToolkitListNestMode,\n): ToolkitNestListsOutputNode<T>[] {\n  const tree: ToolkitNestListsOutputNode<T>[] = []\n  let currentList: ToolkitPortableTextList | undefined\n\n  for (let i = 0; i < blocks.length; i++) {\n    const block = blocks[i]\n    if (!block) {\n      continue\n    }\n\n    if (!isPortableTextListItemBlock(block)) {\n      tree.push(block)\n      currentList = undefined\n      continue\n    }\n\n    // Start of a new list?\n    if (!currentList) {\n      currentList = listFromBlock(block, i, mode)\n      tree.push(currentList)\n      continue\n    }\n\n    // New list item within same list?\n    if (blockMatchesList(block, currentList)) {\n      currentList.children.push(block)\n      continue\n    }\n\n    // Different list props, are we going deeper?\n    if ((block.level || 1) > currentList.level) {\n      const newList = listFromBlock(block, i, mode)\n\n      if (mode === 'html') {\n        // Because HTML is kinda weird, nested lists needs to be nested within list items.\n        // So while you would think that we could populate the parent list with a new sub-list,\n        // we actually have to target the last list element (child) of the parent.\n        // However, at this point we need to be very careful - simply pushing to the list of children\n        // will mutate the input, and we don't want to blindly clone the entire tree.\n\n        // Clone the last child while adding our new list as the last child of it\n        const lastListItem = currentList.children[\n          currentList.children.length - 1\n        ] as ToolkitPortableTextListItem\n\n        const newLastChild: ToolkitPortableTextListItem = {\n          ...lastListItem,\n          children: [...lastListItem.children, newList],\n        }\n\n        // Swap the last child\n        currentList.children[currentList.children.length - 1] = newLastChild\n      } else {\n        ;(currentList as ToolkitPortableTextDirectList).children.push(\n          newList as ToolkitPortableTextDirectList,\n        )\n      }\n\n      // Set the newly created, deeper list as the current\n      currentList = newList\n      continue\n    }\n\n    // Different list props, are we going back up the tree?\n    if ((block.level || 1) < currentList.level) {\n      // Current list has ended, and we need to hook up with a parent of the same level and type\n      const matchingBranch = tree[tree.length - 1]\n      const match = matchingBranch && findListMatching(matchingBranch, block)\n      if (match) {\n        currentList = match\n        currentList.children.push(block)\n        continue\n      }\n\n      // Similar parent can't be found, assume new list\n      currentList = listFromBlock(block, i, mode)\n      tree.push(currentList)\n      continue\n    }\n\n    // Different list props, different list style?\n    if (block.listItem !== currentList.listItem) {\n      const matchingBranch = tree[tree.length - 1]\n      const match = matchingBranch && findListMatching(matchingBranch, {level: block.level || 1})\n      if (match && match.listItem === block.listItem) {\n        currentList = match\n        currentList.children.push(block)\n        continue\n      } else {\n        currentList = listFromBlock(block, i, mode)\n        tree.push(currentList)\n        continue\n      }\n    }\n\n    // eslint-disable-next-line no-console\n    console.warn('Unknown state encountered for block', block)\n    tree.push(block)\n  }\n\n  return tree\n}\n\nfunction blockMatchesList(block: PortableTextBlock, list: ToolkitPortableTextList) {\n  return (block.level || 1) === list.level && block.listItem === list.listItem\n}\n\nfunction listFromBlock(\n  block: PortableTextListItemBlock,\n  index: number,\n  mode: ToolkitListNestMode,\n): ToolkitPortableTextList {\n  return {\n    _type: '@list',\n    _key: `${block._key || `${index}`}-parent`,\n    mode,\n    level: block.level || 1,\n    listItem: block.listItem,\n    children: [block],\n  }\n}\n\nfunction findListMatching<T extends TypedObject | PortableTextBlock>(\n  rootNode: T,\n  matching: Partial<PortableTextListItemBlock>,\n): ToolkitPortableTextList | undefined {\n  const level = matching.level || 1\n  const style = matching.listItem || 'normal'\n  const filterOnType = typeof matching.listItem === 'string'\n  if (\n    isPortableTextToolkitList(rootNode) &&\n    (rootNode.level || 1) === level &&\n    filterOnType &&\n    (rootNode.listItem || 'normal') === style\n  ) {\n    return rootNode\n  }\n\n  if (!('children' in rootNode)) {\n    return undefined\n  }\n\n  const node = rootNode.children[rootNode.children.length - 1]\n  return node && !isPortableTextSpan(node) ? findListMatching(node, matching) : undefined\n}\n","import {isPortableTextToolkitSpan, isPortableTextToolkitTextNode} from './asserters'\nimport type {ToolkitNestedPortableTextSpan} from './types'\n\n/**\n * Returns the plain-text representation of a\n * {@link ToolkitNestedPortableTextSpan | toolkit-specific Portable Text span}.\n *\n * Useful if you have a subset of nested nodes and want the text from just those,\n * instead of for the entire Portable Text block.\n *\n * @param span - Span node to get text from (Portable Text toolkit specific type)\n * @returns The plain-text version of the span\n */\nexport function spanToPlainText(span: ToolkitNestedPortableTextSpan): string {\n  let text = ''\n  span.children.forEach((current) => {\n    if (isPortableTextToolkitTextNode(current)) {\n      text += current.text\n    } else if (isPortableTextToolkitSpan(current)) {\n      text += spanToPlainText(current)\n    }\n  })\n  return text\n}\n","import type {ArbitraryTypedObject, PortableTextBlock} from '@portabletext/types'\n\nimport {isPortableTextBlock, isPortableTextSpan} from './asserters'\n\nconst leadingSpace = /^\\s/\nconst trailingSpace = /\\s$/\n\n/**\n * Takes a Portable Text block (or an array of them) and returns the text value\n * of all the Portable Text span nodes. Adds whitespace when encountering inline,\n * non-span nodes to ensure text flow is optimal.\n *\n * Note that this only accounts for regular Portable Text blocks - any text inside\n * custom content types are not included in the output.\n *\n * @param block - Single block or an array of blocks to extract text from\n * @returns The plain-text content of the blocks\n */\nexport function toPlainText(\n  block: PortableTextBlock | ArbitraryTypedObject[] | PortableTextBlock[],\n): string {\n  const blocks = Array.isArray(block) ? block : [block]\n  let text = ''\n\n  blocks.forEach((current, index) => {\n    if (!isPortableTextBlock(current)) {\n      return\n    }\n\n    let pad = false\n    current.children.forEach((span) => {\n      if (isPortableTextSpan(span)) {\n        // If the previous element was a non-span, and we have no natural whitespace\n        // between the previous and the next span, insert it to give the spans some\n        // room to breathe. However, don't do so if this is the first span.\n        text += pad && text && !trailingSpace.test(text) && !leadingSpace.test(span.text) ? ' ' : ''\n        text += span.text\n        pad = false\n      } else {\n        pad = true\n      }\n    })\n\n    if (index !== blocks.length - 1) {\n      text += '\\n\\n'\n    }\n  })\n\n  return text\n}\n","import type {\n  ArbitraryTypedObject,\n  PortableTextListItemBlock,\n  PortableTextMarkDefinition,\n  PortableTextSpan,\n} from '@portabletext/types'\n\n/**\n * List nesting mode for HTML, see the {@link nestLists | `nestLists()` function}\n */\nexport const LIST_NEST_MODE_HTML = 'html'\n\n/**\n * List nesting mode for direct, nested lists, see the {@link nestLists | `nestLists()` function}\n */\nexport const LIST_NEST_MODE_DIRECT = 'direct'\n\n/**\n * List nesting mode, see the {@link nestLists | `nestLists()` function}\n */\nexport type ToolkitListNestMode = 'html' | 'direct'\n\n/**\n * Toolkit-specific type representing a nested list\n *\n * See the `nestLists()` function for more info\n */\nexport type ToolkitPortableTextList = ToolkitPortableTextHtmlList | ToolkitPortableTextDirectList\n\n/**\n * Toolkit-specific type representing a nested list in HTML mode, where deeper lists are nested\n * inside of the _list items_, eg `<ul><li>Some text<ul><li>Deeper</li></ul></li></ul>`\n */\nexport interface ToolkitPortableTextHtmlList {\n  /**\n   * Type name, prefixed with `@` to signal that this is a toolkit-specific node.\n   */\n  _type: '@list'\n\n  /**\n   * Unique key for this list (within its parent)\n   */\n  _key: string\n\n  /**\n   * List mode, signaling that list nodes will appear as children of the _list items_\n   */\n  mode: 'html'\n\n  /**\n   * Level/depth of this list node (starts at `1`)\n   */\n  level: number\n\n  /**\n   * Style of this list item (`bullet`, `number` are common values, but can be customized)\n   */\n  listItem: string\n\n  /**\n   * Child nodes of this list - toolkit-specific list items which can themselves hold deeper lists\n   */\n  children: ToolkitPortableTextListItem[]\n}\n\n/**\n * Toolkit-specific type representing a nested list in \"direct\" mode, where deeper lists are nested\n * inside of the lists children, alongside other blocks.\n */\nexport interface ToolkitPortableTextDirectList {\n  /**\n   * Type name, prefixed with `@` to signal that this is a toolkit-specific node.\n   */\n  _type: '@list'\n\n  /**\n   * Unique key for this list (within its parent)\n   */\n  _key: string\n\n  /**\n   * List mode, signaling that list nodes can appear as direct children\n   */\n  mode: 'direct'\n\n  /**\n   * Level/depth of this list node (starts at `1`)\n   */\n  level: number\n\n  /**\n   * Style of this list item (`bullet`, `number` are common values, but can be customized)\n   */\n  listItem: string\n\n  /**\n   * Child nodes of this list - either portable text list items, or another, deeper list\n   */\n  children: (PortableTextListItemBlock | ToolkitPortableTextDirectList)[]\n}\n\n/**\n * Toolkit-specific type representing a list item block, but where the children can be another list\n */\nexport interface ToolkitPortableTextListItem\n  extends PortableTextListItemBlock<\n    PortableTextMarkDefinition,\n    PortableTextSpan | ToolkitPortableTextList\n  > {}\n\n/**\n * Toolkit-specific type representing a text node, used when nesting spans.\n *\n * See the {@link buildMarksTree | `buildMarksTree()` function}\n */\nexport interface ToolkitTextNode {\n  /**\n   * Type name, prefixed with `@` to signal that this is a toolkit-specific node.\n   */\n  _type: '@text'\n\n  /**\n   * The actual string value of the text node\n   */\n  text: string\n}\n\n/**\n * Toolkit-specific type representing a portable text span that can hold other spans.\n * In this type, each span only has a single mark, instead of an array of them.\n */\nexport interface ToolkitNestedPortableTextSpan<\n  M extends PortableTextMarkDefinition = PortableTextMarkDefinition,\n> {\n  /**\n   * Type name, prefixed with `@` to signal that this is a toolkit-specific node.\n   */\n  _type: '@span'\n\n  /**\n   * Unique key for this span\n   */\n  _key?: string\n\n  /**\n   * Holds the value (definition) of the mark in the case of annotations.\n   * `undefined` if the mark is a decorator (strong, em or similar).\n   */\n  markDef?: M\n\n  /**\n   * The key of the mark definition (in the case of annotations).\n   * `undefined` if the mark is a decorator (strong, em or similar).\n   */\n  markKey?: string\n\n  /**\n   * Type of the mark. For annotations, this is the `_type` property of the value.\n   * For decorators, it will hold the name of the decorator (strong, em or similar).\n   */\n  markType: string\n\n  /**\n   * Child nodes of this span. Can be toolkit-specific text nodes, nested spans\n   * or any inline object type.\n   */\n  children: (\n    | ToolkitTextNode\n    | ToolkitNestedPortableTextSpan<PortableTextMarkDefinition>\n    | ArbitraryTypedObject\n  )[]\n}\n","export {detectKeylessEnvDriftAction as '7f8999b974070f5f06ae460862f0858acdda85368e'} from 'ACTIONS_MODULE0'\nexport {invalidateCacheAction as '7f8823ae31937b88eedcd8067093cf766d5325469e'} from 'ACTIONS_MODULE1'\nexport {createOrReadKeylessAction as '7fb7bf3407cc770549533da65bd29a458713983997'} from 'ACTIONS_MODULE0'\nexport {collectKeylessMetadata as '7f5d0240b8d578b1ca6154a9fca5ffcfebbaea7bb2'} from 'ACTIONS_MODULE2'\nexport {formatMetadataHeaders as '7fe09e154c71d7ccd7fdd64791d46178af6ba3f6ca'} from 'ACTIONS_MODULE2'\nexport {deleteKeylessAction as '7f53d74f7606d116bf3dfdc0ee80062fcfaae95c27'} from 'ACTIONS_MODULE0'\nexport {syncKeylessConfigAction as '7f6df197d6aaafd41922e8350c6cd7e7298d161c7a'} from 'ACTIONS_MODULE0'\nexport {revalidateSyncTags as '7f5ce5c3fe9b8f2c7f06512bd697da25ccf517f617'} from 'ACTIONS_MODULE3'\nexport {setPerspectiveCookie as '7fdb9730c0dc8d5b63135028e2e413023c2657a6cf'} from 'ACTIONS_MODULE3'\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/addToBasketButton.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/addToBasketButton.tsx\",\n    \"default\",\n);\n","import { defineQuery } from \"next-sanity\";\nimport { sanityFetch } from \"../live\";\n\nexport const getProductBySlug = async (slug: string) => {\n  const PRODUCT_BY_ID_QUERY = defineQuery(`\n    *[_type == \"product\" && slug.current == $slug] | order(name asc)[0]\n  `);\n\n  try {\n    // Use sanityFetch to send the query with the slug as a parameter\n    const product = await sanityFetch({\n      query: PRODUCT_BY_ID_QUERY,\n      params: { slug },\n    });\n    // Return the product data or null if not found\n    return product?.data || null;\n  } catch (error) {\n    console.error(\"Error fetching product by ID:\", error);\n    return null;\n  }\n};\n","import { getProductBySlug } from \"@/sanity/lib/products/getProductBySlug\";\nimport AddToBasketButton from \"@/components/addToBasketButton\";\nimport { PortableText } from \"next-sanity\";\nimport { notFound } from \"next/navigation\";\nimport { imageUrl } from \"@/lib/imageUrl\";\nimport Image from \"next/image\";\n\nexport const dynamic = \"force-static\";\nexport const revalidate = 3600;\n\n\nasync function ProductPage({ params }: { params: { slug: string } }) {\n  \n  const { slug } = await params;\n  const product = await getProductBySlug(slug);\n\n  console.log(crypto.randomUUID().slice(0, 5) + `>>> Rendered the product page cache for ${slug}`);\n\n  if (!product) {\n    return notFound();\n  }\n  const isOutOfStock = product.stock != null && product.stock <= 0;\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n        <div\n          className={`relative aspect-square overflow-hidden rounded-lg shadow-lg ${isOutOfStock ? \"opacity-50\" : \"\"}`}\n        >\n          {product.image && (\n            <Image\n              src={imageUrl(product.image).url()}\n              alt={product.name ?? \"Product image\"}\n              fill\n              className=\"object-contain transition-transform duration-300 hover:scale-105\"\n            />\n          )}\n          {isOutOfStock && (\n            <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-50\">\n              <span className=\"text-white font-bold text-lg\">Out of Stock</span>\n            </div>\n          )}\n        </div>\n        <div className=\"flex flex-col justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold mb-4\">{product.name}</h1>\n            <div className=\"text-xl font-semibold mb-4\">\n              ${product.price?.toFixed(2)}\n            </div>\n            <div className=\"prose max-w-none mb-6\">\n              {Array.isArray(product.description) && (\n                <PortableText value={product.description} />\n              )}\n            </div>\n          </div>\n          <div className=\"mt-6\">\n            <AddToBasketButton product={product} disabled={isOutOfStock}></AddToBasketButton>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProductPage;\n","import type {PortableTextListComponent, PortableTextListItemComponent} from '../types'\n\nexport const defaultLists: Record<'number' | 'bullet', PortableTextListComponent> = {\n  number: ({children}) => <ol>{children}</ol>,\n  bullet: ({children}) => <ul>{children}</ul>,\n}\n\nexport const DefaultListItem: PortableTextListItemComponent = ({children}) => <li>{children}</li>\n","import type {TypedObject} from '@portabletext/types'\n\nimport type {PortableTextMarkComponent} from '../types'\n\ninterface DefaultLink extends TypedObject {\n  _type: 'link'\n  href: string\n}\n\nconst link: PortableTextMarkComponent<DefaultLink> = ({children, value}) => (\n  <a href={value?.href}>{children}</a>\n)\n\nconst underlineStyle = {textDecoration: 'underline'}\n\nexport const defaultMarks: Record<string, PortableTextMarkComponent | undefined> = {\n  'em': ({children}) => <em>{children}</em>,\n  'strong': ({children}) => <strong>{children}</strong>,\n  'code': ({children}) => <code>{children}</code>,\n  'underline': ({children}) => <span style={underlineStyle}>{children}</span>,\n  'strike-through': ({children}) => <del>{children}</del>,\n  link,\n}\n","const getTemplate = (type: string, prop: string): string =>\n  `[@portabletext/react] Unknown ${type}, specify a component for it in the \\`components.${prop}\\` prop`\n\nexport const unknownTypeWarning = (typeName: string): string =>\n  getTemplate(`block type \"${typeName}\"`, 'types')\n\nexport const unknownMarkWarning = (markType: string): string =>\n  getTemplate(`mark type \"${markType}\"`, 'marks')\n\nexport const unknownBlockStyleWarning = (blockStyle: string): string =>\n  getTemplate(`block style \"${blockStyle}\"`, 'block')\n\nexport const unknownListStyleWarning = (listStyle: string): string =>\n  getTemplate(`list style \"${listStyle}\"`, 'list')\n\nexport const unknownListItemStyleWarning = (listStyle: string): string =>\n  getTemplate(`list item style \"${listStyle}\"`, 'listItem')\n\nexport function printWarning(message: string): void {\n  console.warn(message)\n}\n","import type {PortableTextReactComponents} from '../types'\nimport {unknownTypeWarning} from '../warnings'\n\nconst hidden = {display: 'none'}\n\nexport const DefaultUnknownType: PortableTextReactComponents['unknownType'] = ({\n  value,\n  isInline,\n}) => {\n  const warning = unknownTypeWarning(value._type)\n  return isInline ? <span style={hidden}>{warning}</span> : <div style={hidden}>{warning}</div>\n}\n\nexport const DefaultUnknownMark: PortableTextReactComponents['unknownMark'] = ({\n  markType,\n  children,\n}) => {\n  return <span className={`unknown__pt__mark__${markType}`}>{children}</span>\n}\n\nexport const DefaultUnknownBlockStyle: PortableTextReactComponents['unknownBlockStyle'] = ({\n  children,\n}) => {\n  return <p>{children}</p>\n}\n\nexport const DefaultUnknownList: PortableTextReactComponents['unknownList'] = ({children}) => {\n  return <ul>{children}</ul>\n}\n\nexport const DefaultUnknownListItem: PortableTextReactComponents['unknownListItem'] = ({\n  children,\n}) => {\n  return <li>{children}</li>\n}\n","import type {PortableTextBlockStyle} from '@portabletext/types'\nimport type {JSX} from 'react'\n\nimport type {PortableTextBlockComponent, PortableTextReactComponents} from '../types'\nimport {DefaultListItem, defaultLists} from './list'\nimport {defaultMarks} from './marks'\nimport {\n  DefaultUnknownBlockStyle,\n  DefaultUnknownList,\n  DefaultUnknownListItem,\n  DefaultUnknownMark,\n  DefaultUnknownType,\n} from './unknown'\n\nexport const DefaultHardBreak = (): JSX.Element => <br />\n\nexport const defaultBlockStyles: Record<\n  PortableTextBlockStyle,\n  PortableTextBlockComponent | undefined\n> = {\n  normal: ({children}) => <p>{children}</p>,\n  blockquote: ({children}) => <blockquote>{children}</blockquote>,\n  h1: ({children}) => <h1>{children}</h1>,\n  h2: ({children}) => <h2>{children}</h2>,\n  h3: ({children}) => <h3>{children}</h3>,\n  h4: ({children}) => <h4>{children}</h4>,\n  h5: ({children}) => <h5>{children}</h5>,\n  h6: ({children}) => <h6>{children}</h6>,\n}\n\nexport const defaultComponents: PortableTextReactComponents = {\n  types: {},\n\n  block: defaultBlockStyles,\n  marks: defaultMarks,\n  list: defaultLists,\n  listItem: DefaultListItem,\n  hardBreak: DefaultHardBreak,\n\n  unknownType: DefaultUnknownType,\n  unknownMark: DefaultUnknownMark,\n  unknownList: DefaultUnknownList,\n  unknownListItem: DefaultUnknownListItem,\n  unknownBlockStyle: DefaultUnknownBlockStyle,\n}\n","import type {PortableTextComponents, PortableTextReactComponents} from '../types'\n\nexport function mergeComponents(\n  parent: PortableTextReactComponents,\n  overrides: PortableTextComponents,\n): PortableTextReactComponents {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const {block, list, listItem, marks, types, ...rest} = overrides\n  // @todo figure out how to not `as ...` these\n  return {\n    ...parent,\n    block: mergeDeeply(parent, overrides, 'block') as PortableTextReactComponents['block'],\n    list: mergeDeeply(parent, overrides, 'list') as PortableTextReactComponents['list'],\n    listItem: mergeDeeply(parent, overrides, 'listItem') as PortableTextReactComponents['listItem'],\n    marks: mergeDeeply(parent, overrides, 'marks') as PortableTextReactComponents['marks'],\n    types: mergeDeeply(parent, overrides, 'types') as PortableTextReactComponents['types'],\n    ...rest,\n  }\n}\n\nfunction mergeDeeply(\n  parent: PortableTextReactComponents,\n  overrides: PortableTextComponents,\n  key: 'block' | 'list' | 'listItem' | 'marks' | 'types',\n): PortableTextReactComponents[typeof key] {\n  const override = overrides[key]\n  const parentVal = parent[key]\n\n  if (typeof override === 'function') {\n    return override\n  }\n\n  if (override && typeof parentVal === 'function') {\n    return override\n  }\n\n  if (override) {\n    return {...parentVal, ...override} as PortableTextReactComponents[typeof key]\n  }\n\n  return parentVal\n}\n","import type {ToolkitNestedPortableTextSpan, ToolkitTextNode} from '@portabletext/toolkit'\nimport {\n  buildMarksTree,\n  isPortableTextBlock,\n  isPortableTextListItemBlock,\n  isPortableTextToolkitList,\n  isPortableTextToolkitSpan,\n  isPortableTextToolkitTextNode,\n  LIST_NEST_MODE_HTML,\n  nestLists,\n  spanToPlainText,\n} from '@portabletext/toolkit'\nimport type {\n  PortableTextBlock,\n  PortableTextListItemBlock,\n  PortableTextMarkDefinition,\n  PortableTextSpan,\n  TypedObject,\n} from '@portabletext/types'\nimport {type JSX, type ReactNode, useMemo} from 'react'\n\nimport {defaultComponents} from './components/defaults'\nimport {mergeComponents} from './components/merge'\nimport type {\n  MissingComponentHandler,\n  NodeRenderer,\n  PortableTextProps,\n  PortableTextReactComponents,\n  ReactPortableTextList,\n  Serializable,\n  SerializedBlock,\n} from './types'\nimport {\n  printWarning,\n  unknownBlockStyleWarning,\n  unknownListItemStyleWarning,\n  unknownListStyleWarning,\n  unknownMarkWarning,\n  unknownTypeWarning,\n} from './warnings'\n\nexport function PortableText<B extends TypedObject = PortableTextBlock>({\n  value: input,\n  components: componentOverrides,\n  listNestingMode,\n  onMissingComponent: missingComponentHandler = printWarning,\n}: PortableTextProps<B>): JSX.Element {\n  const handleMissingComponent = missingComponentHandler || noop\n  const blocks = Array.isArray(input) ? input : [input]\n  const nested = nestLists(blocks, listNestingMode || LIST_NEST_MODE_HTML)\n\n  const components = useMemo(() => {\n    return componentOverrides\n      ? mergeComponents(defaultComponents, componentOverrides)\n      : defaultComponents\n  }, [componentOverrides])\n\n  const renderNode = useMemo(\n    () => getNodeRenderer(components, handleMissingComponent),\n    [components, handleMissingComponent],\n  )\n  const rendered = nested.map((node, index) =>\n    renderNode({node: node, index, isInline: false, renderNode}),\n  )\n\n  return <>{rendered}</>\n}\n\nconst getNodeRenderer = (\n  components: PortableTextReactComponents,\n  handleMissingComponent: MissingComponentHandler,\n): NodeRenderer => {\n  function renderNode<N extends TypedObject>(options: Serializable<N>): ReactNode {\n    const {node, index, isInline} = options\n    const key = node._key || `node-${index}`\n\n    if (isPortableTextToolkitList(node)) {\n      return renderList(node, index, key)\n    }\n\n    if (isPortableTextListItemBlock(node)) {\n      return renderListItem(node, index, key)\n    }\n\n    if (isPortableTextToolkitSpan(node)) {\n      return renderSpan(node, index, key)\n    }\n\n    if (hasCustomComponentForNode(node)) {\n      return renderCustomBlock(node, index, key, isInline)\n    }\n\n    if (isPortableTextBlock(node)) {\n      return renderBlock(node, index, key, isInline)\n    }\n\n    if (isPortableTextToolkitTextNode(node)) {\n      return renderText(node, key)\n    }\n\n    return renderUnknownType(node, index, key, isInline)\n  }\n\n  function hasCustomComponentForNode(node: TypedObject): boolean {\n    return node._type in components.types\n  }\n\n  /* eslint-disable react/jsx-no-bind */\n  function renderListItem(\n    node: PortableTextListItemBlock<PortableTextMarkDefinition, PortableTextSpan>,\n    index: number,\n    key: string,\n  ) {\n    const tree = serializeBlock({node, index, isInline: false, renderNode})\n    const renderer = components.listItem\n    const handler = typeof renderer === 'function' ? renderer : renderer[node.listItem]\n    const Li = handler || components.unknownListItem\n\n    if (Li === components.unknownListItem) {\n      const style = node.listItem || 'bullet'\n      handleMissingComponent(unknownListItemStyleWarning(style), {\n        type: style,\n        nodeType: 'listItemStyle',\n      })\n    }\n\n    let children = tree.children\n    if (node.style && node.style !== 'normal') {\n      // Wrap any other style in whatever the block serializer says to use\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const {listItem, ...blockNode} = node\n      children = renderNode({node: blockNode, index, isInline: false, renderNode})\n    }\n\n    return (\n      <Li key={key} value={node} index={index} isInline={false} renderNode={renderNode}>\n        {children}\n      </Li>\n    )\n  }\n\n  function renderList(node: ReactPortableTextList, index: number, key: string) {\n    const children = node.children.map((child, childIndex) =>\n      renderNode({\n        node: child._key ? child : {...child, _key: `li-${index}-${childIndex}`},\n        index: childIndex,\n        isInline: false,\n        renderNode,\n      }),\n    )\n\n    const component = components.list\n    const handler = typeof component === 'function' ? component : component[node.listItem]\n    const List = handler || components.unknownList\n\n    if (List === components.unknownList) {\n      const style = node.listItem || 'bullet'\n      handleMissingComponent(unknownListStyleWarning(style), {nodeType: 'listStyle', type: style})\n    }\n\n    return (\n      <List key={key} value={node} index={index} isInline={false} renderNode={renderNode}>\n        {children}\n      </List>\n    )\n  }\n\n  function renderSpan(node: ToolkitNestedPortableTextSpan, _index: number, key: string) {\n    const {markDef, markType, markKey} = node\n    const Span = components.marks[markType] || components.unknownMark\n    const children = node.children.map((child, childIndex) =>\n      renderNode({node: child, index: childIndex, isInline: true, renderNode}),\n    )\n\n    if (Span === components.unknownMark) {\n      handleMissingComponent(unknownMarkWarning(markType), {nodeType: 'mark', type: markType})\n    }\n\n    return (\n      <Span\n        key={key}\n        text={spanToPlainText(node)}\n        value={markDef}\n        markType={markType}\n        markKey={markKey}\n        renderNode={renderNode}\n      >\n        {children}\n      </Span>\n    )\n  }\n\n  function renderBlock(node: PortableTextBlock, index: number, key: string, isInline: boolean) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const {_key, ...props} = serializeBlock({node, index, isInline, renderNode})\n    const style = props.node.style || 'normal'\n    const handler =\n      typeof components.block === 'function' ? components.block : components.block[style]\n    const Block = handler || components.unknownBlockStyle\n\n    if (Block === components.unknownBlockStyle) {\n      handleMissingComponent(unknownBlockStyleWarning(style), {\n        nodeType: 'blockStyle',\n        type: style,\n      })\n    }\n\n    return <Block key={key} {...props} value={props.node} renderNode={renderNode} />\n  }\n\n  function renderText(node: ToolkitTextNode, key: string) {\n    if (node.text === '\\n') {\n      const HardBreak = components.hardBreak\n      return HardBreak ? <HardBreak key={key} /> : '\\n'\n    }\n\n    return node.text\n  }\n\n  function renderUnknownType(node: TypedObject, index: number, key: string, isInline: boolean) {\n    const nodeOptions = {\n      value: node,\n      isInline,\n      index,\n      renderNode,\n    }\n\n    handleMissingComponent(unknownTypeWarning(node._type), {nodeType: 'block', type: node._type})\n\n    const UnknownType = components.unknownType\n    return <UnknownType key={key} {...nodeOptions} />\n  }\n\n  function renderCustomBlock(node: TypedObject, index: number, key: string, isInline: boolean) {\n    const nodeOptions = {\n      value: node,\n      isInline,\n      index,\n      renderNode,\n    }\n\n    const Node = components.types[node._type]\n    return Node ? <Node key={key} {...nodeOptions} /> : null\n  }\n  /* eslint-enable react/jsx-no-bind */\n\n  return renderNode\n}\n\nfunction serializeBlock(options: Serializable<PortableTextBlock>): SerializedBlock {\n  const {node, index, isInline, renderNode} = options\n  const tree = buildMarksTree(node)\n  const children = tree.map((child, i) =>\n    renderNode({node: child, isInline: true, index: i, renderNode}),\n  )\n\n  return {\n    _key: node._key || `block-${index}`,\n    children,\n    index,\n    isInline,\n    node,\n  }\n}\n\nfunction noop() {\n  // Intentional noop\n}\n"],"names":["getRevalidateReason","params","isOnDemandRevalidate","isRevalidate","undefined","CACHE_ONE_YEAR","getCacheControlHeader","revalidate","expire","swrHeader","warnOnce","_","process","env","NODE_ENV","warnings","Set","msg","has","console","warn","add","getImageBlurSvg","widthInt","heightInt","blurWidth","blurHeight","blurDataURL","objectFit","std","svgWidth","svgHeight","viewBox","preserveAspectRatio","VALID_LOADERS","imageConfigDefault","deviceSizes","imageSizes","path","loader","loaderFile","domains","disableStaticImages","minimumCacheTTL","formats","dangerouslyAllowSVG","contentSecurityPolicy","contentDispositionType","localPatterns","remotePatterns","qualities","unoptimized","getImgProps","VALID_LOADING_VALUES","INVALID_BACKGROUND_SIZE_VALUES","isStaticRequire","src","default","isStaticImageData","isStaticImport","allImgs","Map","perfObserver","getInt","x","Number","isFinite","NaN","test","parseInt","getWidths","width","sizes","allSizes","viewportWidthRe","percentSizes","match","exec","push","length","smallestRatio","Math","min","widths","filter","s","kind","map","w","find","p","generateImgAttrs","config","quality","srcSet","last","i","join","_state","priority","loading","className","height","fill","style","overrideSrc","onLoad","onLoadingComplete","placeholder","fetchPriority","decoding","layout","objectPosition","lazyBoundary","lazyRoot","rest","imgConf","showAltText","blurComplete","defaultLoader","c","sort","a","b","Error","isDefaultLoader","customImageLoader","obj","opts","layoutToStyle","intrinsic","maxWidth","responsive","layoutToSizes","layoutStyle","layoutSizes","staticSrc","staticImageData","JSON","stringify","ratio","round","isLazy","startsWith","split","endsWith","qualityInt","output","position","isNaN","includes","String","pathname","VALID_BLUR_EXT","urlStr","url","URL","err","search","legacyKey","legacyValue","Object","entries","window","PerformanceObserver","entryList","entry","getEntries","imgSrc","element","lcpImage","get","observe","type","buffered","error","imgStyle","assign","left","top","right","bottom","color","backgroundImage","backgroundSize","placeholderStyle","backgroundPosition","backgroundRepeat","imgAttributes","fullUrl","e","location","href","set","props","meta","Image","configEnv","__NEXT_IMAGE_OPTS","globalThis","__NEXT_IMAGE_IMPORTED","handleLoading","img","onLoadRef","onLoadingCompleteRef","setBlurComplete","sizesInput","decode","Promise","resolve","catch","then","parentElement","isConnected","current","event","Event","defineProperty","writable","value","prevented","stopped","nativeEvent","currentTarget","target","isDefaultPrevented","isPropagationStopped","persist","preventDefault","stopPropagation","origSrc","searchParams","getAttribute","widthViewportRatio","getBoundingClientRect","innerWidth","getComputedStyle","valid","heightModified","toString","widthModified","getDynamicProps","Boolean","use","fetchpriority","ImageElement","forwardRef","forwardedRef","setShowAltText","onError","ownRef","useCallback","complete","ref","useMergedRef","data-nimg","ImagePreload","isAppRouter","as","imageSrcSet","crossOrigin","referrerPolicy","ReactDOM","preload","Head","link","rel","pagesRouter","useContext","RouterContext","configContext","ImageConfigContext","useMemo","useRef","useEffect","useState","imgMeta","DEFAULT_Q","missingValues","NEXT_RUNTIME","hasLocalMatch","require","parsedSrc","hasRemoteMatch","hostname","q","reduce","prev","cur","abs","encodeURIComponent","NEXT_DEPLOYMENT_ID","__next_img_default","getImageProps","imgProps","key"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,11,12,13,14,15,16,18,19,20,29,32,33,34,35,36,37,38]}