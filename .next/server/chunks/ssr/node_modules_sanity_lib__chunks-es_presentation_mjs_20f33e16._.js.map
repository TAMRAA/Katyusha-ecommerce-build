{"version":3,"sources":["turbopack:///[project]/node_modules/@sanity/preview-url-secret/src/constants.ts","turbopack:///[project]/node_modules/sanity/src/presentation/overlays/useSharedState.ts","turbopack:///[project]/node_modules/sanity/src/presentation/constants.ts","turbopack:///[project]/node_modules/sanity/src/presentation/i18n/index.ts","turbopack:///[project]/node_modules/sanity/src/presentation/useDocumentLocations.ts","turbopack:///[project]/node_modules/sanity/src/presentation/usePresentationTool.ts","turbopack:///[project]/node_modules/sanity/src/presentation/document/useCurrentPresentationToolName.ts","turbopack:///[project]/node_modules/sanity/src/presentation/document/LocationsBanner.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/document/PresentationDocumentHeader.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/document/PresentationDocumentProvider.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/fieldActions/openInStructure.ts","turbopack:///[project]/node_modules/sanity/src/presentation/getIntentState.ts","turbopack:///[project]/node_modules/sanity/src/presentation/PresentationSpinner.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/router.ts","turbopack:///[project]/node_modules/sanity/src/presentation/plugin.tsx","turbopack:///[project]/node_modules/sanity/src/presentation/usePresentationNavigate.ts","turbopack:///[project]/node_modules/sanity/src/presentation/usePresentationParams.ts"],"sourcesContent":["import type {\n  PreviewUrlSecretSchemaIdPrefix,\n  PreviewUrlSecretSchemaType,\n  PreviewUrlSecretSchemaTypeSingleton,\n  VercelProtectionBypassSchemaType,\n} from './types'\n\n/** @internal */\nexport const schemaType = 'sanity.previewUrlSecret' satisfies PreviewUrlSecretSchemaType\n\n/** @internal */\nexport const schemaIdPrefix = 'sanity-preview-url-secret' satisfies PreviewUrlSecretSchemaIdPrefix\n\n/** @internal */\nexport const schemaIdSingleton = `${schemaIdPrefix}.share-access` as const\n\n/** @internal */\nexport const schemaTypeSingleton =\n  'sanity.previewUrlShareAccess' satisfies PreviewUrlSecretSchemaTypeSingleton\n\n/** @internal */\nexport const apiVersion = '2025-02-19'\n\n/** @internal */\nexport const urlSearchParamPreviewSecret = 'sanity-preview-secret'\n\n/** @internal */\nexport const urlSearchParamPreviewPathname = 'sanity-preview-pathname'\n\n/** @internal */\nexport const urlSearchParamPreviewPerspective = 'sanity-preview-perspective'\n\n/** @internal */\nexport const urlSearchParamVercelProtectionBypass = 'x-vercel-protection-bypass'\n\n/** @internal */\nexport const urlSearchParamVercelSetBypassCookie = 'x-vercel-set-bypass-cookie'\n\n/** @internal */\nexport const isDev = process.env.NODE_ENV === 'development'\n\n/**\n * updated within the hour, if it's older it'll create a new secret or return null\n * @internal\n */\nexport const SECRET_TTL = 60 * 60\n\n/** @internal */\nexport const fetchSecretQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && secret == $secret && dateTime(_updatedAt) > dateTime(now()) - ${SECRET_TTL}][0]{\n    _id,\n    _updatedAt,\n    secret,\n    studioUrl,\n  }` as const\n\n/** @internal */\nexport const fetchSharedAccessQuery =\n  /* groq */ `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\"][0].secret` as const\n\n/** @internal */\nexport const fetchSharedAccessSecretQuery =\n  /* groq */ `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\" && secret == $secret][0]{\n  secret,\n  studioUrl,\n}` as const\n\n/** @internal */\nexport const deleteExpiredSecretsQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && dateTime(_updatedAt) <= dateTime(now()) - ${SECRET_TTL}]` as const\n\n/** @internal */\nexport const vercelProtectionBypassSchemaType =\n  'sanity.vercelProtectionBypass' satisfies VercelProtectionBypassSchemaType\n\n/** @internal */\nexport const vercelProtectionBypassSchemaId = `${schemaIdPrefix}.vercel-protection-bypass` as const\n\n/** @internal */\nexport const fetchVercelProtectionBypassSecret =\n  /* groq */ `*[_id == \"${vercelProtectionBypassSchemaId}\" && _type == \"${vercelProtectionBypassSchemaType}\"][0].secret` as const\n\n/**\n * Used for tagging `client.fetch` queries\n * @internal\n */\nexport const tag = 'sanity.preview-url-secret' as const\n\n/** @internal */\nexport const perspectiveCookieName = 'sanity-preview-perspective'\n\nexport type {VercelSetBypassCookieValue} from './types'\n","import {type Serializable} from '@sanity/presentation-comlink'\nimport {useContext, useEffect} from 'react'\nimport {PresentationSharedStateContext} from 'sanity/_singletons'\n\n/** @public */\nexport const useSharedState = (key: string, value: Serializable): undefined => {\n  const context = useContext(PresentationSharedStateContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  const {setValue} = context\n\n  useEffect(() => {\n    setValue(key, value)\n  }, [key, value, setValue])\n\n  return undefined\n}\n","import {ComposeIcon} from '@sanity/icons'\nimport {apiVersion} from '@sanity/preview-url-secret/constants'\n\nexport const DEFAULT_TOOL_ICON = ComposeIcon\nexport const DEFAULT_TOOL_NAME = 'presentation'\nexport const DEFAULT_TOOL_TITLE = 'Presentation'\n\nexport const EDIT_INTENT_MODE = 'presentation'\n\n// How long we wait until an iframe is loaded until we consider it to be slow and possibly failed\nexport const MAX_TIME_TO_OVERLAYS_CONNECTION = 3_000 // ms\n\n// The API version to use when using `@sanity/client`\nexport const API_VERSION = apiVersion\n\n// Heartbeats shouldn't fire on intervals that are so short it causes performance issues\nexport const MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL = 1000 // ms\n\n// How often the list over loader queries should be garbage collected\nexport const LOADER_QUERY_GC_INTERVAL = 30_000 // ms\n\n// The interval at which we check if existing popups have been closed\nexport const POPUP_CHECK_INTERVAL = 1000 // ms\n","import {defineLocaleResourceBundle} from 'sanity'\n\n/**\n * The locale namespace for the presentation tool\n *\n * @public\n */\nexport const presentationLocaleNamespace = 'presentation' as const\n\n/**\n * The default locale bundle for the presentation tool, which is US English.\n *\n * @internal\n */\nexport const presentationUsEnglishLocaleBundle = defineLocaleResourceBundle({\n  locale: 'en-US',\n  namespace: presentationLocaleNamespace,\n  resources: () => import('./resources'),\n})\n","import {useEffect, useMemo, useState} from 'react'\nimport {isObservable, map, of} from 'rxjs'\nimport {\n  type ObjectSchemaType,\n  type PreviewableType,\n  useDocumentPreviewStore,\n  useDocumentStore,\n  usePerspective,\n} from 'sanity'\n\nimport {\n  type DocumentLocationResolver,\n  type DocumentLocationResolvers,\n  type DocumentLocationsState,\n  type DocumentLocationsStatus,\n} from './types'\n\nconst INITIAL_STATE: DocumentLocationsState = {locations: []}\n\nexport function useDocumentLocations(props: {\n  id: string\n  version: string | undefined\n  resolvers?: DocumentLocationResolver | DocumentLocationResolvers\n  type: ObjectSchemaType\n}): {\n  state: DocumentLocationsState\n  status: DocumentLocationsStatus\n} {\n  const {id, resolvers, type, version} = props\n  const documentStore = useDocumentStore()\n  const documentPreviewStore = useDocumentPreviewStore()\n\n  const {perspectiveStack} = usePerspective()\n  const [locationsState, setLocationsState] = useState<DocumentLocationsState>(INITIAL_STATE)\n\n  const resolver = resolvers && (typeof resolvers === 'function' ? resolvers : resolvers[type.name])\n\n  const [locationsStatus, setLocationsStatus] = useState<DocumentLocationsStatus>(\n    resolver ? 'resolving' : 'empty',\n  )\n\n  const result = useMemo(() => {\n    if (!resolver) return undefined\n\n    // Original/advanced resolver which requires explicit use of Observables\n    if (typeof resolver === 'function') {\n      const params = {id, type: type.name, version, perspectiveStack}\n      const context = {documentStore}\n      const _result = resolver(params, context)\n      return isObservable(_result) ? _result : of(_result)\n    }\n\n    // Simplified resolver pattern which abstracts away Observable logic\n    if ('select' in resolver && 'resolve' in resolver) {\n      const doc = {_type: 'reference', _ref: id}\n      // Override the preview selection in the schema type to use the user\n      // defined selection defined by the resolver\n      const _type = {...type, preview: {select: resolver.select}} satisfies PreviewableType\n      const options = {perspective: perspectiveStack}\n      return documentPreviewStore\n        .observeForPreview(doc, _type, options)\n        .pipe(map((preview) => resolver.resolve(preview.snapshot || null)))\n    }\n\n    // Resolver is explicitly provided state\n    return of(resolver)\n  }, [documentStore, documentPreviewStore, id, resolver, type, version, perspectiveStack])\n\n  useEffect(() => {\n    const sub = result?.subscribe((state) => {\n      setLocationsState(state || INITIAL_STATE)\n      setLocationsStatus(state ? 'resolved' : 'empty')\n    })\n\n    return () => sub?.unsubscribe()\n  }, [result])\n\n  return {\n    state: locationsState,\n    status: locationsStatus,\n  }\n}\n","import {useContext} from 'react'\nimport {PresentationContext} from 'sanity/_singletons'\n\nimport {type PresentationContextValue} from './types'\n\nexport function usePresentationTool(throwOnMissingContext?: true): PresentationContextValue\nexport function usePresentationTool(throwOnMissingContext: false): PresentationContextValue | null\nexport function usePresentationTool(throwOnMissingContext = true): PresentationContextValue | null {\n  const presentation = useContext(PresentationContext)\n\n  if (throwOnMissingContext && !presentation) {\n    throw new Error('Presentation context is missing')\n  }\n\n  return presentation\n}\n","import {usePresentationTool} from '../usePresentationTool'\n\nexport function useCurrentPresentationToolName(): string | undefined {\n  return usePresentationTool(false)?.name ?? undefined\n}\n","import {\n  ChevronRightIcon,\n  DesktopIcon,\n  ErrorOutlineIcon,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {type ComponentType, type ReactNode, useCallback, useContext, useState} from 'react'\nimport {type ObjectSchemaType, useTranslation} from 'sanity'\nimport {PresentationContext} from 'sanity/_singletons'\nimport {useIntentLink} from 'sanity/router'\n\nimport {DEFAULT_TOOL_NAME, DEFAULT_TOOL_TITLE} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type DocumentLocation,\n  type DocumentLocationResolver,\n  type DocumentLocationResolvers,\n  type PresentationPluginOptions,\n} from '../types'\nimport {useDocumentLocations} from '../useDocumentLocations'\nimport {useCurrentPresentationToolName} from './useCurrentPresentationToolName'\n\nconst TONE_ICONS: Record<'positive' | 'caution' | 'critical', ComponentType> = {\n  positive: InfoOutlineIcon,\n  caution: WarningOutlineIcon,\n  critical: ErrorOutlineIcon,\n}\n\nexport function LocationsBanner(props: {\n  documentId: string\n  options: PresentationPluginOptions\n  resolvers?: DocumentLocationResolver | DocumentLocationResolvers\n  schemaType: ObjectSchemaType\n  showPresentationTitle: boolean\n  version: string | undefined\n}): ReactNode {\n  const {documentId, options, resolvers, schemaType, showPresentationTitle, version} = props\n\n  const {state, status} = useDocumentLocations({\n    id: documentId,\n    version,\n    resolvers,\n    type: schemaType,\n  })\n\n  const isResolving = status === 'resolving'\n\n  const {locations, message, tone} = state\n  const locationsCount = locations?.length || 0\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const presentation = useContext(PresentationContext)\n  const presentationName = presentation?.name\n  const [expanded, setExpanded] = useState(false)\n  const toggle = useCallback(() => {\n    if (!locationsCount) return\n    setExpanded((v) => !v)\n  }, [locationsCount])\n\n  const title = isResolving\n    ? t('locations-banner.resolving.text')\n    : message || t('locations-banner.locations-count', {count: locationsCount})\n\n  const ToneIcon = tone ? TONE_ICONS[tone] : undefined\n\n  if (!resolvers || status === 'empty') return null\n  return (\n    <Card padding={1} radius={2} border tone={tone}>\n      <div style={{margin: -1}}>\n        {!locations && (\n          <Flex align=\"flex-start\" gap={3} padding={3}>\n            {tone && ToneIcon && (\n              <Box flex=\"none\">\n                <Text size={1}>\n                  <ToneIcon />\n                </Text>\n              </Box>\n            )}\n            <Box flex={1}>\n              <Text size={1} weight=\"medium\">\n                {showPresentationTitle && <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>}\n                {title}\n              </Text>\n            </Box>\n          </Flex>\n        )}\n        {locations && (\n          <>\n            <Card\n              as={locationsCount ? 'button' : undefined}\n              onClick={toggle}\n              padding={3}\n              radius={1}\n              tone=\"inherit\"\n            >\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  {isResolving ? (\n                    <Spinner size={1} />\n                  ) : (\n                    <Text size={1}>\n                      {locationsCount === 0 ? (\n                        <InfoOutlineIcon />\n                      ) : (\n                        <ChevronRightIcon\n                          style={{\n                            transform: `rotate(${expanded ? '90deg' : 0})`,\n                            transition: 'transform 100ms ease-in-out',\n                          }}\n                        />\n                      )}\n                    </Text>\n                  )}\n                </Box>\n                <Box flex={1}>\n                  <Text size={1} weight=\"medium\">\n                    {showPresentationTitle && <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>}\n                    {title}\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n            <Stack hidden={!expanded} marginTop={1} space={1}>\n              {locations.map((l) => {\n                let active = false\n                if (\n                  (options.name || DEFAULT_TOOL_NAME) === presentationName &&\n                  presentation?.params.preview\n                ) {\n                  active = areUrlsMatching(presentation.params.preview, l.href)\n                }\n\n                return (\n                  <LocationItem\n                    key={l.href}\n                    active={active}\n                    documentId={documentId}\n                    documentType={schemaType.name}\n                    node={l}\n                    toolName={options.name || DEFAULT_TOOL_NAME}\n                  />\n                )\n              })}\n            </Stack>\n          </>\n        )}\n      </div>\n    </Card>\n  )\n}\n\nfunction LocationItem(props: {\n  active: boolean\n  documentId: string\n  documentType: string\n  node: DocumentLocation\n  toolName: string\n}) {\n  const {documentId, documentType, node, active, toolName} = props\n  const presentation = useContext(PresentationContext)\n  const currentPresentationToolName = useCurrentPresentationToolName()\n  const isCurrentTool = toolName === currentPresentationToolName\n  const navigate = presentation?.navigate\n\n  const presentationLinkProps = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: documentId,\n      type: documentType,\n      mode: 'presentation',\n      presentation: toolName,\n      ...presentation?.structureParams,\n      preview: node.href,\n    },\n  })\n\n  const handleCurrentToolClick = useCallback(() => {\n    navigate?.({params: {preview: node.href}})\n  }, [node.href, navigate])\n\n  return (\n    <Card\n      key={node.href}\n      {...(isCurrentTool ? {} : presentationLinkProps)}\n      as=\"a\"\n      onClick={isCurrentTool ? handleCurrentToolClick : presentationLinkProps.onClick}\n      padding={3}\n      radius={1}\n      pressed={active}\n      tone=\"inherit\"\n    >\n      <Flex gap={3}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <DesktopIcon />\n          </Text>\n        </Box>\n        <Stack flex={1} space={2}>\n          <Text size={1} weight=\"medium\">\n            {node.title}\n          </Text>\n          <Text muted size={1} textOverflow=\"ellipsis\">\n            {node.href}\n          </Text>\n        </Stack>\n      </Flex>\n    </Card>\n  )\n}\n\n/**\n * Compares two URLs to determine if they match based on origin, pathname, and search parameters\n * The previewUrl should have all the search parameters that are in the locationUrl\n */\nfunction areUrlsMatching(previewUrlString: string, locationUrlString: string): boolean {\n  try {\n    const previewUrl = new URL(previewUrlString, location.origin)\n    const locationUrl = new URL(locationUrlString, previewUrl.origin)\n\n    // First compare origin and pathname\n    if (previewUrl.origin !== locationUrl.origin || previewUrl.pathname !== locationUrl.pathname) {\n      return false\n    }\n\n    // Then check search params\n    // All search params in locationUrl must exist with the same values in previewUrl\n    const locationParams = new URLSearchParams(locationUrl.search)\n    const previewParams = new URLSearchParams(previewUrl.search)\n\n    for (const [key, value] of locationParams.entries()) {\n      if (previewParams.get(key) !== value) {\n        return false\n      }\n    }\n\n    return true\n  } catch {\n    // If URL parsing fails, URLs don't match\n    return false\n  }\n}\n","import {rem} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2} from '@sanity/ui/theme'\nimport {type ReactNode, useContext} from 'react'\nimport {type ObjectSchemaType, type PublishedId} from 'sanity'\nimport {PresentationDocumentContext} from 'sanity/_singletons'\nimport {css, styled} from 'styled-components'\n\nimport {type PresentationPluginOptions} from '../types'\nimport {LocationsBanner} from './LocationsBanner'\n\nconst LocationStack = styled.div((props) => {\n  const theme = getTheme_v2(props.theme)\n  return css`\n    display: flex;\n    flex-direction: column;\n    gap: ${rem(theme.space[2])};\n    min-height: ${rem(42)};\n    margin-bottom: ${rem(theme.space[5])};\n\n    &:empty {\n      display: none;\n    }\n  `\n})\n\nexport function PresentationDocumentHeader(props: {\n  documentId: PublishedId\n  version: string | undefined\n  options: PresentationPluginOptions\n  schemaType: ObjectSchemaType\n}): ReactNode {\n  const {documentId, options, schemaType, version} = props\n  const context = useContext(PresentationDocumentContext)\n\n  const contextOptions = context?.options || []\n  const resolvers = contextOptions.map((o) => o.resolve?.locations || o.locate)\n  const hasResolvers = resolvers.some(Boolean)\n\n  if ((context && context.options[0] !== options) || !hasResolvers) {\n    return null\n  }\n\n  return (\n    <LocationStack>\n      {contextOptions.map((_options, idx) => (\n        <LocationsBanner\n          // oxlint-disable-next-line no-array-index-key\n          key={idx}\n          documentId={documentId}\n          options={_options}\n          resolvers={resolvers[idx]}\n          schemaType={schemaType}\n          showPresentationTitle={contextOptions.length > 1}\n          version={version}\n        />\n      ))}\n    </LocationStack>\n  )\n}\n","import {type ReactNode, useCallback, useContext, useLayoutEffect, useMemo, useState} from 'react'\nimport {PresentationDocumentContext} from 'sanity/_singletons'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {type PresentationPluginOptions} from '../types'\nimport {type PresentationDocumentContextValue} from './types'\n\n/** @internal */\nexport function PresentationDocumentProvider(props: {\n  children?: ReactNode\n  options: PresentationPluginOptions\n}): React.JSX.Element {\n  const {children, options} = props\n  const parent = useContext(PresentationDocumentContext)\n  const parentRegister = parent?.register\n\n  const [optionsArray, setOptionsArray] = useState<PresentationPluginOptions[]>(() => [])\n\n  const register = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (options: PresentationPluginOptions) => {\n      if (parentRegister) {\n        return parentRegister(options)\n      }\n\n      setOptionsArray((prev) => [options].concat(prev))\n\n      return () => {\n        setOptionsArray((prev) => prev.filter((o) => o !== options))\n      }\n    },\n    [parentRegister],\n  )\n\n  const context: PresentationDocumentContextValue = useMemo(\n    () => ({\n      options: parent?.options || optionsArray,\n      register,\n    }),\n    [optionsArray, parent, register],\n  )\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const registerEffectEvent = useEffectEvent((options: PresentationPluginOptions) =>\n    register(options),\n  )\n  useLayoutEffect(() => registerEffectEvent(options), [options])\n\n  return (\n    <PresentationDocumentContext.Provider value={context}>\n      {children}\n    </PresentationDocumentContext.Provider>\n  )\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {useContext, useMemo} from 'react'\nimport {\n  defineDocumentFieldAction,\n  type DocumentFieldActionGroup,\n  type DocumentFieldActionItem,\n  type DocumentFieldActionProps,\n  isRecord,\n  pathToString,\n  type Tool,\n  useWorkspace,\n} from 'sanity'\nimport {PresentationContext} from 'sanity/_singletons'\nimport {useRouter} from 'sanity/router'\n\nimport {DEFAULT_TOOL_NAME} from '../constants'\n\nfunction useOpenInStructureAction(\n  props: DocumentFieldActionProps,\n): DocumentFieldActionItem | DocumentFieldActionGroup {\n  const {documentId, documentType, path} = props\n  const workspace = useWorkspace()\n  const {navigateIntent} = useRouter()\n  const presentation = useContext(PresentationContext)\n\n  const defaultStructureTool = useMemo(\n    () =>\n      findStructureTool(\n        workspace.tools,\n        documentId,\n        documentType,\n        presentation?.name || DEFAULT_TOOL_NAME,\n      ),\n    [documentId, documentType, workspace.tools, presentation],\n  )\n\n  return {\n    type: 'action',\n    hidden: !presentation || path.length > 0 || !defaultStructureTool,\n    icon: defaultStructureTool?.icon || MasterDetailIcon,\n    title: `Open in ${defaultStructureTool?.title || 'Structure'}`,\n    onAction() {\n      navigateIntent('edit', {\n        id: documentId,\n        type: documentType,\n        mode: 'structure',\n        path: pathToString(path),\n      })\n    },\n    renderAsButton: true,\n  }\n}\n\nexport const openInStructure = defineDocumentFieldAction({\n  name: 'presentation/openInStructure',\n  useAction: useOpenInStructureAction,\n})\n\nfunction findStructureTool(\n  tools: Tool[],\n  documentId: string,\n  documentType: string,\n  presentationToolName?: string,\n): Tool | undefined {\n  const results = tools\n    .filter((t) => t.name !== presentationToolName)\n    .map((t) => {\n      const match = t.canHandleIntent?.(\n        'edit',\n        {\n          id: documentId,\n          type: documentType,\n          mode: 'structure',\n        },\n        {},\n      )\n\n      return {tool: t, match}\n    })\n\n  const modeMatches = results.filter((t) => isRecord(t.match) && t.match.mode)\n\n  if (modeMatches.length > 0) {\n    return modeMatches[0].tool\n  }\n\n  const matches = results.filter((t) => t.match)\n\n  return matches[0]?.tool\n}\n","import {uuid} from '@sanity/uuid'\nimport {getPublishedId} from 'sanity'\nimport {encodeJsonParams, type RouterState, type SearchParam} from 'sanity/router'\n\nimport {type PresentationSearchParams, type PresentationStateParams} from './types'\n\nconst preservedSearchParamKeys: Array<keyof PresentationSearchParams> = ['preview', 'viewport']\n\n/**\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: RouterState | undefined,\n  payload: unknown,\n):\n  | (PresentationStateParams & {_searchParams: SearchParam[]})\n  | {intent: string; params: Record<string, string>; payload: unknown} {\n  // oxlint-disable-next-line no-unused-vars\n  const {id, mode, path, presentation, type, ...searchParams} = params\n\n  const preservedSearchParams = (routerState?._searchParams || [])\n    // @todo Casting https://github.com/microsoft/TypeScript/issues/14520\n    .filter(([key]) => preservedSearchParamKeys.includes(key as keyof PresentationSearchParams))\n    .reduce((acc, [key, value]) => ({...acc, [key]: value}), {} as Record<string, string>)\n\n  const _searchParams = {\n    ...preservedSearchParams,\n    ...searchParams,\n  }\n\n  if (intent === 'edit' && id) {\n    _searchParams.preview =\n      _searchParams.preview || new URLSearchParams(window.location.search).get('preview') || '/'\n    return {\n      type: type || '*',\n      id: getPublishedId(id),\n      path,\n      _searchParams: Object.entries(_searchParams),\n    }\n  }\n\n  if (intent === 'create') {\n    _searchParams.preview =\n      _searchParams.preview || new URLSearchParams(window.location.search).get('preview') || '/'\n\n    if (payload && typeof payload === 'object') {\n      _searchParams.templateParams = encodeJsonParams(payload as Record<string, unknown>)\n    }\n\n    return {\n      type: type || '*',\n      id: id || uuid(),\n      _searchParams: Object.entries(_searchParams),\n    }\n  }\n  return {intent, params, payload}\n}\n","import {Flex, Spinner} from '@sanity/ui'\n\nexport function PresentationSpinner(): React.JSX.Element {\n  return (\n    <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\" style={{width: '100%'}}>\n      <Spinner />\n    </Flex>\n  )\n}\n","import {route} from 'sanity/router'\n\n// eslint-disable-next-line camelcase\nexport const router = route.create('/', {__unsafe_disableScopedSearchParams: true}, [\n  route.intents('/intent'),\n  route.create(':type', [route.create(':id', [route.create(':path')])]),\n])\n","import {type SanityDocument} from '@sanity/client'\nimport {lazy, Suspense} from 'react'\nimport {\n  definePlugin,\n  getPublishedId,\n  getVersionFromId,\n  type InputProps,\n  isDocumentSchemaType,\n} from 'sanity'\n\nimport {DEFAULT_TOOL_ICON, DEFAULT_TOOL_NAME, EDIT_INTENT_MODE} from './constants'\nimport {PresentationDocumentHeader} from './document/PresentationDocumentHeader'\nimport {PresentationDocumentProvider} from './document/PresentationDocumentProvider'\nimport {openInStructure} from './fieldActions/openInStructure'\nimport {getIntentState} from './getIntentState'\nimport {presentationUsEnglishLocaleBundle} from './i18n'\nimport {PresentationSpinner} from './PresentationSpinner'\nimport {router} from './router'\nimport {\n  type DocumentLocationResolverObject,\n  type DocumentLocationsState,\n  type DocumentResolver,\n  type PresentationPluginOptions,\n} from './types'\n\nconst PresentationTool = lazy(() => import('./PresentationToolGrantsCheck'))\nconst BroadcastDisplayedDocument = lazy(() => import('./loader/BroadcastDisplayedDocument'))\n\n/**\n * Define locations for a given document type.\n * This function doesn't do anything itself, it is used to provide type information.\n * @param resolver - resolver that return locations for a document.\n * @public\n */\nexport function defineLocations<K extends string>(\n  resolver: DocumentLocationResolverObject<K> | DocumentLocationsState,\n): typeof resolver {\n  return resolver\n}\n\n/**\n * Define documents for a given location.\n * This function doesn't do anything itself, it is used to provide type information.\n * @param resolvers - resolvers that return documents.\n * @public\n */\nexport function defineDocuments(resolvers: DocumentResolver[]): typeof resolvers {\n  return resolvers\n}\n\n/** @public */\nexport const presentationTool = definePlugin<PresentationPluginOptions>((options) => {\n  const toolName = options.name || DEFAULT_TOOL_NAME\n\n  if ('locate' in options) {\n    console.warn('Presentation’s `locate` option is deprecated. Use `resolve.locations` instead.')\n  }\n\n  const hasLocationsResolver = !!(options.resolve?.locations || options.locate)\n\n  function PresentationDocumentInput(props: InputProps) {\n    const value = props.value as SanityDocument\n    const documentId = value?._id ? getPublishedId(value?._id) : undefined\n    const documentVersion = value?._id ? getVersionFromId(value._id) : undefined\n    if (isDocumentSchemaType(props.schemaType)) {\n      return (\n        <PresentationDocumentProvider options={options}>\n          {hasLocationsResolver && documentId && (\n            <PresentationDocumentHeader\n              documentId={documentId}\n              version={documentVersion}\n              options={options}\n              schemaType={props.schemaType}\n            />\n          )}\n          <Suspense fallback={<PresentationSpinner />}>{props.renderDefault(props)}</Suspense>\n          <Suspense key=\"broadcast-displayed-document\">\n            <BroadcastDisplayedDocument key={documentId} value={value} />\n          </Suspense>\n        </PresentationDocumentProvider>\n      )\n    }\n\n    return props.renderDefault(props)\n  }\n\n  function canHandleCreateIntent(params: Record<string, unknown>) {\n    // We can't handle create intents without a `type` parameter\n    if (!('type' in params)) {\n      return false\n    }\n\n    if ('presentation' in params && params.presentation !== toolName) {\n      return false\n    }\n\n    return 'template' in params ? {template: true} : true\n  }\n\n  function canHandleEditIntent(params: Record<string, unknown>) {\n    // We can't handle edit intents without `type` or `id` parameters\n    if (!('type' in params) || !('id' in params)) {\n      return false\n    }\n\n    if ('presentation' in params && params.presentation !== toolName) {\n      return false\n    }\n\n    return 'mode' in params ? {mode: params.mode === EDIT_INTENT_MODE} : true\n  }\n\n  return {\n    i18n: {\n      bundles: [presentationUsEnglishLocaleBundle],\n    },\n    document: {\n      unstable_fieldActions: (prev) => {\n        return [\n          ...prev.filter((a) => a.name !== openInStructure.name), // prevent duplication\n          openInStructure,\n        ]\n      },\n    },\n\n    form: {\n      components: {\n        input: PresentationDocumentInput,\n      },\n    },\n\n    tools: [\n      {\n        icon: options.icon || DEFAULT_TOOL_ICON,\n        name: toolName,\n        title: options.title,\n        component: PresentationTool,\n        options,\n        canHandleIntent(intent, params) {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        router,\n        __internalApplicationType: 'sanity/presentation',\n      },\n    ],\n  }\n})\n","import {useContext} from 'react'\nimport {PresentationNavigateContext} from 'sanity/_singletons'\n\nimport {type PresentationNavigateContextValue} from './types'\n\n/** @public */\nexport function usePresentationNavigate(): PresentationNavigateContextValue {\n  const navigate = useContext(PresentationNavigateContext)\n\n  if (!navigate) {\n    throw new Error('Presentation navigate context is missing')\n  }\n\n  return navigate\n}\n\nexport type {PresentationNavigateContextValue}\n","import {useContext} from 'react'\nimport {PresentationParamsContext} from 'sanity/_singletons'\n\nimport {type PresentationParamsContextValue} from './types'\n\n/** @public */\nexport function usePresentationParams(throwOnMissingContext?: true): PresentationParamsContextValue\n/** @public */\nexport function usePresentationParams(\n  throwOnMissingContext: false,\n): PresentationParamsContextValue | null\n/** @public */\nexport function usePresentationParams(\n  throwOnMissingContext = true,\n): PresentationParamsContextValue | null {\n  const params = useContext(PresentationParamsContext)\n\n  if (throwOnMissingContext && !params) {\n    throw new Error('Presentation params context is missing')\n  }\n\n  return params\n}\n"],"names":["useSharedState","key","value","$","_c","context","useContext","PresentationSharedStateContext","Error","setValue","t0","t1","useEffect","DEFAULT_TOOL_ICON","ComposeIcon","DEFAULT_TOOL_NAME","DEFAULT_TOOL_TITLE","EDIT_INTENT_MODE","MAX_TIME_TO_OVERLAYS_CONNECTION","API_VERSION","apiVersion","MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL","LOADER_QUERY_GC_INTERVAL","POPUP_CHECK_INTERVAL","presentationLocaleNamespace","presentationUsEnglishLocaleBundle","defineLocaleResourceBundle","locale","namespace","resources","INITIAL_STATE","locations","useDocumentLocations","props","id","resolvers","type","version","documentStore","useDocumentStore","documentPreviewStore","useDocumentPreviewStore","perspectiveStack","usePerspective","locationsState","setLocationsState","useState","resolver","name","locationsStatus","setLocationsStatus","bb0","undefined","params","_result","isObservable","of","doc","_type","_ref","preview","select","options","perspective","t2","resolve","snapshot","observeForPreview","pipe","map","result","sub","subscribe","state","unsubscribe","t3","status","usePresentationTool","throwOnMissingContext","presentation","PresentationContext","useCurrentPresentationToolName","TONE_ICONS","positive","InfoOutlineIcon","caution","WarningOutlineIcon","critical","ErrorOutlineIcon","LocationsBanner","documentId","schemaType","showPresentationTitle","isResolving","message","tone","locationsCount","length","t","useTranslation","presentationName","expanded","setExpanded","_temp","toggle","count","title","ToneIcon","Symbol","for","margin","t4","t5","transform","transition","l","active","href","t6","t7","v","LocationItem","documentType","node","toolName","currentPresentationToolName","isCurrentTool","navigate","structureParams","intent","mode","presentationLinkProps","useIntentLink","handleCurrentToolClick","onClick","t8","t9","areUrlsMatching","previewUrlString","locationUrlString","previewUrl","URL","location","origin","locationUrl","pathname","locationParams","URLSearchParams","search","previewParams","entries","get","LocationStack","styled","div","theme","getTheme_v2","css","rem","space","PresentationDocumentHeader","PresentationDocumentContext","contextOptions","some","Boolean","hasResolvers","_options","idx","o","locate","PresentationDocumentProvider","children","parent","parentRegister","register","optionsArray","setOptionsArray","options_0","prev","concat","prev_0","filter","options_1","registerEffectEvent","useEffectEvent","useLayoutEffect","useOpenInStructureAction","path","workspace","useWorkspace","navigateIntent","useRouter","tools","findStructureTool","defaultStructureTool","icon","MasterDetailIcon","hidden","onAction","pathToString","renderAsButton","openInStructure","defineDocumentFieldAction","useAction","presentationToolName","results","match","canHandleIntent","tool","modeMatches","isRecord","preservedSearchParamKeys","getIntentState","routerState","payload","searchParams","_searchParams","includes","reduce","acc","window","getPublishedId","Object","templateParams","encodeJsonParams","uuid","PresentationSpinner","width","router","route","create","__unsafe_disableScopedSearchParams","intents","PresentationTool","lazy","BroadcastDisplayedDocument","defineLocations","defineDocuments","presentationTool","definePlugin","console","warn","hasLocationsResolver","PresentationDocumentInput","_id","getVersionFromId","documentVersion","isDocumentSchemaType","renderDefault","canHandleCreateIntent","template","canHandleEditIntent","i18n","bundles","document","unstable_fieldActions","a","form","components","input","component","__internalApplicationType","usePresentationNavigate","PresentationNavigateContext","usePresentationParams","PresentationParamsContext"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}