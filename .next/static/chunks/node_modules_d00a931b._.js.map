{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@sanity/presentation-comlink/dist/index.js","sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/%40sanity/presentation-comlink/src/comlinkCompatibility.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/%40sanity/presentation-comlink/src/isMaybePresentation.ts"],"sourcesContent":["import {\n  createListenLogic,\n  createRequestMachine,\n  DOMAIN,\n  MSG_DISCONNECT,\n  MSG_HANDSHAKE_ACK,\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HEARTBEAT,\n  MSG_RESPONSE,\n  type InternalMessageType,\n  type Message,\n  type ProtocolMessage,\n  type RequestMachineContext,\n} from '@sanity/comlink'\nimport type {\n  LoaderControllerMsg,\n  LoaderNodeMsg,\n  PreviewKitNodeMsg,\n  VisualEditingControllerMsg,\n  VisualEditingNodeMsg,\n} from './types'\n\ntype ComlinkMessageType =\n  | InternalMessageType\n  | (\n      | LoaderControllerMsg\n      | LoaderNodeMsg\n      | PreviewKitNodeMsg\n      | VisualEditingControllerMsg\n      | VisualEditingNodeMsg\n    )['type']\n\ntype ChannelsMessageType =\n  | 'handshake/syn'\n  | 'handshake/syn-ack'\n  | 'handshake/ack'\n  | 'channel/response'\n  | 'channel/heartbeat'\n  | 'channel/disconnect'\n  | 'overlay/focus'\n  | 'overlay/navigate'\n  | 'overlay/toggle'\n  | 'presentation/toggleOverlay'\n\nconst channelsToComlinkMap: {[key in ChannelsMessageType]: ComlinkMessageType} = {\n  'handshake/syn': MSG_HANDSHAKE_SYN,\n  'handshake/syn-ack': MSG_HANDSHAKE_SYN_ACK,\n  'handshake/ack': MSG_HANDSHAKE_ACK,\n  'channel/response': MSG_RESPONSE,\n  'channel/heartbeat': MSG_HEARTBEAT,\n  'channel/disconnect': MSG_DISCONNECT,\n  'overlay/focus': 'visual-editing/focus',\n  'overlay/navigate': 'visual-editing/navigate',\n  'overlay/toggle': 'visual-editing/toggle',\n  'presentation/toggleOverlay': 'presentation/toggle-overlay',\n}\n\nconst comlinkToChannelsMap: {[key in ComlinkMessageType]?: ChannelsMessageType} = {\n  [MSG_HANDSHAKE_SYN]: 'handshake/syn',\n  [MSG_HANDSHAKE_SYN_ACK]: 'handshake/syn-ack',\n  [MSG_HANDSHAKE_ACK]: 'handshake/ack',\n  [MSG_RESPONSE]: 'channel/response',\n  [MSG_HEARTBEAT]: 'channel/heartbeat',\n  [MSG_DISCONNECT]: 'channel/disconnect',\n  'visual-editing/focus': 'overlay/focus',\n  'visual-editing/navigate': 'overlay/navigate',\n  'visual-editing/toggle': 'overlay/toggle',\n  'presentation/toggle-overlay': 'presentation/toggleOverlay',\n}\n\ntype ChannelMsg = Omit<ProtocolMessage, 'channelId'> & {connectionId: string}\n\nconst convertToComlinkEvent = (event: MessageEvent): MessageEvent<ProtocolMessage> => {\n  const {data} = event\n\n  if (\n    data &&\n    typeof data === 'object' &&\n    'domain' in data &&\n    'type' in data &&\n    'from' in data &&\n    'to' in data\n  ) {\n    if (data.domain === 'sanity/channels') {\n      data.domain = DOMAIN\n    }\n\n    if (data.to === 'overlays') {\n      data.to = 'visual-editing'\n    }\n\n    if (data.from === 'overlays') {\n      data.from = 'visual-editing'\n    }\n\n    data.channelId = data.connectionId\n    delete data.connectionId\n\n    data.type = channelsToComlinkMap[data.type as ChannelsMessageType] ?? data.type\n  }\n\n  return event\n}\n\nconst convertToChannelsMessage = (comlinkMessage: ProtocolMessage): ChannelMsg => {\n  const {channelId, ...rest} = comlinkMessage\n  const message = {...rest, connectionId: channelId} as ChannelMsg\n\n  if (message.domain === DOMAIN) {\n    message.domain = 'sanity/channels'\n  }\n\n  if (message.to === 'visual-editing') {\n    message.to = 'overlays'\n  }\n\n  if (message.from === 'visual-editing') {\n    message.from = 'overlays'\n  }\n\n  message.type = comlinkToChannelsMap[message.type as ComlinkMessageType] ?? message.type\n\n  if (message.type === 'channel/response' && message.responseTo && !message.data) {\n    message.data = {responseTo: message.responseTo}\n  }\n\n  if (\n    message.type === 'handshake/syn' ||\n    message.type === 'handshake/syn-ack' ||\n    message.type === 'handshake/ack'\n  ) {\n    message.data = {id: message.connectionId}\n  }\n\n  return message\n}\n\nconst sendAsChannelsMessage = <S extends Message>(\n  {context}: {context: RequestMachineContext<S>},\n  params: {message: ProtocolMessage},\n): void => {\n  const {sources, targetOrigin} = context\n\n  const message = convertToChannelsMessage(params.message)\n\n  sources.forEach((source) => {\n    source.postMessage(message, {targetOrigin})\n  })\n}\n\nexport {\n  type ListenInput,\n  type Message,\n  type MessageData,\n  type MessageType,\n  MSG_RESPONSE,\n  type ProtocolMessage,\n  type RequestMachineContext,\n  type ResponseMessage,\n} from '@sanity/comlink'\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const createCompatibilityActors = <T extends Message>() => ({\n  listen: createListenLogic(convertToComlinkEvent),\n  requestMachine: createRequestMachine<T>().provide({\n    actions: {\n      'send message': sendAsChannelsMessage,\n    },\n  }),\n})\n","export function isMaybePreviewIframe(): boolean {\n  return window.self !== window.top\n}\nexport function isMaybePreviewWindow(): boolean {\n  return Boolean(window.opener)\n}\nexport function isMaybePresentation(): boolean {\n  return isMaybePreviewIframe() || isMaybePreviewWindow()\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AA6CA,MAAM,uBAA2E;IAC/E,iBAAiB,4KAAA;IACjB,qBAAqB,gLAAA;IACrB,iBAAiB,4KAAA;IACjB,oBAAoB,uKAAA;IACpB,qBAAqB,wKAAA;IACrB,sBAAsB,yKAAA;IACtB,iBAAiB;IACjB,oBAAoB;IACpB,kBAAkB;IAClB,8BAA8B;AAChC,GAEM,uBAA4E;IAChF,CAAC,4KAAiB,CAAA,EAAG;IACrB,CAAC,gLAAqB,CAAA,EAAG;IACzB,CAAC,4KAAiB,CAAA,EAAG;IACrB,CAAC,uKAAY,CAAA,EAAG;IAChB,CAAC,wKAAa,CAAA,EAAG;IACjB,CAAC,yKAAc,CAAA,EAAG;IAClB,wBAAwB;IACxB,2BAA2B;IAC3B,yBAAyB;IACzB,+BAA+B;AACjC,GAIM,wBAAwB,CAAC,UAAuD;IACpF,MAAM,EAAC,IAAA,EAAA,GAAQ;QAyBD;IAvBd,OACE,QACA,OAAO,QAAS,YAChB,YAAY,QACZ,UAAU,QACV,UAAU,QACV,QAAQ,QAAA,CAEJ,KAAK,MAAA,KAAW,qBAAA,CAClB,KAAK,MAAA,GAAS,iKAAA,GAGZ,KAAK,EAAA,KAAO,cAAA,CACd,KAAK,EAAA,GAAK,gBAAA,GAGR,KAAK,IAAA,KAAS,cAAA,CAChB,KAAK,IAAA,GAAO,gBAAA,GAGd,KAAK,SAAA,GAAY,KAAK,YAAA,EACtB,OAAO,KAAK,YAAA,EAEZ,KAAK,IAAA,0DAAO,CAAqB,KAAK,IAA2B,CAAA,6FAAK,KAAK,IAAA,GAGtE;AACT,GAEM,2BAA2B,CAAC,mBAAgD;IAChF,MAAM,EAAC,SAAA,EAAW,GAAG,MAAA,GAAQ,gBACvB,UAAU;QAAC,GAAG,IAAA;QAAM,cAAc;IAAA;QAczB;IAZf,OAAI,QAAQ,MAAA,KAAW,iKAAA,IAAA,CACrB,QAAQ,MAAA,GAAS,iBAAA,GAGf,QAAQ,EAAA,KAAO,oBAAA,CACjB,QAAQ,EAAA,GAAK,UAAA,GAGX,QAAQ,IAAA,KAAS,oBAAA,CACnB,QAAQ,IAAA,GAAO,UAAA,GAGjB,QAAQ,IAAA,6DAAO,CAAqB,QAAQ,IAA0B,CAAA,mGAAK,QAAQ,IAAA,EAE/E,QAAQ,IAAA,KAAS,sBAAsB,QAAQ,UAAA,IAAc,CAAC,QAAQ,IAAA,IAAA,CACxE,QAAQ,IAAA,GAAO;QAAC,YAAY,QAAQ,UAAA;IAAA,CAAA,GAAA,CAIpC,QAAQ,IAAA,KAAS,mBACjB,QAAQ,IAAA,KAAS,uBACjB,QAAQ,IAAA,KAAS,eAAA,KAAA,CAEjB,QAAQ,IAAA,GAAO;QAAC,IAAI,QAAQ,YAAA;IAAA,CAAA,GAGvB;AACT,GAEM,wBAAwB,QAE5B,WACS;QAFT,EAAC,OAAA,CAAA,CAAA;IAGD,MAAM,EAAC,OAAA,EAAS,YAAA,EAAA,GAAgB,SAE1B,UAAU,yBAAyB,OAAO,OAAO;IAEvD,QAAQ,OAAA,CAAQ,CAAC,WAAW;QAC1B,OAAO,WAAA,CAAY,SAAS;YAAC;QAAA,CAAa;IAC5C,CAAC;AACH,GAca,4BAA4B,IAAA,CAA0B;QACjE,YAAQ,4KAAA,EAAkB,qBAAqB;QAC/C,oBAAgB,+KAAA,CAAA,GAA0B,OAAA,CAAQ;YAChD,SAAS;gBACP,gBAAgB;YAAA;QAClB,CACD;IACH,CAAA;AC1KO,SAAS,uBAAgC;IAC9C,OAAO,OAAO,IAAA,KAAS,OAAO,GAAA;AAChC;AACO,SAAS,uBAAgC;IAC9C,OAAO,CAAA,CAAQ,OAAO,MAAA;AACxB;AACO,SAAS,sBAA+B;IAC7C,OAAO,qBAAA,KAA0B,qBAAA;AACnC","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/fast-deep-equal/index.js"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"names":[],"mappings":"AAEA,sDAAsD;AAItD,OAAO,OAAO,GAAG,SAAS,MAAM,CAAC,EAAE,CAAC;IAClC,IAAI,MAAM,GAAG,OAAO;IAEpB,IAAI,KAAK,KAAK,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU;QAC1D,IAAI,EAAE,WAAW,KAAK,EAAE,WAAW,EAAE,OAAO;QAE5C,IAAI,QAAQ,GAAG;QACf,IAAI,MAAM,OAAO,CAAC,IAAI;YACpB,SAAS,EAAE,MAAM;YACjB,IAAI,UAAU,EAAE,MAAM,EAAE,OAAO;YAC/B,IAAK,IAAI,QAAQ,QAAQ,GACvB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,OAAO;YACjC,OAAO;QACT;QAIA,IAAI,EAAE,WAAW,KAAK,QAAQ,OAAO,EAAE,MAAM,KAAK,EAAE,MAAM,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK;QACjF,IAAI,EAAE,OAAO,KAAK,OAAO,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,OAAO,EAAE,OAAO;QAC5E,IAAI,EAAE,QAAQ,KAAK,OAAO,SAAS,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,OAAO,EAAE,QAAQ;QAEhF,OAAO,OAAO,IAAI,CAAC;QACnB,SAAS,KAAK,MAAM;QACpB,IAAI,WAAW,OAAO,IAAI,CAAC,GAAG,MAAM,EAAE,OAAO;QAE7C,IAAK,IAAI,QAAQ,QAAQ,GACvB,IAAI,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,OAAO;QAEhE,IAAK,IAAI,QAAQ,QAAQ,GAAI;YAC3B,IAAI,MAAM,IAAI,CAAC,EAAE;YAEjB,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,GAAG,OAAO;QACrC;QAEA,OAAO;IACT;IAEA,oCAAoC;IACpC,OAAO,MAAI,KAAK,MAAI;AACtB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/sanity/lib/_chunks-es/DisplayedDocumentBroadcaster.mjs","sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/loader/DisplayedDocumentBroadcaster.tsx"],"sourcesContent":["/**\n * Report back up the document state being displayed in the document pane,\n * allowing Presentation Tool to patch the live queries with the same state.\n * This makes the Perspective switcher less confusing, as it applies to everything else on the page.\n * It's also why it's possible to select an older revision and see it in the preview,\n * effectively letting you preview a revert action you might be considering to perform.\n */\n\nimport isEqual from 'fast-deep-equal'\nimport {type PropsWithChildren, useCallback, useContext, useEffect} from 'react'\nimport {type SanityDocument} from 'sanity'\nimport {PresentationDisplayedDocumentContext} from 'sanity/_singletons'\n\nimport {type PresentationDisplayedDocumentContextValue} from './types'\n\nexport interface DisplayedDocumentBroadcasterProps extends PropsWithChildren {\n  setDisplayedDocument: React.Dispatch<\n    React.SetStateAction<Partial<SanityDocument> | null | undefined>\n  >\n  documentId: string | null | undefined\n}\n\nexport function DisplayedDocumentBroadcasterProvider(\n  props: DisplayedDocumentBroadcasterProps,\n): React.JSX.Element {\n  const {children, setDisplayedDocument, documentId} = props\n\n  const context = useCallback<PresentationDisplayedDocumentContextValue>(\n    (next) => setDisplayedDocument((prev) => (isEqual(prev, next) ? prev : next)),\n    [setDisplayedDocument],\n  )\n\n  useEffect(() => {\n    // If no document is currently being displayed then reset the state\n    if (documentId) {\n      return undefined\n    }\n    const timeout = setTimeout(() => setDisplayedDocument(null))\n    return () => clearTimeout(timeout)\n  }, [documentId, setDisplayedDocument])\n\n  return (\n    <PresentationDisplayedDocumentContext.Provider value={context}>\n      {children}\n    </PresentationDisplayedDocumentContext.Provider>\n  )\n}\n\nexport function useDisplayedDocumentBroadcaster(): PresentationDisplayedDocumentContextValue | null {\n  return useContext(PresentationDisplayedDocumentContext)\n}\n"],"names":["DisplayedDocumentBroadcasterProvider","props","$","_c","children","setDisplayedDocument","documentId","t0","next","prev","isEqual","context","t1","t2","timeout","setTimeout","clearTimeout","useEffect","t3","useDisplayedDocumentBroadcaster","useContext","PresentationDisplayedDocumentContext"],"mappings":";;;;;;;;;;;;;;;;AAsBO,SAAAA,qCAAAC,KAAAA,EAAA;IAAA,MAAAC,QAAAC,qKAAAA,EAAA,CAAA,GAGL,EAAAC,QAAAA,EAAAC,oBAAAA,EAAAC,UAAAA,EAAAA,GAAqDL;IAAK,IAAAM;IAAAL,CAAAA,CAAAA,EAAAA,KAAAG,uBAAAA,CAGxDE,KAAAC,CAAAA,OAAUH,qBAAoBI,CAAAA,WAAYC,4JAAAA,EAAQD,MAAMD,IAAI,IAAIC,OAAOD,IAAK,GAACN,CAAAA,CAAAA,EAAAA,GAAAG,sBAAAH,CAAAA,CAAAA,EAAAA,GAAAK,EAAAA,IAAAA,KAAAL,CAAAA,CAAA,CAAA,CAAA;IAD/E,MAAAS,UAAgBJ;IAGf,IAAAK,IAAAC;IAAAX,CAAAA,CAAA,CAAA,CAAA,KAAAI,cAAAJ,CAAAA,CAAAA,EAAAA,KAAAG,uBAAAA,CAESO,KAAAA,MAAA;QAAA,IAEJN,YAAU;QAGd,MAAAQ,UAAgBC,WAAAA,IAAiBV,qBAAoB,IAAK,CAAC;QAAC,OAAA,IAC/CW,aAAaF,OAAO;IAAC,GACjCD,KAAA;QAACP;QAAYD,oBAAoB;KAAA,EAACH,CAAAA,CAAAA,EAAAA,GAAAI,YAAAJ,CAAAA,CAAAA,EAAAA,GAAAG,sBAAAH,CAAAA,CAAAA,EAAAA,GAAAU,IAAAV,CAAAA,CAAAA,EAAAA,GAAAW,EAAAA,IAAAA,CAAAD,KAAAV,CAAAA,CAAA,CAAA,CAAA,EAAAW,KAAAX,CAAAA,CAAA,CAAA,CAAA,OAPrCe,0KAAAA,EAAUL,IAOPC,EAAkC;IAAC,IAAAK;IAAA,OAAAhB,CAAAA,CAAA,CAAA,CAAA,KAAAE,YAAAF,CAAAA,CAAAA,EAAAA,KAAAS,UAAAA,CAGpCO,KAAA,aAAA,GAAA,IAAA,6KAAA,EAAA,wLAAA,CAAA,QAAA,EAAA;QAAsDP,OAAAA;QACnDP;IAAAA,CACH,GAAgDF,CAAAA,CAAAA,EAAAA,GAAAE,UAAAF,CAAAA,CAAAA,EAAAA,GAAAS,SAAAT,CAAAA,CAAAA,EAAAA,GAAAgB,EAAAA,IAAAA,KAAAhB,CAAAA,CAAA,CAAA,CAAA,EAFhDgB;AAEgD;AAI7C,SAAAC,kCAAA;IAAA,WACEC,2KAAAA,EAAAC,wLAA+C;AAAC","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/node_modules/uuid/dist/esm-browser/native.js"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n"],"names":[],"mappings":";;;;AAAA,MAAM,aAAa,OAAO,WAAW,eAAe,OAAO,UAAU,IAAI,OAAO,UAAU,CAAC,IAAI,CAAC;uCACjF;IAAE;AAAW","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/node_modules/uuid/dist/esm-browser/rng.js"],"sourcesContent":["let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n"],"names":[],"mappings":";;;;AAAA,IAAI;AACJ,MAAM,QAAQ,IAAI,WAAW;AACd,SAAS;IACpB,IAAI,CAAC,iBAAiB;QAClB,IAAI,OAAO,WAAW,eAAe,CAAC,OAAO,eAAe,EAAE;YAC1D,MAAM,IAAI,MAAM;QACpB;QACA,kBAAkB,OAAO,eAAe,CAAC,IAAI,CAAC;IAClD;IACA,OAAO,gBAAgB;AAC3B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/node_modules/uuid/dist/esm-browser/regex.js"],"sourcesContent":["export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;\n"],"names":[],"mappings":";;;;uCAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/node_modules/uuid/dist/esm-browser/validate.js"],"sourcesContent":["import REGEX from './regex.js';\nfunction validate(uuid) {\n    return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;\n"],"names":[],"mappings":";;;;AAAA;;AACA,SAAS,SAAS,IAAI;IAClB,OAAO,OAAO,SAAS,YAAY,+LAAK,CAAC,IAAI,CAAC;AAClD;uCACe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/node_modules/uuid/dist/esm-browser/stringify.js"],"sourcesContent":["import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n"],"names":[],"mappings":";;;;;;AAAA;;AACA,MAAM,YAAY,EAAE;AACpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,EAAE,EAAG;IAC1B,UAAU,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE,QAAQ,CAAC,IAAI,KAAK,CAAC;AAClD;AACO,SAAS,gBAAgB,GAAG;QAAE,SAAA,iEAAS;IAC1C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC9B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,EAAE,WAAW;AAChD;AACA,SAAS,UAAU,GAAG;QAAE,SAAA,iEAAS;IAC7B,MAAM,OAAO,gBAAgB,KAAK;IAClC,IAAI,CAAC,IAAA,kMAAQ,EAAC,OAAO;QACjB,MAAM,UAAU;IACpB;IACA,OAAO;AACX;uCACe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AACA,SAAS,GAAG,OAAO,EAAE,GAAG,EAAE,MAAM;QAKG;IAJ/B,IAAI,gMAAM,CAAC,UAAU,IAAI,CAAC,OAAO,CAAC,SAAS;QACvC,OAAO,gMAAM,CAAC,UAAU;IAC5B;IACA,UAAU,WAAW,CAAC;QACT,iBAAA;IAAb,MAAM,OAAO,CAAA,OAAA,CAAA,kBAAA,QAAQ,MAAM,cAAd,6BAAA,mBAAkB,eAAA,QAAQ,GAAG,cAAX,mCAAA,kBAAA,sBAAlB,kBAAA,OAAqC,IAAA,6LAAG;IACrD,IAAI,KAAK,MAAM,GAAG,IAAI;QAClB,MAAM,IAAI,MAAM;IACpB;IACA,IAAI,CAAC,EAAE,GAAG,AAAC,IAAI,CAAC,EAAE,GAAG,OAAQ;IAC7B,IAAI,CAAC,EAAE,GAAG,AAAC,IAAI,CAAC,EAAE,GAAG,OAAQ;IAC7B,IAAI,KAAK;QACL,SAAS,UAAU;QACnB,IAAI,SAAS,KAAK,SAAS,KAAK,IAAI,MAAM,EAAE;YACxC,MAAM,IAAI,WAAW,AAAC,mBAA4B,OAAV,QAAO,KAAe,OAAZ,SAAS,IAAG;QAClE;QACA,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,EAAG;YACzB,GAAG,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,EAAE;QAC7B;QACA,OAAO;IACX;IACA,OAAO,IAAA,2MAAe,EAAC;AAC3B;uCACe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/framer-motion/dist/es/components/MotionConfig/index.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, useMemo } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { loadExternalIsValidProp } from '../../render/dom/utils/filter-props.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig({ children, isValidProp, ...config }) {\n    isValidProp && loadExternalIsValidProp(isValidProp);\n    /**\n     * Inherit props from any parent MotionConfig components\n     */\n    config = { ...useContext(MotionConfigContext), ...config };\n    /**\n     * Don't allow isStatic to change between renders as it affects how many hooks\n     * motion components fire.\n     */\n    config.isStatic = useConstant(() => config.isStatic);\n    /**\n     * Creating a new config context object will re-render every `motion` component\n     * every time it renders. So we only want to create a new one sparingly.\n     */\n    const context = useMemo(() => config, [\n        JSON.stringify(config.transition),\n        config.transformPagePoint,\n        config.reducedMotion,\n    ]);\n    return (jsx(MotionConfigContext.Provider, { value: context, children: children }));\n}\n\nexport { MotionConfig };\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;AAOA;;;;;;;;;;;;;;;;CAgBC,GACD,SAAS,aAAa,KAAoC;QAApC,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,QAAQ,GAApC;IAClB,eAAe,IAAA,0NAAuB,EAAC;IACvC;;KAEC,GACD,SAAS;QAAE,GAAG,IAAA,2KAAU,EAAC,2MAAmB,CAAC;QAAE,GAAG,MAAM;IAAC;IACzD;;;KAGC,GACD,OAAO,QAAQ,GAAG,IAAA,6LAAW;oCAAC,IAAM,OAAO,QAAQ;;IACnD;;;KAGC,GACD,MAAM,UAAU,IAAA,wKAAO;yCAAC,IAAM;wCAAQ;QAClC,KAAK,SAAS,CAAC,OAAO,UAAU;QAChC,OAAO,kBAAkB;QACzB,OAAO,aAAa;KACvB;IACD,OAAQ,IAAA,6KAAG,EAAC,2MAAmB,CAAC,QAAQ,EAAE;QAAE,OAAO;QAAS,UAAU;IAAS;AACnF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@sanity/preview-url-secret/dist/without-secret-search-params.js","sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/%40sanity/preview-url-secret/src/withoutSecretSearchParams.ts"],"sourcesContent":["import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n} from './constants'\n\n/** @alpha */\nexport function withoutSecretSearchParams(url: URL): URL {\n  const newUrl = new URL(url)\n  const {searchParams} = newUrl\n  searchParams.delete(urlSearchParamPreviewPathname)\n  searchParams.delete(urlSearchParamPreviewSecret)\n  searchParams.delete(urlSearchParamPreviewPerspective)\n  searchParams.delete(urlSearchParamVercelProtectionBypass)\n  searchParams.delete(urlSearchParamVercelSetBypassCookie)\n  return newUrl\n}\n\n/** @alpha */\nexport function hasSecretSearchParams(url: URL): boolean {\n  return url.searchParams.has(urlSearchParamPreviewSecret)\n}\n\n/** @alpha */\nexport function setSecretSearchParams(\n  url: URL,\n  secret: string | null,\n  redirectTo: string,\n  perspective: string,\n): URL {\n  const newUrl = new URL(url)\n  const {searchParams} = newUrl\n  // Preview secrets are added when preview mode is setup with an `enable` endpoint\n  if (secret) {\n    searchParams.set(urlSearchParamPreviewSecret, secret)\n    searchParams.set(urlSearchParamPreviewPathname, redirectTo)\n  }\n  // Always set the perspective that's being used\n  searchParams.set(urlSearchParamPreviewPerspective, perspective)\n\n  return newUrl\n}\n"],"names":[],"mappings":";;;;;;;;;;AASO,SAAS,0BAA0B,GAAA,EAAe;IACvD,MAAM,SAAS,IAAI,IAAI,GAAG,GACpB,EAAC,YAAA,EAAA,GAAgB;IACvB,OAAA,aAAa,MAAA,CAAO,6MAA6B,GACjD,aAAa,MAAA,CAAO,2MAA2B,GAC/C,aAAa,MAAA,CAAO,gNAAgC,GACpD,aAAa,MAAA,CAAO,oNAAoC,GACxD,aAAa,MAAA,CAAO,mNAAmC,GAChD;AACT;AAGO,SAAS,sBAAsB,GAAA,EAAmB;IACvD,OAAO,IAAI,YAAA,CAAa,GAAA,CAAI,2MAA2B;AACzD;AAGO,SAAS,sBACd,GAAA,EACA,MAAA,EACA,UAAA,EACA,WAAA,EACK;IACL,MAAM,SAAS,IAAI,IAAI,GAAG,GACpB,EAAC,YAAA,EAAA,GAAgB;IAEvB,OAAI,UAAA,CACF,aAAa,GAAA,CAAI,2MAAA,EAA6B,MAAM,GACpD,aAAa,GAAA,CAAI,6MAAA,EAA+B,UAAU,CAAA,GAG5D,aAAa,GAAA,CAAI,gNAAA,EAAkC,WAAW,GAEvD;AACT","debugId":null}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@sanity/preview-url-secret/dist/_chunks-es/generateSecret.js","sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/%40sanity/preview-url-secret/src/generateSecret.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/** @internal */\nexport function generateUrlSecret(): string {\n  // Try using WebCrypto if available\n  if (typeof crypto !== 'undefined') {\n    // Generate a random array of 16 bytes\n    const array = new Uint8Array(16)\n    crypto.getRandomValues(array)\n\n    // Convert the array to a URL-safe string\n    let key = ''\n    for (let i = 0; i < array.length; i++) {\n      // Convert each byte to a 2-digit hexadecimal number\n      key += array[i]!.toString(16).padStart(2, '0')\n    }\n\n    // Replace '+' and '/' from base64url to '-' and '_'\n    key = btoa(key).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/[=]+$/, '')\n\n    return key\n  }\n  // If not fallback to Math.random\n  return Math.random().toString(36).slice(2)\n}\n"],"names":[],"mappings":";;;;AAEO,SAAS,oBAA4B;IAE1C,IAAI,OAAO,SAAW,KAAa;QAEjC,MAAM,QAAQ,IAAI,WAAW,EAAE;QAC/B,OAAO,eAAA,CAAgB,KAAK;QAG5B,IAAI,MAAM;QACV,IAAA,IAAS,IAAI,GAAG,IAAI,MAAM,MAAA,EAAQ,IAEhC,OAAO,KAAA,CAAM,CAAC,CAAA,CAAG,QAAA,CAAS,EAAE,EAAE,QAAA,CAAS,GAAG,GAAG;QAI/C,OAAA,MAAM,KAAK,GAAG,EAAE,OAAA,CAAQ,OAAO,GAAG,EAAE,OAAA,CAAQ,OAAO,GAAG,EAAE,OAAA,CAAQ,SAAS,EAAE,GAEpE;IACT;IAEA,OAAO,KAAK,MAAA,GAAS,QAAA,CAAS,EAAE,EAAE,KAAA,CAAM,CAAC;AAC3C","debugId":null}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@sanity/preview-url-secret/dist/toggle-preview-access-sharing.js","sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/%40sanity/preview-url-secret/src/togglePreviewAccessSharing.ts"],"sourcesContent":["import type {SanityClient} from '@sanity/client'\nimport {schemaIdSingleton as _id, schemaTypeSingleton as _type, apiVersion, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function enablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<{secret: string}> {\n  const client = _client.withConfig({apiVersion})\n  const newSecret = generateUrlSecret()\n  const patch = client.patch(_id).set({secret: newSecret, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n\n  return {secret: newSecret}\n}\n\n/** @internal */\nexport async function disablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<void> {\n  const client = _client.withConfig({apiVersion})\n  const patch = client.patch(_id).set({secret: null, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n}\n\nexport type {SanityClientLike}\n"],"names":["_id","_type"],"mappings":";;;;;;;;;;AAMA,eAAsB,2BACpB,OAAA,EACA,MAAA,EACA,SAAA,EACA,MAAA,EAC2B;IAC3B,MAAM,SAAS,QAAQ,UAAA,CAAW;oBAAC,0LAAA;IAAA,CAAW,GACxC,gBAAY,uNAAA,KACZ,QAAQ,OAAO,KAAA,CAAMA,iMAAG,EAAE,GAAA,CAAI;QAAC,QAAQ;QAAW;QAAW;IAAA,CAAO;IAC1E,OAAA,MAAM,OACH,WAAA,GACA,iBAAA,CAAkB;QAAA,KAACA,iMAAAA;QAAA,OAAKC,mMAAAA;QAAO;QAAQ;QAAW;IAAA,CAAO,EACzD,KAAA,CAAM,KAAK,EACX,MAAA,CAAO;aAAC,mLAAA;IAAA,CAAI,GAER;QAAC,QAAQ;IAAA;AAClB;AAGA,eAAsB,4BACpB,OAAA,EACA,MAAA,EACA,SAAA,EACA,MAAA,EACe;IACf,MAAM,SAAS,QAAQ,UAAA,CAAW;oBAAC,0LAAA;IAAA,CAAW,GACxC,QAAQ,OAAO,KAAA,CAAMD,iMAAG,EAAE,GAAA,CAAI;QAAC,QAAQ;QAAM;QAAW;IAAA,CAAO;IACrE,MAAM,OACH,WAAA,CAAA,EACA,iBAAA,CAAkB;QAAA,KAACA,iMAAAA;QAAA,OAAKC,mMAAAA;QAAO;QAAQ;QAAW;IAAA,CAAO,EACzD,KAAA,CAAM,KAAK,EACX,MAAA,CAAO;aAAC,mLAAA;IAAA,CAAI;AACjB","debugId":null}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/path-to-regexp/dist.es2015/index.js","sourceRoot":"","sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/path-to-regexp/src/index.ts"],"sourcesContent":["/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 903, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@sanity/preview-url-secret/dist/create-secret.js","sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/%40sanity/preview-url-secret/src/createPreviewSecret.ts"],"sourcesContent":["import type {SanityClient} from '@sanity/client'\nimport {uuid} from '@sanity/uuid'\nimport {apiVersion, deleteExpiredSecretsQuery, schemaType, SECRET_TTL, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function createPreviewSecret(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n  id = uuid(),\n): Promise<{secret: string; expiresAt: Date}> {\n  const client = _client.withConfig({apiVersion})\n\n  try {\n    const expiresAt = new Date(Date.now() + 1000 * SECRET_TTL)\n    const _id = `drafts.${id}`\n    const newSecret = generateUrlSecret()\n    const patch = client.patch(_id).set({secret: newSecret, source, studioUrl, userId})\n    await client.transaction().createOrReplace({_id, _type: schemaType}).patch(patch).commit({tag})\n\n    return {secret: newSecret, expiresAt}\n  } finally {\n    try {\n      // Garbage collect expired secrets\n      await client.delete({query: deleteExpiredSecretsQuery})\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Failed to delete expired secrets', err)\n    }\n  }\n}\n\nexport type {SanityClientLike}\n"],"names":[],"mappings":";;;;;;;;;;AAOA,eAAsB,oBACpB,OAAA,EACA,MAAA,EACA,SAAA,EACA,MAAA;aACA,qEAAK,kMAAA,IACuC;IAC5C,MAAM,SAAS,QAAQ,UAAA,CAAW;oBAAC,0LAAA;IAAA,CAAW;IAE9C,IAAI;QACF,MAAM,YAAY,IAAI,KAAK,KAAK,GAAA,CAAA,IAAQ,MAAO,0LAAU,GACnD,MAAM,UAAY,OAAF,EAAE,GAClB,gBAAY,uNAAA,CAAA,IACZ,QAAQ,OAAO,KAAA,CAAM,GAAG,EAAE,GAAA,CAAI;YAAC,QAAQ;YAAW;YAAQ;YAAW;QAAA,CAAO;QAClF,OAAA,MAAM,OAAO,WAAA,GAAc,eAAA,CAAgB;YAAC;YAAK,OAAO,0LAAA;QAAA,CAAW,EAAE,KAAA,CAAM,KAAK,EAAE,MAAA,CAAO;iBAAC,mLAAA;QAAA,CAAI,GAEvF;YAAC,QAAQ;YAAW;QAAA;IAC7B,SAAA;QACE,IAAI;YAEF,MAAM,OAAO,MAAA,CAAO;gBAAC,OAAO,yMAAA;YAAA,CAA0B;QACxD,EAAA,OAAS,KAAK;YAEZ,QAAQ,KAAA,CAAM,oCAAoC,GAAG;QACvD;IACF;AACF","debugId":null}},
    {"offset": {"line": 950, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/@sanity/preview-url-secret/dist/toggle-vercel-protection-bypass.js","sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/%40sanity/preview-url-secret/src/toggleVercelProtectionBypass.ts"],"sourcesContent":["import type {SanityClient, SyncTag} from '@sanity/client'\nimport {\n  vercelProtectionBypassSchemaId as _id,\n  vercelProtectionBypassSchemaType as _type,\n  fetchVercelProtectionBypassSecret,\n  tag,\n} from './constants'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function enableVercelProtectionBypass(\n  client: SanityClient,\n  secret: string,\n): Promise<void> {\n  const patch = client.patch(_id).set({secret})\n  await client.transaction().createIfNotExists({_id, _type}).patch(patch).commit({tag})\n}\n\n/** @internal */\nexport async function disableVercelProtectionBypass(client: SanityClient): Promise<void> {\n  const patch = client.patch(_id).set({secret: null})\n  await client.transaction().createIfNotExists({_id, _type}).patch(patch).commit({tag})\n}\n\n/** @internal */\nexport function subcribeToVercelProtectionBypass(\n  client: SanityClient,\n  onChange: (secret: string | null) => void,\n): () => void {\n  let controller = new AbortController()\n  let usedTags: SyncTag[] = []\n  async function fetchSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n    const {result, syncTags} = await client.fetch<string | null>(\n      fetchVercelProtectionBypassSecret,\n      {},\n      {\n        filterResponse: false,\n        lastLiveEventId,\n        tag: 'preview-url-secret.fetch-vercel-bypass-protection-secret',\n      },\n    )\n    if (Array.isArray(syncTags)) {\n      usedTags = syncTags\n    }\n    if (!signal.aborted) {\n      onChange(result)\n    }\n  }\n  const subscription = client.live.events().subscribe({\n    next: (event) => {\n      if (event.type === 'message') {\n        controller.abort()\n        controller = new AbortController()\n        if (event.tags.some((tag) => usedTags.includes(tag))) {\n          fetchSecret(event.id, controller.signal)\n        }\n      }\n    },\n    // eslint-disable-next-line no-console\n    error: (reason) => console.error(reason),\n  })\n\n  fetchSecret(null, controller.signal)\n\n  return () => {\n    subscription.unsubscribe()\n    controller.abort()\n  }\n}\n\nexport type {SanityClientLike}\n"],"names":["_id","_type","tag"],"mappings":";;;;;;;;;;AAUA,eAAsB,6BACpB,MAAA,EACA,MAAA,EACe;IACf,MAAM,QAAQ,OAAO,KAAA,CAAMA,8MAAG,EAAE,GAAA,CAAI;QAAC;IAAA,CAAO;IAC5C,MAAM,OAAO,WAAA,CAAA,EAAc,iBAAA,CAAkB;QAAA,KAACA,8MAAAA;QAAA,OAAKC,gNAAAA;IAAAA,CAAM,EAAE,KAAA,CAAM,KAAK,EAAE,MAAA,CAAO;aAAC,mLAAA;IAAA,CAAI;AACtF;AAGA,eAAsB,8BAA8B,MAAA,EAAqC;IACvF,MAAM,QAAQ,OAAO,KAAA,CAAMD,8MAAG,EAAE,GAAA,CAAI;QAAC,QAAQ;IAAA,CAAK;IAClD,MAAM,OAAO,WAAA,CAAA,EAAc,iBAAA,CAAkB;QAAA,KAACA,8MAAAA;QAAA,OAAKC,gNAAAA;IAAAA,CAAM,EAAE,KAAA,CAAM,KAAK,EAAE,MAAA,CAAO;aAAC,mLAAA;IAAA,CAAI;AACtF;AAGO,SAAS,iCACd,MAAA,EACA,QAAA,EACY;IACZ,IAAI,aAAa,IAAI,gBAAA,GACjB,WAAsB,CAAA,CAAA;IAC1B,eAAe,YAAY,eAAA,EAAgC,MAAA,EAAqB;QAC9E,MAAM,EAAC,MAAA,EAAQ,QAAA,EAAA,GAAY,MAAM,OAAO,KAAA,CACtC,iNAAA,EACA,CAAA,GACA;YACE,gBAAgB,CAAA;YAChB;YACA,KAAK;QAAA;QAGL,MAAM,OAAA,CAAQ,QAAQ,KAAA,CACxB,WAAW,QAAA,GAER,OAAO,OAAA,IACV,SAAS,MAAM;IAEnB;IACA,MAAM,eAAe,OAAO,IAAA,CAAK,MAAA,CAAA,EAAS,SAAA,CAAU;QAClD,MAAM,CAAC,UAAU;YACX,MAAM,IAAA,KAAS,aAAA,CACjB,WAAW,KAAA,CAAA,GACX,aAAa,IAAI,gBAAA,GACb,MAAM,IAAA,CAAK,IAAA,CAAK,CAACC,OAAQ,SAAS,QAAA,CAASA,IAAG,CAAC,KACjD,YAAY,MAAM,EAAA,EAAI,WAAW,MAAM,CAAA;QAG7C;QAAA,sCAAA;QAEA,OAAO,CAAC,SAAW,QAAQ,KAAA,CAAM,MAAM;IAAA,CACxC;IAED,OAAA,YAAY,MAAM,WAAW,MAAM,GAE5B,MAAM;QACX,aAAa,WAAA,CAAA,GACb,WAAW,KAAA,CAAA;IACb;AACF","debugId":null}},
    {"offset": {"line": 1009, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/sanity/lib/_chunks-es/PresentationToolGrantsCheck.mjs","sources":["file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/features/PostMessageFeatures.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/machines/presentation-machine.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/overlays/SharedStateProvider.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/panels/Panel.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/util/debounce.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/panels/usePanelsStorage.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/panels/util.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/panels/Panels.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/components/ErrorCard.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/paneRouter/ChildLink.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/paneRouter/ReferenceChildLink.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/paneRouter/PresentationPaneRouterProvider.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/editor/DocumentListPane.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/editor/DocumentPane.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/editor/DocumentPanel.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/editor/usePreviewState.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/editor/ContentEditor.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/panels/usePanelId.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/panels/PanelResizer.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/PresentationContent.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/PresentationNavigateProvider.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/useLocalState.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/PresentationNavigator.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/PresentationParamsProvider.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/PresentationProvider.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/useAllowPatterns.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/util/encodeStudioPerspective.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/useId.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/preview/IFrame.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/preview/OpenPreviewButton.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/useTargetOrigin.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/preview/PreviewLocationInput.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/preview/SharePreviewMenu.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/preview/PreviewHeader.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/preview/Preview.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/util/warnOnce.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/useDocumentsOnPage.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/useMainDocument.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/util/parse.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/useParams.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/usePopups.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/usePresentationPerspective.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/useStatus.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/PresentationTool.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/actors/create-preview-secret.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/actors/read-shared-secret.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/actors/resolve-allow-patterns.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/actors/resolve-initial-url.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/actors/resolve-preview-mode.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/actors/resolve-preview-mode-url.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/actors/resolve-url-from-preview-search-param.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/machines/preview-url.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/usePreviewUrlActorRef.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/useReportInvalidPreviewSearchParam.tsx","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/useVercelBypassSecret.ts","file:///Users/tamra/Desktop/Katyusha-ecommerce/ecommerce-build/node_modules/sanity/src/presentation/PresentationToolGrantsCheck.tsx"],"sourcesContent":["import {type FC, memo, useEffect} from 'react'\n\nimport {type VisualEditingConnection} from '../types'\n\nexport interface PostMessagePreviewsProps {\n  comlink: VisualEditingConnection\n}\n\nconst PostMessageFeatures: FC<PostMessagePreviewsProps> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    return comlink.on('visual-editing/features', () => ({\n      features: {\n        optimistic: true,\n      },\n    }))\n  }, [comlink])\n\n  return null\n}\n\nexport default memo(PostMessageFeatures)\n","import {type ActorRefFrom, assign, setup} from 'xstate'\n\ninterface Context {\n  url: URL | null\n  error: Error | null\n  visualEditingOverlaysEnabled: boolean\n}\n\ntype Event =\n  | {type: 'toggle visual editing overlays'; enabled: boolean}\n  | {type: 'iframe loaded'}\n  | {type: 'iframe refresh'}\n  | {type: 'iframe reload'}\n\nexport const presentationMachine = setup({\n  types: {} as {\n    context: Context\n    events: Event\n    tags: 'busy' | 'error'\n  },\n  actions: {\n    //\n  },\n  actors: {\n    //\n  },\n  guards: {\n    //\n  },\n}).createMachine({\n  // eslint-disable-next-line tsdoc/syntax\n  /** @xstate-layout N4IgpgJg5mDOIC5QAUBOcwDsAuBDbAlgPaYAEAKkUQDYDEBAZqrgLZinrVG4QDaADAF1EoAA5FYBQiREgAHogAsAJgA0IAJ6IAHAEYAdIoCcJowFY9R-vzPLlAX3vq0GHPmJlKNfVx4FMUPRMrOy+EJACwkgg4pLSmLIKCLoAbIr6Zoop2tqKAMxpJnnF6loIZkbK+uZ5umapKXmK-Cm6js7osFh48RRU1D7c4RC02ERQUNTsAG4EsACuuNSkkFL+UKRE02Co1LgasJGysWsy0UnaZinVyrpGAOx1Rim2efeliPe3hma1Zvy6XT8W4OJwgFxdNy9LwDMKQILMNgcMBMOAACyO0RO8USiAK930LWU-3uiiB9yaKXemkQjW01V+txS-GKqUe7XBnW67hIfW8cJGjER7E4Q0xYgkpwS5zxVMJKWJ-FJ5Mp1LKFn4Pz+DSaLTaYIh3Oh-UGPEg+nQqNgaPWCJCpAF4pikpxMoQKWZ+gp+TSZLy1hSH3deXpNSZLNqVP1HVcPQ8fNhQ3Nor8ATtSMdQmOLo8uPdnu9BUUfoDQY1WrqOuarUcYMwRHC8Gihqh8Zh2biubdAFpAzSEL2OS247yYfodqgiKgO1K8yog7ptATFL9dFljMDrHkh1zW6OTWF1jPXaAkmY1YgKnktfxtC9dPd+Io9DvYzzPAekxBj13T3i7vKirKkqqpBsYVQ1HUFjFs0t6KK+kIjh+-JfvoBAQFMP5nH+CDaMo16KjYyjMvUNh5GWOT6MoLL8A8ygrk0dQIUabafmaEAWiinQ2gEWHSjhjJUYuj73Pcd63noQaNEYFb-Dk2S0cxe7IYm7GcYevFYjm2HyJeeQQb8tFkikVjGNoFGajUt73o+z61vYQA */\n  id: 'Presentation Tool',\n  context: {\n    url: null,\n    error: null,\n    visualEditingOverlaysEnabled: false,\n  },\n\n  on: {\n    'iframe reload': {\n      actions: assign({url: null}),\n      target: '.loading',\n    },\n  },\n\n  states: {\n    error: {\n      description:\n        'Failed to load, either because of a misconfiguration, a network error, or an unexpected error',\n      tags: ['error'],\n    },\n    loading: {\n      on: {\n        'iframe loaded': {\n          target: 'loaded',\n        },\n      },\n      tags: ['busy'],\n    },\n    loaded: {\n      on: {\n        'toggle visual editing overlays': {\n          actions: assign({\n            visualEditingOverlaysEnabled: ({event}) => event.enabled,\n          }),\n        },\n        'iframe refresh': {\n          target: '.refreshing',\n        },\n        'iframe reload': {\n          target: '.reloading',\n        },\n      },\n\n      states: {\n        idle: {},\n        refreshing: {\n          on: {\n            'iframe loaded': {\n              target: 'idle',\n            },\n          },\n          tags: ['busy'],\n        },\n        reloading: {\n          on: {\n            'iframe loaded': {\n              target: 'idle',\n            },\n          },\n          tags: ['busy'],\n        },\n      },\n      initial: 'idle',\n    },\n  },\n  initial: 'loading',\n})\n\nexport type PresentationMachineRef = ActorRefFrom<typeof presentationMachine>\n","import {type Serializable, type SerializableObject} from '@sanity/presentation-comlink'\nimport {\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react'\nimport {PresentationSharedStateContext} from 'sanity/_singletons'\n\nimport {type VisualEditingConnection} from '../types'\nimport {type PresentationSharedStateContextValue} from './types'\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink: VisualEditingConnection | null\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const sharedState = useRef<SerializableObject>({})\n\n  useEffect(() => {\n    return comlink?.on('visual-editing/shared-state', () => {\n      return {state: sharedState.current}\n    })\n  }, [comlink])\n\n  const setValue = useCallback(\n    (key: string, value: Serializable) => {\n      sharedState.current[key] = value\n      comlink?.post('presentation/shared-state', {key, value})\n    },\n    [comlink],\n  )\n\n  const removeValue = useCallback(\n    (key: string) => {\n      comlink?.post('presentation/shared-state', {key})\n      delete sharedState.current[key]\n    },\n    [comlink],\n  )\n\n  const context = useMemo<PresentationSharedStateContextValue>(\n    () => ({removeValue, setValue}),\n    [removeValue, setValue],\n  )\n\n  return (\n    <PresentationSharedStateContext.Provider value={context}>\n      {children}\n    </PresentationSharedStateContext.Provider>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useContext, useLayoutEffect} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const {getPanelStyle, registerElement, unregisterElement} = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, defaultSize, order, maxWidth, minWidth, registerElement, unregisterElement])\n\n  return <Root style={style}>{children}</Root>\n}\n","export function debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import {useMemo} from 'react'\n\nimport {debounce} from '../util/debounce'\nimport {type PanelElement} from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[] | undefined\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return Array.isArray(stored[key]) && stored[key].some((val) => val === null)\n        ? undefined\n        : stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","/* eslint-disable @typescript-eslint/no-shadow,no-eq-null */\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\n\nfunction getNextWidth(panel: PanelElement, nextWidth: number, containerWidth: number) {\n  const {maxWidth: maxWidthPx, minWidth: minWidthPx} = panel\n  const maxWidth = maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\n// eslint-disable-next-line max-params\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const {panels, widths: prevWidths} = panelsState\n  const {widths: initialWidths} = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(pivotPanel, width + Math.abs(delta), containerWidth)\n    if (width === nextWidth) {\n      return widths\n    }\n    delta = delta < 0 ? width - nextWidth : nextWidth - width\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(panel, width - deltaRemaining, containerWidth)\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied.toPrecision(10).localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n          numeric: true,\n        }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else if (++index >= panels.length) {\n      break\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(panels: PanelElement[], id: string, widths: number[]): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(element: PanelElement | ResizerElement): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(element: PanelElement | ResizerElement): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(elements: ElementMap): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({order: a}, {order: b}) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let {maxWidth, minWidth} = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        // eslint-disable-next-line no-negated-condition\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal -= panel.defaultSize\n      panelsWithoutWidth -= 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\nimport {usePanelsStorage} from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({children}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(() => getSortedElements(elements).filter(isPanel), [elements])\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback((id: string, data: PanelElement | ResizerElement) => {\n    setElements((prev) => {\n      if (prev.has(id)) return prev\n      const next = new Map(prev)\n      next.set(id, data)\n      return next\n    })\n  }, [])\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {containerWidth, dragOffset, panelBefore, panelAfter, resizerRect} = dragRef.current\n\n      // eslint-disable-next-line no-eq-null\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const {widths: prevWidths} = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const {widths} = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(panels, storedWidths, window.innerWidth)\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const {panels, widths: prevWidths} = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PresentationPanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PresentationPanelsContext.Provider>\n  )\n}\n","import {Box, Card, type CardProps, Container, Flex, Inline, Stack, Text} from '@sanity/ui'\nimport {type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): React.JSX.Element {\n  const {children, message, onRetry, onContinueAnyway, ...restProps} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const retryButton = (\n    <Button mode=\"ghost\" onClick={onRetry} text={t('error-card.retry-button.text')} />\n  )\n  const continueAnywayButton = (\n    <Button\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text={t('error-card.continue-button.text')}\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                {t('error-card.title')}\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","import {forwardRef} from 'react'\nimport {StateLink} from 'sanity/router'\nimport {type ChildLinkProps} from 'sanity/structure'\n\nimport {type PresentationSearchParams} from '../types'\n\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps & {\n    childType: string\n    searchParams: PresentationSearchParams\n  },\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {childId, childType, childPayload, childParameters, searchParams, ...rest} = props\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        id: childId,\n        type: childType,\n        _searchParams: Object.entries({...searchParams, ...childParameters}),\n      }}\n    />\n  )\n})\n","import {forwardRef} from 'react'\nimport {pathToString} from 'sanity'\nimport {type ReferenceChildLinkProps} from 'sanity/structure'\n\nimport {type PresentationSearchParams} from '../types'\nimport {ChildLink} from './ChildLink'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {documentId, documentType, parentRefPath, template, searchParams, ...rest} = props\n\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childType={documentType}\n      childPayload={template?.params}\n      childParameters={{\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n      searchParams={searchParams}\n    />\n  )\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {forwardRef, type PropsWithChildren, useCallback, useMemo} from 'react'\nimport {getPublishedId, useUnique} from 'sanity'\nimport {StateLink, useRouter} from 'sanity/router'\nimport {\n  type BackLinkProps,\n  type ChildLinkProps,\n  PaneRouterContext,\n  type PaneRouterContextValue,\n  type ReferenceChildLinkProps,\n} from 'sanity/structure'\n\nimport {\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {ChildLink} from './ChildLink'\nimport {ReferenceChildLink} from './ReferenceChildLink'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(nextParams: Record<string, string | undefined>) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParamsContextValue> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return {...obj, [key]: value}\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {searchParams, ...restProps} = props\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nexport type PresentationPaneRouterProviderProps = PropsWithChildren<{\n  onEditReference: PresentationNavigate\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs?: {_id: string; _type: string}[]\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}>\n\nexport function PresentationPaneRouterProvider(\n  props: PresentationPaneRouterProviderProps,\n): React.JSX.Element {\n  const {children, onEditReference, onStructureParams, structureParams, searchParams, refs} = props\n\n  const {state: routerState, resolvePathFromState} = useRouter()\n\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const path = resolvePathFromState(routerState)\n      const qs = resolveQueryStringFromParams({\n        ...routerSearchParams,\n        ...nextParams,\n      })\n      return `${path}${qs}`\n    },\n    [resolvePathFromState, routerSearchParams, routerState],\n  )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      // oxlint-disable-next-line no-explicit-any\n      params: structureParams as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: forwardRef<HTMLAnchorElement, ChildLinkProps>(\n        function ContextChildLink(childLinkProps, ref) {\n          const {childId, ...rest} = childLinkProps\n          const doc = refs?.find((r) => r._id === childId || getPublishedId(r._id) === childId)\n\n          if (!doc) {\n            console.warn(`ChildLink: No document found for childId \"${childId}\"`)\n            return null\n          }\n\n          return (\n            <ChildLink\n              {...rest}\n              ref={ref}\n              childId={childId}\n              childType={doc._type}\n              searchParams={searchParams}\n            />\n          )\n        },\n      ),\n      BackLink: forwardRef<HTMLAnchorElement, BackLinkProps>(\n        function ContextBackLink(backLinkProps, ref) {\n          return <BackLink {...backLinkProps} ref={ref} searchParams={searchParams} />\n        },\n      ),\n      ReferenceChildLink: forwardRef<HTMLAnchorElement, ReferenceChildLinkProps>(\n        function ContextReferenceChildLink(childLinkProps, ref) {\n          return <ReferenceChildLink {...childLinkProps} ref={ref} searchParams={searchParams} />\n        },\n      ),\n      ParameterizedLink: () => {\n        throw new Error('ParameterizedLink not implemented')\n      },\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        const {id, template, type, parentRefPath, version} = options\n        onEditReference({\n          state: {id, type},\n          params: {\n            template: template.id,\n            parentRefPath: pathToString(parentRefPath),\n            version,\n          },\n        })\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: onStructureParams,\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [\n    createPathWithParams,\n    onEditReference,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  ])\n\n  return <PaneRouterContext.Provider value={context}>{children}</PaneRouterContext.Provider>\n}\n","import {Card, Code, Flex, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {getPublishedId, useTranslation} from 'sanity'\nimport {\n  DocumentListPane as StructureDocumentListPane,\n  PaneLayout,\n  type PaneNode,\n  StructureToolProvider,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {PresentationPaneRouterProvider} from '../paneRouter/PresentationPaneRouterProvider'\nimport {\n  type MainDocumentState,\n  type PresentationNavigate,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  mainDocumentState?: MainDocumentState\n  onEditReference: PresentationNavigate\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  refs: {_id: string; _type: string}[]\n}): React.JSX.Element {\n  const {mainDocumentState, onEditReference, onStructureParams, searchParams, refs} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const ids = useMemo(\n    () =>\n      refs\n        .filter((r) => getPublishedId(r._id) !== mainDocumentState?.document?._id)\n        .map((r) => getPublishedId(r._id)),\n    [mainDocumentState, refs],\n  )\n\n  const pane: Extract<PaneNode, {type: 'documentList'}> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: {ids},\n        // defaultOrdering: [{field: '_updatedAt', direction: 'desc'}],\n      },\n      schemaTypeName: '',\n      title: t('document-list-pane.document-list.title'),\n      type: 'documentList',\n    }),\n    [ids, t],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [structureParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-list-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            onEditReference={onEditReference}\n            onStructureParams={onStructureParams}\n            structureParams={structureParams}\n            searchParams={searchParams}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <StructureDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import {studioPath} from '@sanity/client/csm'\nimport {Card, Code, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type Path, useTranslation} from 'sanity'\nimport {decodeJsonParams} from 'sanity/router'\nimport {\n  DocumentPane as StructureDocumentPane,\n  type DocumentPaneNode,\n  PaneLayout,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {PresentationPaneRouterProvider} from '../paneRouter/PresentationPaneRouterProvider'\nimport {PresentationSpinner} from '../PresentationSpinner'\nimport {\n  type PresentationNavigate,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (state: Required<PresentationStateParams>) => void\n  onEditReference: PresentationNavigate\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    onFocusPath,\n    onEditReference,\n    onStructureParams,\n    searchParams,\n    structureParams,\n  } = props\n  const {template, templateParams} = structureParams\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n        template,\n        templateParameters: decodeJsonParams(templateParams),\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType, template, templateParams],\n  )\n\n  const handleFocusPath = useCallback(\n    (path: Path) => {\n      return onFocusPath({\n        id: documentId,\n        type: documentType,\n        path: studioPath.toString(path),\n      })\n    },\n    [documentId, documentType, onFocusPath],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, structureParams])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout style={{height: '100%'}}>\n        <PresentationPaneRouterProvider\n          searchParams={searchParams}\n          onEditReference={onEditReference}\n          onStructureParams={onStructureParams}\n          structureParams={structureParams}\n        >\n          <Suspense fallback={<PresentationSpinner />}>\n            <StructureDocumentPane\n              // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n              paneKey=\"document\"\n              index={1}\n              itemId=\"document\"\n              pane={paneDocumentNode}\n              onFocusPath={handleFocusPath}\n            />\n          </Suspense>\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import {StructureToolProvider} from '../../structure/StructureToolProvider'\nimport {\n  type PresentationNavigate,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentPane} from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  documentId: string\n  documentType: string\n  onEditReference: PresentationNavigate\n  onFocusPath: (state: Required<PresentationStateParams>) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    onFocusPath,\n    onEditReference,\n    onStructureParams,\n    searchParams,\n    structureParams,\n  } = props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        onEditReference={onEditReference}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </StructureToolProvider>\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {\n  getPreviewStateObservable,\n  type PreviewValue,\n  type SanityDocument,\n  useDocumentPreviewStore,\n  usePerspective,\n} from 'sanity'\n\ninterface PreviewState {\n  isLoading?: boolean\n  snapshot?: PreviewValue | Partial<SanityDocument> | null\n}\n\nexport default function usePreviewState(documentId: string, schemaType?: SchemaType): PreviewState {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const [preview, setPreview] = useState<PreviewState>({})\n  const {perspectiveStack} = usePerspective()\n  useEffect(() => {\n    if (!schemaType) {\n      return undefined\n    }\n    const subscription = getPreviewStateObservable(\n      documentPreviewStore,\n      schemaType,\n      documentId,\n      perspectiveStack,\n    ).subscribe((state) => {\n      setPreview(state)\n    })\n\n    return () => {\n      subscription?.unsubscribe()\n    }\n  }, [documentPreviewStore, schemaType, documentId, perspectiveStack])\n\n  return preview\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, useCallback, useMemo} from 'react'\nimport {\n  getPreviewValueWithFallback,\n  PreviewCard,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type MainDocumentState,\n  type PresentationNavigate,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentListPane} from './DocumentListPane'\nimport {DocumentPanel} from './DocumentPanel'\nimport usePreviewState from './usePreviewState'\n\nexport function ContentEditor(props: {\n  documentId?: string\n  documentType?: string\n  mainDocumentState?: MainDocumentState\n  onEditReference: PresentationNavigate\n  onFocusPath: (state: Required<PresentationStateParams>) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs: {_id: string; _type: string}[]\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    mainDocumentState,\n    onEditReference,\n    onFocusPath,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const schema = useSchema()\n\n  const MainDocumentLink = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (props: HTMLProps<HTMLAnchorElement>) => {\n      return (\n        <StateLink\n          {...props}\n          state={{\n            id: mainDocumentState?.document?._id,\n            type: mainDocumentState?.document?._type,\n            _searchParams: Object.entries(searchParams),\n          }}\n        />\n      )\n    },\n    [mainDocumentState, searchParams],\n  )\n\n  const schemaType = useMemo(\n    () => schema.get(mainDocumentState?.document?._type || 'shoe')!,\n    [mainDocumentState, schema],\n  )\n\n  const previewState = usePreviewState(mainDocumentState?.document?._id || '', schemaType)\n\n  const preview = useMemo(() => {\n    if (!mainDocumentState?.document) return null\n\n    return (\n      <SanityDefaultPreview\n        {...getPreviewValueWithFallback({\n          snapshot: previewState.snapshot,\n          fallback: mainDocumentState!.document,\n        })}\n        schemaType={schemaType}\n        status={\n          <Card padding={1} radius={2} shadow={1}>\n            <Text muted size={0} weight=\"medium\">\n              {t('main-document.label')}\n            </Text>\n          </Card>\n        }\n      />\n    )\n  }, [mainDocumentState, schemaType, t, previewState])\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        documentId={documentId}\n        documentType={documentType}\n        onEditReference={onEditReference}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    )\n  }\n\n  return (\n    <Flex direction=\"column\" flex={1} height=\"fill\">\n      {mainDocumentState && (\n        <Card padding={3} tone={mainDocumentState.document ? 'inherit' : 'caution'}>\n          {mainDocumentState.document ? (\n            <PreviewCard\n              __unstable_focusRing\n              // oxlint-disable-next-line no-explicit-any\n              as={MainDocumentLink as any}\n              data-as=\"a\"\n              radius={2}\n              sizing=\"border\"\n              tone=\"inherit\"\n            >\n              {preview}\n            </PreviewCard>\n          ) : (\n            <Card padding={2} radius={2} tone=\"inherit\">\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <WarningOutlineIcon />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1}>\n                    <Translate\n                      t={t}\n                      i18nKey=\"main-document.missing.text\"\n                      components={{Code: 'code'}}\n                      values={{path: mainDocumentState.path}}\n                    />\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n          )}\n        </Card>\n      )}\n\n      <DocumentListPane\n        mainDocumentState={mainDocumentState}\n        onEditReference={onEditReference}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        refs={refs}\n      />\n    </Flex>\n  )\n}\n","import {useState} from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const [panelId] = useState(() => id || uuid())\n  return panelId\n}\n","import {\n  type FunctionComponent,\n  type MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {usePanelId} from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({$disabled}) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({$disabled}) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({id: propId, order, disabled = false}) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const id = usePanelId(propId)\n\n  const {activeResizer, drag, startDragging, stopDragging, registerElement, unregisterElement} =\n    context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    // Set styles to prevent text selection and force an ew-resize cursor whilst\n    // dragging. Return a reset callback so we can revert to any values that\n    // might have been present before dragging started.\n    function setDocumentStyles() {\n      const bodyStyle = document.body.style\n      const documentStyle = document.documentElement.style\n\n      const {cursor} = documentStyle\n      const {userSelect} = bodyStyle\n\n      documentStyle.cursor = 'ew-resize'\n      bodyStyle.userSelect = 'none'\n\n      return () => {\n        if (cursor) documentStyle.cursor = cursor\n        else documentStyle.removeProperty('cursor')\n\n        if (userSelect) bodyStyle.userSelect = userSelect\n        else bodyStyle.removeProperty('user-select')\n      }\n    }\n\n    const resetDocumentStyles = setDocumentStyles()\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n    window.addEventListener('contextmenu', onDragStop)\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      resetDocumentStyles()\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n      window.removeEventListener('contextmenu', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, {id, order, type: 'resizer', el})\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import {\n  type Dispatch,\n  type FunctionComponent,\n  type PropsWithChildren,\n  type SetStateAction,\n} from 'react'\nimport {type CommentIntentGetter, CommentsIntentProvider, type SanityDocument} from 'sanity'\n\nimport {ContentEditor} from './editor/ContentEditor'\nimport {DisplayedDocumentBroadcasterProvider} from './loader/DisplayedDocumentBroadcaster'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {\n  type MainDocumentState,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport interface PresentationContentProps {\n  documentId: PresentationParamsContextValue['id']\n  documentsOnPage: {_id: string; _type: string}[]\n  documentType: PresentationParamsContextValue['type']\n  getCommentIntent: CommentIntentGetter\n  mainDocumentState: MainDocumentState | undefined\n  onEditReference: PresentationNavigate\n  onFocusPath: (state: Required<PresentationStateParams>) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  structureParams: StructureDocumentPaneParams\n}\n\nconst PresentationContentWrapper: FunctionComponent<\n  PropsWithChildren<{\n    documentId?: string\n    getCommentIntent: CommentIntentGetter\n    setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  }>\n> = (props) => {\n  const {documentId, setDisplayedDocument, getCommentIntent} = props\n  return (\n    <>\n      <PanelResizer order={4} />\n      <Panel id=\"content\" minWidth={325} order={5}>\n        <DisplayedDocumentBroadcasterProvider\n          documentId={documentId}\n          setDisplayedDocument={setDisplayedDocument}\n        >\n          <CommentsIntentProvider getIntent={getCommentIntent}>\n            {props.children}\n          </CommentsIntentProvider>\n        </DisplayedDocumentBroadcasterProvider>\n      </Panel>\n    </>\n  )\n}\n\nexport const PresentationContent: FunctionComponent<PresentationContentProps> = (props) => {\n  const {\n    documentId,\n    documentsOnPage,\n    documentType,\n    getCommentIntent,\n    mainDocumentState,\n    onEditReference,\n    onFocusPath,\n    onStructureParams,\n    searchParams,\n    setDisplayedDocument,\n    structureParams,\n  } = props\n\n  return (\n    <PresentationContentWrapper\n      documentId={documentId}\n      getCommentIntent={getCommentIntent}\n      setDisplayedDocument={setDisplayedDocument}\n    >\n      <ContentEditor\n        documentId={documentId}\n        documentType={documentType}\n        mainDocumentState={mainDocumentState}\n        onEditReference={onEditReference}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        refs={documentsOnPage}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </PresentationContentWrapper>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useCallback} from 'react'\nimport {PresentationNavigateContext} from 'sanity/_singletons'\n\nimport {\n  type CombinedSearchParams,\n  type PresentationNavigate,\n  type PresentationNavigateContextValue,\n  type PresentationNavigateOptions,\n  type PresentationStateParams,\n} from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const {children, navigate: _navigate} = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document) => {\n      if (preview || document) {\n        const obj: {\n          state?: PresentationStateParams\n          params?: CombinedSearchParams\n        } = {}\n        if (preview) obj.params = {preview}\n        if (document) obj.state = document\n        // Cast because navigate expects either params or state to be defined, which we guarantee above\n        _navigate(obj as PresentationNavigateOptions)\n      }\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import {type Dispatch, type SetStateAction, useEffect, useState} from 'react'\n\nexport function useLocalState<T>(key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import {memo, useCallback, useMemo} from 'react'\n\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {type NavigatorOptions} from './types'\nimport {useLocalState} from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => React.JSX.Element] {\n  const {unstable_navigator} = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{navigatorEnabled, toggleNavigator}, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const {minWidth, maxWidth, component: NavigatorComponent} = props\n  // eslint-disable-next-line no-eq-null\n  const navigatorDisabled = minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationParamsContext} from 'sanity/_singletons'\n\nimport {type PresentationParamsContextValue} from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParamsContextValue\n  }>\n> = function (props) {\n  const {children, params} = props\n\n  const context = useMemo<PresentationParamsContextValue>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationContext} from 'sanity/_singletons'\n\nimport {\n  type PresentationContextValue,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParamsContextValue\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>\n> = function (props) {\n  const {children, devMode, name, navigate, params, searchParams, structureParams} = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      devMode,\n      name,\n      navigate,\n      params,\n      searchParams,\n      structureParams,\n    }),\n    [devMode, name, navigate, params, searchParams, structureParams],\n  )\n\n  return <PresentationContext.Provider value={context}>{children}</PresentationContext.Provider>\n}\n","import {useSelector} from '@xstate/react'\n\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useAllowPatterns(previewUrlRef: PreviewUrlRef) {\n  const allowPatterns = useSelector(previewUrlRef, (state) => state.context.allowOrigins)\n  if (!Array.isArray(allowPatterns)) {\n    throw new TypeError('allowPatterns must be an array')\n  }\n  return allowPatterns\n}\n","/**\n * When encoding the current studio perspective it's necessary to deal with it sometimes being an array, in a consistent way.\n */\nexport function encodeStudioPerspective(studioPerspective: string[] | string): string {\n  return Array.isArray(studioPerspective) ? studioPerspective.join(',') : studioPerspective\n}\n","import {useId as useReactId} from 'react'\n\nexport function useId(): string {\n  const id = useReactId()\n  // Uses the new format introduced in: https://github.com/facebook/react/pull/32001\n  return id.startsWith(':') ? id.replace(/^:(.+):$/, '\\u00AB$1\\u00BB') : id\n}\n","import {Box} from '@sanity/ui'\nimport {motion, type VariantLabels, type Variants} from 'framer-motion'\nimport {forwardRef, type ReactEventHandler, useEffect, useImperativeHandle, useRef} from 'react'\nimport {createGlobalStyle, styled} from 'styled-components'\n\nimport {useId} from '../useId'\n\ninterface IFrameProps {\n  animate: VariantLabels\n  initial: VariantLabels\n  onLoad: ReactEventHandler<HTMLIFrameElement>\n  preventClick: boolean\n  src: string\n  variants: Variants\n  style: React.CSSProperties\n}\n\nexport const IFrame = forwardRef<HTMLIFrameElement, IFrameProps>(\n  function IFrame(props, forwardedRef) {\n    const {animate, initial, onLoad, preventClick, src, variants, style} = props\n\n    const ref = useRef<HTMLIFrameElement | null>(null)\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    /**\n     * Ensure that clicking outside of menus and dialogs will close as focus shifts to the iframe\n     */\n\n    useEffect(() => {\n      if (!ref.current) {\n        return undefined\n      }\n      const instance = ref.current\n      function handleBlur() {\n        if (instance !== document.activeElement) {\n          return\n        }\n\n        instance.dispatchEvent(new MouseEvent('mousedown', {bubbles: true, cancelable: true}))\n      }\n      window.addEventListener('blur', handleBlur)\n      return () => {\n        window.removeEventListener('blur', handleBlur)\n      }\n    }, [])\n\n    const viewTransitionName = useId()\n\n    return (\n      <>\n        <IFrameElement\n          style={{\n            ...style,\n            viewTransitionName,\n          }}\n          animate={animate}\n          initial={initial}\n          onLoad={onLoad}\n          ref={ref}\n          src={src}\n          variants={variants}\n        />\n        {preventClick && <IFrameOverlay />}\n        <GlobalViewTransition />\n      </>\n    )\n  },\n)\n\nconst IFrameElement = motion.create(styled.iframe`\n  box-shadow: 0 0 0 1px var(--card-border-color);\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  view-transition-class: presentation-tool-iframe;\n`)\n\nconst IFrameOverlay = styled(Box)`\n  position: absolute;\n  inset: 0;\n  background: transparent;\n`\n\nconst GlobalViewTransition = createGlobalStyle`\nhtml:active-view-transition-type(sanity-iframe-viewport) {\n  view-transition-name: none;\n  &::view-transition {\n    pointer-events: none;\n  }\n  /* &::view-transition-old(root) {\n    display: none;\n  }\n  &::view-transition-new(root) {\n    animation: none;\n  } */\n}\n`\n","import {LaunchIcon} from '@sanity/icons'\nimport {urlSearchParamPreviewPerspective} from '@sanity/preview-url-secret/constants'\nimport {Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PresentationPerspective} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\n/** @internal */\nexport function OpenPreviewButton(\n  props: Pick<PreviewProps, 'openPopup'> & {\n    previewLocationOrigin?: string\n    previewLocationRoute: string\n    perspective: PresentationPerspective\n    targetOrigin: string\n  },\n): React.ReactNode {\n  const {openPopup, previewLocationOrigin, previewLocationRoute, perspective, targetOrigin} = props\n\n  const openPreviewLink = useMemo(() => {\n    const url = new URL(previewLocationRoute, previewLocationOrigin || targetOrigin)\n    url.searchParams.set(urlSearchParamPreviewPerspective, encodeStudioPerspective(perspective))\n    const {pathname, search} = url\n\n    return `${previewLocationOrigin}${pathname}${search}`\n  }, [perspective, previewLocationOrigin, previewLocationRoute, targetOrigin])\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <Tooltip\n      animate\n      content={<Text size={1}>{t('share-url.menu-item.open.text')}</Text>}\n      fallbackPlacements={['bottom-start']}\n      placement=\"bottom\"\n      portal\n    >\n      <Button\n        as=\"a\"\n        aria-label={t('share-url.menu-item.open.text')}\n        icon={LaunchIcon}\n        mode=\"bleed\"\n        href={openPreviewLink}\n        rel=\"opener\"\n        target=\"_blank\"\n        tooltipProps={null}\n        // @ts-expect-error the `as=\"a\"` prop isn't enough to change the type of event.target from <div> to <a>\n        onClick={handleOpenPopup}\n      />\n    </Tooltip>\n  )\n}\n","import {useSelector} from '@xstate/react'\n\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useTargetOrigin(previewUrlRef: PreviewUrlRef): string {\n  const targetOrigin = useSelector(previewUrlRef, (state) => state.context.previewUrl?.origin)\n  if (!targetOrigin) {\n    throw new TypeError('targetOrigin is required')\n  }\n  return targetOrigin\n}\n","import {ResetIcon} from '@sanity/icons'\nimport {TextInput, type TextInputClearButtonProps} from '@sanity/ui'\nimport {\n  type ChangeEvent,\n  type KeyboardEvent,\n  type ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PreviewUrlRef} from '../machines/preview-url'\nimport {useAllowPatterns} from '../useAllowPatterns'\nimport {useTargetOrigin} from '../useTargetOrigin'\n\nexport function PreviewLocationInput(props: {\n  fontSize?: number\n  onChange: (value: string) => void\n  previewUrlRef: PreviewUrlRef\n  padding?: number\n  prefix?: ReactNode\n  suffix?: ReactNode\n  value: string\n}): React.JSX.Element {\n  const {fontSize = 1, onChange, padding = 3, prefix, suffix, value, previewUrlRef} = props\n  const allowOrigins = useAllowPatterns(previewUrlRef)\n  const targetOrigin = useTargetOrigin(previewUrlRef)\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {basePath = '/'} = useActiveWorkspace()?.activeWorkspace || {}\n\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(undefined)\n  const [customValidity, setCustomValidity] = useState<string | undefined>(undefined)\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        let absoluteValue = sessionValue\n        try {\n          absoluteValue = new URL(sessionValue, targetOrigin).toString()\n        } catch {\n          // ignore\n        }\n\n        if (Array.isArray(allowOrigins)) {\n          if (!allowOrigins.some((pattern) => pattern.test(absoluteValue))) {\n            setCustomValidity(\n              t('preview-location-input.error', {\n                origin: targetOrigin,\n                context: 'origin-not-allowed',\n              }),\n            )\n            event.currentTarget.reportValidity()\n            return\n          }\n          // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        } else if (\n          !targetOrigin &&\n          (absoluteValue.startsWith(`${basePath}/`) || absoluteValue === basePath)\n        ) {\n          setCustomValidity(\n            t('preview-location-input.error', {basePath, context: 'same-base-path'}),\n          )\n          return\n        }\n\n        const nextValue = absoluteValue === targetOrigin ? `${targetOrigin}/` : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue)\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [allowOrigins, basePath, onChange, sessionValue, t, targetOrigin],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  const handleClear = useCallback(() => {\n    setCustomValidity(undefined)\n    let nextValue = value\n    try {\n      nextValue = new URL(value, targetOrigin).toString()\n    } catch {\n      // ignore\n    }\n    setSessionValue(nextValue)\n  }, [targetOrigin, value])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [targetOrigin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(() => ({icon: ResetIcon}), [])\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={handleClear}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        prefix={prefix}\n        style={{zIndex: 1}}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={suffix}\n        value={sessionValue === undefined ? new URL(value, targetOrigin).toString() : sessionValue}\n      />\n    </>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-shadow,no-negated-condition */\nimport {type ClientPerspective, type SyncTag} from '@sanity/client'\nimport {CopyIcon, ShareIcon} from '@sanity/icons'\nimport {SanityMonogram} from '@sanity/logos'\nimport {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {\n  disablePreviewAccessSharing,\n  enablePreviewAccessSharing,\n} from '@sanity/preview-url-secret/toggle-preview-access-sharing'\nimport {setSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Card,\n  Grid,\n  Menu,\n  MenuDivider,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  useToast,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {lazy, memo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useClient, useCurrentUser, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../ui-components'\nimport {API_VERSION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\nconst QRCodeSVG = lazy(() => import('./QRCodeSVG'))\n\nexport interface SharePreviewMenuProps {\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  previewLocationRoute: string\n  initialUrl: PreviewProps['initialUrl']\n  perspective: ClientPerspective\n}\n\nconst QrCodeLogoSize = 24\nconst QrCodeLogoPadding = 16\nconst QrSize = 224\n\nconst StyledSanityMonogram = styled(SanityMonogram)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: ${QrCodeLogoSize}px;\n  width: ${QrCodeLogoSize}px;\n`\n\nconst MotionSpinner = motion.create(Spinner)\nconst MotionText = motion.create(Text)\nconst MotionMonogram = motion.create(StyledSanityMonogram)\n\nexport const SharePreviewMenu = memo(function SharePreviewMenuComponent(\n  props: SharePreviewMenuProps,\n) {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    initialUrl,\n    previewLocationRoute,\n    perspective,\n  } = props\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [loading, setLoading] = useState(true)\n  const [enabling, setEnabling] = useState(false)\n  const [disabling, setDisabling] = useState(false)\n  const [secret, setSecret] = useState<string | null>(null)\n  const busy = enabling || disabling || loading\n  const url = useMemo(\n    () =>\n      secret\n        ? setSecretSearchParams(\n            initialUrl,\n            secret,\n            previewLocationRoute,\n            encodeStudioPerspective(perspective),\n          )\n        : null,\n    [initialUrl, perspective, previewLocationRoute, secret],\n  )\n\n  const [error, setError] = useState<unknown>(null)\n  if (error) {\n    throw error\n  }\n\n  const handleUnableToToggle = useCallback(() => {\n    pushToast({\n      closable: true,\n      status: 'warning',\n      title: t('share-preview-menu.error_toggle-sharing', {context: 'toggle-sharing'}),\n    })\n  }, [pushToast, t])\n\n  const handleDisableSharing = useCallback(async () => {\n    try {\n      setDisabling(true)\n      await disablePreviewAccessSharing(\n        client,\n        'sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(null)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setDisabling(false)\n    }\n  }, [client, currentUser?.id])\n  const handleEnableSharing = useCallback(async () => {\n    try {\n      setEnabling(true)\n\n      const previewUrlSecret = await enablePreviewAccessSharing(\n        client,\n        'sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(previewUrlSecret.secret)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setEnabling(false)\n    }\n  }, [client, currentUser?.id])\n\n  const handleCopyUrl = useCallback(() => {\n    try {\n      if (!url) {\n        throw new Error('No URL to copy')\n      }\n      navigator.clipboard.writeText(url.toString())\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: t('share-url.clipboard.status', {context: 'success'}),\n      })\n    } catch (error) {\n      setError(error)\n    }\n  }, [pushToast, t, url])\n\n  useEffect(() => {\n    let controller = new AbortController()\n    let usedTags: SyncTag[] = []\n    async function fetchShareSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n      const {result, syncTags} = await client.fetch<string | null>(\n        fetchSharedAccessQuery,\n        {},\n        {filterResponse: false, lastLiveEventId, tag: 'presentation.fetch-shared-access-secret'},\n      )\n      if (Array.isArray(syncTags)) {\n        usedTags = syncTags\n      }\n      if (!signal.aborted) {\n        setSecret(result)\n      }\n    }\n    const subscription = client.live.events().subscribe({\n      next: (event) => {\n        if (event.type === 'message') {\n          controller.abort()\n          controller = new AbortController()\n          if (event.tags.some((tag) => usedTags.includes(tag))) {\n            fetchShareSecret(event.id, controller.signal)\n          }\n        }\n      },\n      error: setError,\n    })\n\n    fetchShareSecret(null, controller.signal).finally(() => setLoading(false))\n\n    return () => {\n      subscription.unsubscribe()\n      controller.abort()\n    }\n  }, [client])\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          aria-label={t('preview-frame.share-button.aria-label')}\n          icon={ShareIcon}\n          mode=\"bleed\"\n          tooltipProps={null}\n        />\n      }\n      id=\"share-menu\"\n      menu={\n        <Menu style={{maxWidth: 248}} padding={canUseSharedPreviewAccess ? undefined : 0}>\n          {canUseSharedPreviewAccess ? (\n            <>\n              <label style={{cursor: 'pointer'}}>\n                <Grid\n                  columns={2}\n                  rows={2}\n                  gapX={3}\n                  gapY={1}\n                  style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gridTemplateColumns: 'min-content 1fr',\n                    gridTemplateRows: 'min-content',\n                  }}\n                  paddingTop={3}\n                  paddingX={3}\n                >\n                  <Tooltip\n                    animate\n                    content={\n                      <Text size={1}>\n                        {t('share-preview-menu.toggle-button.tooltip', {\n                          context: url ? 'disable' : 'enable',\n                        })}\n                      </Text>\n                    }\n                    fallbackPlacements={['bottom-start']}\n                    placement=\"bottom\"\n                    portal\n                  >\n                    <Switch\n                      checked={enabling || (url !== null && !disabling)}\n                      readOnly={enabling || disabling}\n                      indeterminate={loading}\n                      onChange={\n                        !canToggleSharePreviewAccess\n                          ? handleUnableToToggle\n                          : url\n                            ? handleDisableSharing\n                            : handleEnableSharing\n                      }\n                    />\n                  </Tooltip>\n                  <Text size={1} weight=\"medium\">\n                    {t('share-preview-menu.toggle-button.label', {context: 'first-line'})}\n                  </Text>\n                  <span />\n                  <Text muted size={1}>\n                    {t('share-preview-menu.toggle-button.label', {context: 'second-line'})}\n                  </Text>\n                </Grid>\n              </label>\n              <Box padding={3} paddingTop={2}>\n                <Stack space={3}>\n                  <Card\n                    tone={busy || !url ? 'transparent' : undefined}\n                    style={{\n                      position: 'relative',\n                      aspectRatio: '1 / 1',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <AnimatePresence>\n                      {busy ? (\n                        <MotionSpinner\n                          muted\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        />\n                      ) : url ? (\n                        <>\n                          <Suspense fallback={<Spinner />}>\n                            <QRCodeSVG\n                              title={t('share-preview-menu.qr-code.title', {url: url.toString()})}\n                              value={url.toString()}\n                              size={QrSize}\n                              color=\"var(--card-fg-color)\"\n                              logoSize={QrCodeLogoSize + QrCodeLogoPadding}\n                            />\n                            <MotionMonogram\n                              initial={{opacity: -0.5}}\n                              animate={{opacity: 1.5}}\n                              exit={{opacity: 0}}\n                            />\n                          </Suspense>\n                        </>\n                      ) : (\n                        <MotionText\n                          muted\n                          size={1}\n                          style={{maxWidth: '100px', textWrap: 'pretty', textAlign: 'center'}}\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        >\n                          {t('share-preview-menu.qr-code.placeholder')}\n                        </MotionText>\n                      )}\n                    </AnimatePresence>\n                  </Card>\n                  <Text muted size={1}>\n                    {t('share-preview-menu.qr-code.instructions')}\n                  </Text>\n                </Stack>\n              </Box>\n              <MenuDivider />\n              <MenuItem\n                disabled={!url || disabling}\n                icon={CopyIcon}\n                onClick={handleCopyUrl}\n                text={t('share-preview-menu.copy-url.text')}\n              />\n            </>\n          ) : (\n            <Card padding={2} tone=\"caution\" radius={3}>\n              <Text style={{textWrap: 'pretty'}}>\n                {t('share-preview-menu.error', {context: 'missing-grants'})}\n              </Text>\n            </Card>\n          )}\n        </Menu>\n      }\n      popover={{\n        constrainSize: true,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n})\nSharePreviewMenu.displayName = 'Memo(SharePreviewMenu)'\n","import {DesktopIcon, MobileDeviceIcon, PanelLeftIcon, RefreshIcon} from '@sanity/icons'\nimport {withoutSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {Box, Card, Flex, Hotkeys, Switch, Text} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {type RefObject, useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type HeaderOptions} from '../types'\nimport {useId} from '../useId'\nimport {OpenPreviewButton} from './OpenPreviewButton'\nimport {type PreviewProps} from './Preview'\nimport {PreviewLocationInput} from './PreviewLocationInput'\nimport {SharePreviewMenu} from './SharePreviewMenu'\n\n/** @public */\nexport interface PreviewHeaderProps extends PreviewProps {\n  iframeRef: RefObject<HTMLIFrameElement | null>\n  renderDefault: (props: PreviewHeaderProps) => React.JSX.Element\n}\n\nconst PreviewHeaderDefault = (props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n  const {\n    canSharePreviewAccess,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    iframeRef,\n    initialUrl,\n    navigatorEnabled,\n    onPathChange,\n    onRefresh,\n    openPopup,\n    overlaysConnection,\n    presentationRef,\n    perspective,\n    previewUrl,\n    setViewport,\n    targetOrigin,\n    toggleNavigator,\n    toggleOverlay,\n    viewport,\n    previewUrlRef,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const toggleViewportSize = useCallback(\n    () => setViewport(viewport === 'desktop' ? 'mobile' : 'desktop'),\n    [setViewport, viewport],\n  )\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = () => {\n    onRefresh(() => {\n      if (!iframeRef.current) {\n        return\n      }\n      presentationRef.send({type: 'iframe reload'})\n      // Funky way to reload an iframe without CORS issues\n      // ref.current.src = ref.current.src\n      Object.assign(iframeRef.current, {src: `${targetOrigin}${previewUrl || '/'}`})\n    })\n  }\n\n  const isLoading = useSelector(presentationRef, (state) => state.matches('loading'))\n  const isLoaded = useSelector(presentationRef, (state) => state.matches('loaded'))\n  const isRefreshing = useSelector(presentationRef, (state) =>\n    state.matches({loaded: 'refreshing'}),\n  )\n  const isReloading = useSelector(presentationRef, (state) => state.matches({loaded: 'reloading'}))\n  const overlaysEnabled = useSelector(\n    presentationRef,\n    (state) => state.context.visualEditingOverlaysEnabled,\n  )\n\n  const previewLocationRoute = useMemo(() => {\n    const previewURL = new URL(previewUrl || '/', targetOrigin)\n    const {pathname, search} = withoutSecretSearchParams(previewURL)\n\n    return `${pathname}${search}`\n  }, [previewUrl, targetOrigin])\n\n  const perspectiveToggleTooltipId = useId()\n\n  /**\n   * If the preview URL machine is busy it means it's about to change the target origin and reload the iframe,\n   * so we show a spinner\n   */\n  const previewUrlBusy = useSelector(previewUrlRef, (state) => state.hasTag('busy'))\n\n  return (\n    <Flex align=\"center\" gap={1} paddingX={1} style={{width: '100%'}}>\n      {toggleNavigator && (\n        <Button\n          aria-label={t('preview-frame.navigator.toggle-button.aria-label')}\n          icon={PanelLeftIcon}\n          mode=\"bleed\"\n          onClick={toggleNavigator}\n          selected={navigatorEnabled}\n          tooltipProps={{\n            content: <Text size={1}>{t('preview-frame.navigator.toggle-button.tooltip')}</Text>,\n            fallbackPlacements: ['bottom-start'],\n            placement: 'bottom',\n          }}\n        />\n      )}\n\n      <Tooltip\n        animate\n        content={\n          <Flex align=\"center\" style={{whiteSpace: 'nowrap'}}>\n            <Box padding={1}>\n              <Text size={1}>\n                {t('preview-frame.overlay.toggle-button.tooltip', {\n                  context: overlaysEnabled ? 'disable' : 'enable',\n                })}\n              </Text>\n            </Box>\n            <Box paddingY={1}>\n              <Hotkeys keys={['Alt']} style={{marginTop: -4, marginBottom: -4}} />\n            </Box>\n          </Flex>\n        }\n        fallbackPlacements={['bottom-start']}\n        placement=\"bottom\"\n        portal\n      >\n        <Card\n          as=\"label\"\n          flex=\"none\"\n          padding={3}\n          marginX={1}\n          style={{\n            lineHeight: 0,\n            borderRadius: 999,\n            userSelect: 'none',\n          }}\n          tone={overlaysEnabled ? 'transparent' : undefined}\n        >\n          <Flex align=\"center\" gap={3}>\n            <div style={{margin: -4}}>\n              <Switch\n                indeterminate={!isLoaded}\n                checked={overlaysEnabled}\n                onChange={toggleOverlay}\n                disabled={isLoading || overlaysConnection !== 'connected'}\n              />\n            </div>\n            <Box>\n              <Text muted={!overlaysEnabled} size={1} weight=\"medium\">\n                {t('preview-frame.overlay.toggle-button.text')}\n              </Text>\n            </Box>\n          </Flex>\n        </Card>\n      </Tooltip>\n\n      <Box flex={1}>\n        <PreviewLocationInput\n          previewUrlRef={previewUrlRef}\n          prefix={\n            <Box padding={1}>\n              <Tooltip\n                animate\n                content={\n                  <Text size={1}>\n                    {isLoaded\n                      ? t('preview-frame.refresh-button.tooltip')\n                      : t('preview-frame.status', {\n                          context: isLoading\n                            ? 'loading'\n                            : isRefreshing\n                              ? 'refreshing'\n                              : isReloading\n                                ? 'reloading'\n                                : 'unknown',\n                        })}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-end']}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label={t('preview-frame.refresh-button.aria-label')}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={isReloading || isRefreshing || previewUrlBusy}\n                  onClick={handleRefresh}\n                  tooltipProps={null}\n                />\n              </Tooltip>\n            </Box>\n          }\n          onChange={onPathChange}\n          suffix={\n            <Box padding={1}>\n              <OpenPreviewButton\n                openPopup={openPopup}\n                previewLocationOrigin={previewLocationOrigin}\n                previewLocationRoute={previewLocationRoute}\n                perspective={perspective}\n                targetOrigin={targetOrigin}\n              />\n            </Box>\n          }\n          value={previewLocationRoute}\n        />\n      </Box>\n\n      <Flex align=\"center\" flex=\"none\" gap={1}>\n        <Tooltip\n          animate\n          ref={(node) => {\n            node?.style.setProperty('view-transition-name', perspectiveToggleTooltipId)\n          }}\n          content={\n            <Text size={1}>\n              {t('preview-frame.viewport-button.tooltip', {\n                context: viewport === 'desktop' ? 'narrow' : 'full',\n              })}\n            </Text>\n          }\n          fallbackPlacements={['bottom-start']}\n          placement=\"bottom\"\n          portal\n        >\n          <Button\n            data-testid=\"preview-viewport-toggle\"\n            data-viewport={viewport}\n            aria-label={t('preview-frame.viewport-button.aria-label')}\n            icon={viewport === 'desktop' ? MobileDeviceIcon : DesktopIcon}\n            mode=\"bleed\"\n            onClick={toggleViewportSize}\n            tooltipProps={null}\n          />\n        </Tooltip>\n      </Flex>\n\n      {canSharePreviewAccess && (\n        <Flex align=\"center\" flex=\"none\" gap={1}>\n          <SharePreviewMenu\n            canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n            canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n            previewLocationRoute={previewLocationRoute}\n            initialUrl={initialUrl}\n            perspective={perspective}\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\n/** @internal */\nexport function PreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n): React.JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const renderDefault = useCallback((props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n    return <PreviewHeaderDefault {...props} />\n  }, [])\n\n  const HeaderComponent = props.options?.component\n  const header = HeaderComponent ? (\n    <HeaderComponent {...props} renderDefault={renderDefault} />\n  ) : (\n    renderDefault(props)\n  )\n\n  return (\n    <Card flex=\"none\" padding={2} borderBottom style={{position: 'relative'}}>\n      <Flex align=\"center\" style={{minHeight: 0}}>\n        {header}\n      </Flex>\n    </Card>\n  )\n}\n","/* eslint-disable react/no-unused-prop-types */\nimport {createConnectionMachine, createController} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamPreviewPerspective,\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n  type VercelSetBypassCookieValue,\n} from '@sanity/preview-url-secret/constants'\nimport {\n  Card,\n  Code,\n  Flex,\n  Label,\n  Spinner,\n  Stack,\n  Text,\n  usePrefersReducedMotion,\n  useToast,\n} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {AnimatePresence, motion, MotionConfig} from 'framer-motion'\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n} from 'react'\nimport {flushSync} from 'react-dom'\nimport {Translate, useTranslation} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Button, TooltipDelayGroupProvider} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {MAX_TIME_TO_OVERLAYS_CONNECTION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PresentationMachineRef} from '../machines/presentation-machine'\nimport {type PreviewUrlRef} from '../machines/preview-url'\nimport {\n  type ConnectionStatus,\n  type HeaderOptions,\n  type PresentationPerspective,\n  type PresentationViewport,\n} from '../types'\nimport {useAllowPatterns} from '../useAllowPatterns'\nimport {usePresentationNavigate} from '../usePresentationNavigate'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {IFrame} from './IFrame'\nimport {PreviewHeader} from './PreviewHeader'\n\nconst MotionFlex = motion.create(Flex)\n\n/** @public */\nexport interface PreviewProps {\n  canSharePreviewAccess: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  header?: HeaderOptions\n  initialUrl: URL\n  loadersConnection: ConnectionStatus\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  onRefresh: (fallback: () => void) => void\n  openPopup: (url: string) => void\n  overlaysConnection: ConnectionStatus\n  presentationRef: PresentationMachineRef\n  perspective: PresentationPerspective\n  previewUrl?: string\n  setViewport: (mode: 'desktop' | 'mobile') => void\n  targetOrigin: string\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  viewport: PresentationViewport\n  vercelProtectionBypass: string | null\n  previewUrlRef: PreviewUrlRef\n}\n\nexport const Preview = memo(\n  forwardRef<HTMLIFrameElement, PreviewProps>(function PreviewComponent(props, forwardedRef) {\n    const {\n      header,\n      initialUrl,\n      loadersConnection,\n      overlaysConnection,\n      perspective,\n      viewport,\n      vercelProtectionBypass,\n      presentationRef,\n      previewUrlRef,\n    } = props\n\n    const [stablePerspective, setStablePerspective] = useState<typeof perspective | null>(null)\n    const urlPerspective = encodeStudioPerspective(\n      stablePerspective === null ? perspective : stablePerspective,\n    )\n    const previewUrl = useMemo(() => {\n      const url = new URL(initialUrl)\n      // Always set the perspective that's being used, even if preview mode isn't configured\n      if (!url.searchParams.get(urlSearchParamPreviewPerspective)) {\n        url.searchParams.set(urlSearchParamPreviewPerspective, urlPerspective)\n      }\n\n      if (vercelProtectionBypass || url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        // samesitenone is required since the request is from an iframe\n        url.searchParams.set(\n          urlSearchParamVercelSetBypassCookie,\n          'samesitenone' satisfies VercelSetBypassCookieValue,\n        )\n      }\n      // If there's a vercel protection bypass secret in the context, set it if none exists already\n      if (vercelProtectionBypass && !url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        url.searchParams.set(urlSearchParamVercelProtectionBypass, vercelProtectionBypass)\n      }\n\n      return url\n    }, [initialUrl, urlPerspective, vercelProtectionBypass])\n\n    useEffect(() => {\n      /**\n       * If the preview iframe is connected to the loader, we know that switching the perspective can be done without reloading the iframe.\n       */\n      if (loadersConnection === 'connected') {\n        /**\n         * Only set the stable perspective if it hasn't been set yet.\n         */\n        setStablePerspective((prev) => (prev === null ? perspective : prev))\n      }\n    }, [loadersConnection, perspective])\n\n    const {t} = useTranslation(presentationLocaleNamespace)\n    const {devMode} = usePresentationTool()\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const ref = useRef<HTMLIFrameElement | null>(null)\n\n    const previewHeader = <PreviewHeader {...props} iframeRef={ref} options={header} />\n\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    const isLoading = useSelector(\n      presentationRef,\n      (state) => state.matches('loading') || state.matches({loaded: 'reloading'}),\n    )\n\n    const [timedOut, setTimedOut] = useState(false)\n    const isRefreshing = useSelector(presentationRef, (state) =>\n      state.matches({loaded: 'refreshing'}),\n    )\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy = isLoading || isRefreshing || overlaysConnection === 'connecting'\n\n    const handleRetry = useCallback(() => {\n      if (!ref.current) {\n        return\n      }\n\n      ref.current.src = previewUrl.toString()\n\n      presentationRef.send({type: 'iframe reload'})\n    }, [presentationRef, previewUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] = useState(false)\n    useEffect(() => {\n      if (isLoading || isRefreshing) {\n        return undefined\n      }\n\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 5_000)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [overlaysConnection, isLoading, isRefreshing])\n\n    useEffect(() => {\n      if (isLoading || isRefreshing || !showOverlaysConnectionStatus) {\n        return undefined\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          console.error(\n            `Unable to connect to visual editing. Make sure you've setup '@sanity/visual-editing' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [isLoading, overlaysConnection, isRefreshing, showOverlaysConnectionStatus])\n\n    const onIFrameLoad = useCallback(() => {\n      presentationRef.send({type: 'iframe loaded'})\n    }, [presentationRef])\n\n    const preventIframeInteraction = useMemo(() => {\n      return (\n        (isLoading || (overlaysConnection === 'connecting' && !isRefreshing)) && !continueAnyway\n      )\n    }, [continueAnyway, isLoading, isRefreshing, overlaysConnection])\n\n    const canUseViewTransition = useSyncExternalStore(\n      // eslint-disable-next-line no-empty-function\n      useCallback(() => () => {}, []),\n      () => CSS.supports(`(view-transition-name: test)`),\n    )\n    const iframeAnimations = useMemo(() => {\n      return [\n        preventIframeInteraction ? 'background' : 'active',\n        isLoading ? 'reloading' : 'idle',\n        // If CSS View Transitions are supported, then transition iframe viewport dimensions with that instead of Motion\n        canUseViewTransition ? '' : viewport,\n        showOverlaysConnectionStatus && !continueAnyway ? 'timedOut' : '',\n      ]\n    }, [\n      canUseViewTransition,\n      continueAnyway,\n      isLoading,\n      preventIframeInteraction,\n      showOverlaysConnectionStatus,\n      viewport,\n    ])\n\n    const [currentViewport, setCurrentViewport] = useState(viewport)\n    const [iframeStyle, setIframeStyle] = useState(iframeVariants[viewport])\n    useEffect(() => {\n      if (canUseViewTransition && viewport !== currentViewport) {\n        const update = () => {\n          setCurrentViewport(viewport)\n          setIframeStyle(iframeVariants[viewport])\n        }\n        if (\n          !prefersReducedMotion &&\n          'startViewTransition' in document &&\n          typeof document.startViewTransition === 'function'\n        ) {\n          document.startViewTransition({\n            update: () => flushSync(() => update()),\n            types: ['sanity-iframe-viewport'],\n          })\n        } else {\n          update()\n        }\n      }\n    }, [canUseViewTransition, prefersReducedMotion, currentViewport, viewport])\n\n    const toast = useToast()\n    const allowOrigins = useAllowPatterns(previewUrlRef)\n    const [checkOrigin, setCheckOrigin] = useState<false | string>(false)\n    const [reportedMismatches] = useState(new Set<string>())\n    const reportMismatchingOrigin = useEffectEvent((reportedOrigin: string) => {\n      if (allowOrigins.some((allow) => allow.test(reportedOrigin))) {\n        setCheckOrigin(reportedOrigin)\n        return\n      }\n      if (reportedMismatches.has(reportedOrigin)) return\n      reportedMismatches.add(reportedOrigin)\n      console.warn('Visual Editing is here but misconfigured', {reportedOrigin})\n      toast.push({\n        closable: true,\n        id: `presentation-iframe-origin-mismatch-${reportedOrigin}`,\n        status: 'error',\n        duration: Infinity,\n        title: t('preview-frame.configuration.error.title'),\n        description: (\n          <Translate\n            t={t}\n            i18nKey=\"preview-frame.configuration.error.description\"\n            components={{Code: 'code'}}\n            values={{\n              targetOrigin: previewUrl.origin,\n              reportedOrigin,\n            }}\n          />\n        ),\n      })\n    })\n    const navigate = usePresentationNavigate()\n    const navigateEvent = useEffectEvent((url: string) => {\n      if (!checkOrigin) return\n      const nextUrl = new URL(url, checkOrigin)\n      navigate(`${checkOrigin}${nextUrl.pathname}${nextUrl.search}${nextUrl.hash}`)\n    })\n    useEffect(() => {\n      if (!checkOrigin) {\n        return undefined\n      }\n      const target = ref.current?.contentWindow\n      if (!target) {\n        return undefined\n      }\n      const controller = createController({targetOrigin: checkOrigin})\n      controller.addTarget(target)\n      const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n        {\n          name: 'presentation',\n          heartbeat: true,\n          connectTo: 'visual-editing',\n        },\n        createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n          actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n        }),\n      )\n\n      comlink.on('visual-editing/navigate', (data) => {\n        navigateEvent(data.url)\n      })\n      const stop = comlink.start()\n\n      return () => {\n        stop()\n        controller.destroy()\n      }\n    }, [checkOrigin])\n    useEffect(() => {\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const interval = setInterval(() => {\n          ref.current?.contentWindow?.postMessage(\n            {domain: 'sanity/channels', from: 'presentation', type: 'presentation/status'},\n            /**\n             * The targetOrigin is set to '*' intentionally here, as we need to find out if the iframe is misconfigured and has the wrong origin\n             */\n            '*',\n          )\n        }, 1_000)\n\n        const controller = new AbortController()\n        window.addEventListener(\n          'message',\n          ({data}: MessageEvent<unknown>) => {\n            /**\n             * Listen for replies to presentation/status\n             */\n            if (\n              data &&\n              typeof data === 'object' &&\n              'domain' in data &&\n              data.domain === 'sanity/channels' &&\n              'type' in data &&\n              data.type === 'visual-editing/status' &&\n              'data' in data &&\n              typeof data.data === 'object' &&\n              data.data &&\n              'origin' in data.data &&\n              typeof data.data.origin === 'string'\n            ) {\n              reportMismatchingOrigin(data.data.origin)\n            }\n          },\n          {signal: controller.signal},\n        )\n\n        return () => {\n          controller.abort()\n          clearInterval(interval)\n        }\n      }\n      return undefined\n    }, [overlaysConnection, timedOut])\n\n    return (\n      <MotionConfig transition={prefersReducedMotion ? {duration: 0} : undefined}>\n        <TooltipDelayGroupProvider>\n          {previewHeader}\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={(canUseViewTransition ? currentViewport : viewport) === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !isLoading &&\n                !isRefreshing &&\n                // viewport, // using CSS View Transitions instead of framer motion to drive this\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]: 'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition: '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          mode=\"ghost\"\n                          text={t('preview-frame.continue-button.text')}\n                          style={{opacity: 0}}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={4}>\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut\n                              ? t('preview-frame.status', {context: 'timeout'})\n                              : t('preview-frame.status', {context: 'connecting'})}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text={t('preview-frame.continue-button.text')}\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (isLoading || (overlaysConnection === 'connecting' && !isRefreshing)) &&\n                  !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        {t('preview-frame.status', {context: 'loading'})}\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: '0',\n                      position: 'absolute',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message={t('preview-frame.connection.error.text')}\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.overlay.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: overlaysConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.loader.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: loadersConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                animate={iframeAnimations}\n                initial={['background']}\n                onLoad={onIFrameLoad}\n                preventClick={preventIframeInteraction}\n                ref={ref}\n                src={previewUrl.toString()}\n                style={iframeStyle}\n                variants={iframeVariants}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  }),\n)\nPreview.displayName = 'Memo(ForwardRef(Preview))'\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst errorVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","/** @internal */\nexport function defineWarnOnce() {\n  let warned = false\n  // oxlint-disable-next-line no-explicit-any\n  return (...args: any[]): void => {\n    if (!warned) {\n      console.warn(...args)\n      warned = true\n    }\n  }\n}\n","import {validateApiPerspective} from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport {type MutableRefObject, useCallback, useMemo, useRef, useState} from 'react'\n\nimport {type FrameState, type PresentationPerspective} from './types'\nimport {defineWarnOnce} from './util/warnOnce'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\ntype DocumentCache = Record<string, DocumentOnPage>\ntype KeyedDocumentCache = Record<string, DocumentCache>\n\nconst warnOnceAboutCrossDatasetReference = defineWarnOnce()\n\n/**\n * @TODO should be refactored to an lru-cache that is keyed by the perspective, which could be an array (if it is, it should use consistent sorting),\n *       and the url path (optionally the origin too), so that swapping between perspectives and urls is fast.\n */\nexport function useDocumentsOnPage(\n  perspective: PresentationPerspective,\n  frameStateRef: MutableRefObject<FrameState>,\n): [\n  DocumentOnPage[],\n  (key: string, perspective: PresentationPerspective, state: DocumentOnPage[]) => void,\n] {\n  validateApiPerspective(perspective)\n\n  const [published, setPublished] = useState<KeyedDocumentCache>({})\n  const [previewDrafts, setPreviewDrafts] = useState<KeyedDocumentCache>({})\n\n  // Used to compare the frame url with its value when the cache was last updated\n  // If the url has changed, the entire cache is replaced\n  const urlRef = useRef<string | undefined>('')\n\n  const setDocumentsOnPage = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (key: string, perspective: PresentationPerspective, sourceDocuments: DocumentOnPage[] = []) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // @TODO Handle cross dataset references\n\n          warnOnceAboutCrossDatasetReference(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache = perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((cache) => {\n        // Create the `next` documents, dedupe by `_id`\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n\n        // If the frame url has changed, replace the entire cache with the next documents\n        if (urlRef.current !== frameStateRef.current.url) {\n          urlRef.current = frameStateRef.current.url\n          return {[key]: next}\n        }\n\n        // If the keyed cache has changed, return the entire cache and replace the keyed part\n        const prev = cache[key]\n        if (!isEqual(prev, next)) {\n          return {...cache, [key]: next}\n        }\n\n        // Otherwise return the entire cache as is\n        return cache\n      })\n    },\n    [frameStateRef],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    const keyedCache = perspective === 'published' ? published : previewDrafts\n    const uniqueDocuments = Object.values(keyedCache).reduce((acc, cache) => {\n      Object.values(cache).forEach((doc) => {\n        acc[doc._id] = doc\n      })\n      return acc\n    }, {})\n\n    return Object.values(uniqueDocuments)\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import {type ResponseQueryOptions} from '@sanity/client'\nimport {match, type Path} from 'path-to-regexp'\nimport {useEffect, useRef, useState} from 'react'\nimport {useClient, usePerspective} from 'sanity'\nimport {type RouterState, useRouter} from 'sanity/router'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {API_VERSION} from './constants'\nimport {\n  type DocumentResolver,\n  type DocumentResolverContext,\n  type MainDocument,\n  type MainDocumentState,\n  type PresentationNavigate,\n} from './types'\n\n// Helper function to \"unwrap\" a result when it is either explicitly provided or\n// returned as the result of a passed function\nfunction fnOrObj<T, U>(arg: T | ((ctx: U) => T), context: U): T {\n  return arg instanceof Function ? arg(context) : arg\n}\n\nfunction getQueryFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): string | undefined {\n  if (resolver.resolve) {\n    const filter = resolver.resolve(context)?.filter\n    return filter\n      ? `// groq\n*[${filter}][0]{_id, _type}`\n      : undefined\n  }\n\n  if ('type' in resolver) {\n    return `// groq\n*[_type == \"${resolver.type}\"][0]{_id, _type}`\n  }\n\n  return `// groq\n*[${fnOrObj(resolver.filter, context)}][0]{_id, _type}`\n}\n\nfunction getParamsFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): Record<string, string> {\n  if (resolver.resolve) {\n    return resolver.resolve(context)?.params ?? context.params\n  }\n\n  if ('type' in resolver) {\n    return {}\n  }\n\n  return fnOrObj(resolver.params, context) ?? context.params\n}\n\nexport function getRouteContext(route: Path, url: URL): DocumentResolverContext | undefined {\n  const routes = Array.isArray(route) ? route : [route]\n\n  for (route of routes) {\n    let {origin} = url\n    let path = route\n\n    // Handle absolute URLs\n    if (typeof route === 'string') {\n      try {\n        const absolute = new URL(route)\n\n        // If we are dealing with an absolute URL, ensure the origins match\n        if (absolute.origin !== origin) continue\n\n        origin = absolute.origin\n        path = absolute.pathname\n      } catch {\n        // Ignore, as we assume a relative path\n      }\n    }\n\n    try {\n      const matcher = match<Record<string, string>>(path, {decode: decodeURIComponent})\n      const result = matcher(url.pathname)\n      if (result) {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const {params, path} = result\n        return {origin, params, path}\n      }\n    } catch (e) {\n      throw new Error(`\"${route}\" is not a valid route pattern`)\n    }\n  }\n  return undefined\n}\n\nexport function useMainDocument(props: {\n  navigate?: PresentationNavigate\n  navigationHistory: RouterState[]\n  path?: string\n  targetOrigin: string\n  resolvers?: DocumentResolver[]\n}): MainDocumentState | undefined {\n  const {navigate, navigationHistory, path, targetOrigin, resolvers = []} = props\n  const {state: routerState} = useRouter()\n  const {perspectiveStack} = usePerspective()\n  const client = useClient({apiVersion: API_VERSION})\n  const relativeUrl =\n    path || routerState._searchParams?.find(([key]) => key === 'preview')?.[1] || ''\n\n  const [mainDocumentState, setMainDocumentState] = useState<MainDocumentState | undefined>(\n    undefined,\n  )\n  const mainDocumentIdRef = useRef<string | undefined>(undefined)\n\n  const handleResponse = useEffectEvent((doc: MainDocument | undefined, url: URL) => {\n    if (!doc || mainDocumentIdRef.current !== doc._id) {\n      setMainDocumentState({\n        document: doc,\n        path: url.pathname,\n      })\n      mainDocumentIdRef.current = doc?._id\n\n      // We only want to force a navigation to the main document if\n      // the path changed but the document ID did not. An explicit\n      // document navigation should take precedence over displaying\n      // the main document. We determine if an explicit document\n      // navigation has occured by comparing the IDs of the last two\n      // resultant navigation states.\n      if (navigationHistory.at(-1)?.id === navigationHistory.at(-2)?.id) {\n        navigate?.({\n          state: {\n            id: doc?._id,\n            type: doc?._type,\n          },\n        })\n      }\n    }\n  })\n\n  useEffect(() => {\n    const url = new URL(relativeUrl, targetOrigin)\n\n    if (resolvers.length) {\n      let result:\n        | {\n            context: DocumentResolverContext\n            resolver: DocumentResolver\n          }\n        | undefined\n      for (const resolver of resolvers) {\n        const context = getRouteContext(resolver.route, url)\n        if (context) {\n          result = {context, resolver}\n          break\n        }\n      }\n\n      if (result) {\n        const query = getQueryFromResult(result.resolver, result.context)\n        const params = getParamsFromResult(result.resolver, result.context)\n        if (query) {\n          const controller = new AbortController()\n          const options: ResponseQueryOptions = {\n            perspective: perspectiveStack,\n            signal: controller.signal,\n            tag: 'use-main-document',\n          }\n\n          client\n            .fetch<MainDocument | undefined>(query, params, options)\n            .then((doc) => handleResponse(doc, url))\n            .catch((e) => {\n              if (e instanceof Error && e.name === 'AbortError') return\n              setMainDocumentState({document: undefined, path: url.pathname})\n              mainDocumentIdRef.current = undefined\n            })\n          return () => {\n            controller.abort()\n          }\n        }\n      }\n    }\n    setMainDocumentState(undefined)\n    mainDocumentIdRef.current = undefined\n    return undefined\n  }, [client, perspectiveStack, relativeUrl, resolvers, targetOrigin])\n\n  return mainDocumentState\n}\n","import {studioPath} from '@sanity/client/csm'\nimport {urlStringToPath} from '@sanity/visual-editing-csm'\n\nimport {type PresentationStateParams} from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(state: PresentationStateParams): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport {type MutableRefObject, useCallback, useLayoutEffect, useMemo, useRef, useState} from 'react'\nimport {getPublishedId} from 'sanity'\nimport {type RouterContextValue, type RouterState, type SearchParam} from 'sanity/router'\n\nimport {\n  type CombinedSearchParams,\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from './types'\nimport {parseRouterState} from './util/parse'\n\nfunction pruneObject<T extends RouterState | PresentationParamsContextValue>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\n/**\n * Ensures the array contains all members of the union T.\n */\nconst exhaustiveTupleOf =\n  <T>() =>\n  <U extends T[]>(array: U & ([T] extends [U[number]] ? unknown : 'Invalid') & {0: T}) =>\n    array\n\nconst maintainOnDocumentChange = exhaustiveTupleOf<keyof PresentationSearchParams>()([\n  'perspective',\n  'preview',\n  'viewport',\n])\n\nconst maintainOnSameDocument = exhaustiveTupleOf<keyof StructureDocumentPaneParams>()([\n  'changesInspectorTab',\n  'comment',\n  'inspect',\n  'instruction',\n  'parentRefPath',\n  'path',\n  'pathKey',\n  'rev',\n  'since',\n  'template',\n  'templateParams',\n  'version',\n  'view',\n])\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  frameStateRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  frameStateRef: MutableRefObject<FrameState>\n}): {\n  isSameDocument: (state: PresentationStateParams) => boolean\n  navigate: PresentationNavigate\n  navigationHistory: RouterState[]\n  params: PresentationParamsContextValue\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n} {\n  const params = useMemo<PresentationParamsContextValue>(() => {\n    const {id, path, type} = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview: routerSearchParams.preview || initialPreviewUrl.toString(),\n      perspective: routerSearchParams.perspective,\n      viewport: routerSearchParams.viewport,\n      inspect: routerSearchParams.inspect,\n      parentRefPath: routerSearchParams.parentRefPath,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      templateParams: routerSearchParams.templateParams,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n      changesInspectorTab: routerSearchParams.changesInspectorTab as 'history' | 'review',\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const structureParams = useMemo<StructureDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      parentRefPath: params.parentRefPath,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      templateParams: params.templateParams,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n      changesInspectorTab: params.changesInspectorTab,\n    })\n    return pruned\n  }, [\n    params.changesInspectorTab,\n    params.comment,\n    params.inspect,\n    params.instruction,\n    params.path,\n    params.pathKey,\n    params.parentRefPath,\n    params.rev,\n    params.since,\n    params.template,\n    params.templateParams,\n    params.view,\n  ])\n\n  const searchParams = useMemo<PresentationSearchParams>(() => {\n    const pruned = pruneObject({\n      perspective: params.perspective,\n      preview: params.preview,\n      viewport: params.viewport,\n    })\n    return pruned\n  }, [params.perspective, params.preview, params.viewport])\n\n  const routerStateRef = useRef(routerState)\n\n  useLayoutEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const [navigationHistory, setNavigationHistory] = useState<RouterState[]>([routerState])\n\n  // Helper function to check if a given document is the same as the one in the\n  // current router state\n  const isSameDocument = useCallback(({id, type}: PresentationStateParams) => {\n    const {current} = routerStateRef\n    return id === current.id && type === current.type\n  }, [])\n\n  const navigate = useCallback<PresentationNavigate>(\n    (options) => {\n      const {state, params, replace = false} = options\n\n      // Force navigation to use published IDs only\n      if (state?.id) state.id = getPublishedId(state.id)\n\n      // Get the current state and params\n      const {current} = routerStateRef\n      const currentState = {\n        id: current.id,\n        type: current.type,\n        path: current.path,\n      } satisfies PresentationStateParams\n      const currentParams = Object.fromEntries(current._searchParams || []) as CombinedSearchParams\n\n      // If state is provided, replace the current state with the provided\n      // state, otherwise maintain the current state\n      const nextState = state || currentState\n\n      // Different params need to be maintained under different conditions\n      const maintainedParamKeys = [\n        ...maintainOnDocumentChange,\n        ...(isSameDocument(nextState) ? maintainOnSameDocument : []),\n      ] satisfies (keyof CombinedSearchParams)[]\n\n      const maintainedParams = maintainedParamKeys.reduce((acc, key) => {\n        // @ts-expect-error changesInspectorTab union type doesn't play nicely\n        // here, if it were just a string it would be fine\n        acc[key] = currentParams[key]\n        return acc\n      }, {} as Partial<CombinedSearchParams>)\n\n      // If params are provided, merge them with the maintained params\n      const nextParams = {...maintainedParams, ...params}\n\n      const nextRouterState = {\n        ...nextState,\n        _searchParams: Object.entries(nextParams).reduce(\n          (acc, [key, value]) => [...acc, [key, value] as SearchParam],\n          [] as SearchParam[],\n        ),\n      } satisfies RouterState\n\n      setNavigationHistory((prev) => [...prev, nextRouterState])\n      routerNavigate(nextRouterState, {replace})\n    },\n    [isSameDocument, routerNavigate],\n  )\n\n  return {\n    isSameDocument,\n    navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  }\n}\n","import {type Controller} from '@sanity/comlink'\nimport {useCallback, useEffect, useState} from 'react'\n\nimport {POPUP_CHECK_INTERVAL} from './constants'\n\n/**\n * A hook for managing popup Window contexts\n *\n * This hook handles:\n * - Opening new popup Windows, and adding them as targets to the controller\n * - Tracking existing popup windows, and cleaning up closed popups\n *\n * @param controller - Comlink controller instance that manages communication\n * between Window contexts\n *\n * @returns An object containing:\n * - popups: A Set of currently open popup Window objects\n * - open: Function to open a new popup Window with the specified URL\n *\n */\nexport const usePopups = (\n  controller?: Controller,\n): {\n  popups: Set<Window>\n  open: (url: string) => void\n} => {\n  // State to keep track of open popup windows\n  const [popups, setPopups] = useState<Set<Window>>(() => new Set())\n\n  // Function to open a new popup window\n  const open = useCallback((url: string) => {\n    const source = window.open(url, '_blank')\n    if (source) {\n      setPopups((prev) => new Set(prev).add(source))\n    }\n  }, [])\n\n  // Handles syncing the existing popups with the controller\n  useEffect(() => {\n    const unsubs: Array<() => void> = []\n    if (popups.size && controller) {\n      // loop popups and add targets\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          unsubs.push(controller.addTarget(source))\n        }\n      }\n    }\n    return () => {\n      unsubs.forEach((unsub) => unsub())\n    }\n  }, [controller, popups])\n\n  // Checks for closed popups and removes them from the tracked Set\n  useEffect(() => {\n    if (popups.size) {\n      const interval = setInterval(() => {\n        const closed = new Set<Window>()\n        for (const source of popups) {\n          if (source && 'closed' in source && source.closed) {\n            closed.add(source)\n          }\n        }\n        if (closed.size) {\n          setPopups((prev) => {\n            const next = new Set(prev)\n            for (const source of closed) {\n              next.delete(source)\n            }\n            return next\n          })\n        }\n      }, POPUP_CHECK_INTERVAL)\n\n      return () => {\n        clearInterval(interval)\n      }\n    }\n    return undefined\n  }, [popups])\n\n  return {popups, open}\n}\n","import {usePerspective} from 'sanity'\n\nimport {type PresentationPerspective} from './types'\n\n/**\n * @internal\n */\nexport function usePresentationPerspective(): PresentationPerspective {\n  const {perspectiveStack, selectedPerspectiveName = 'drafts', selectedReleaseId} = usePerspective()\n  const perspective = (\n    selectedReleaseId ? perspectiveStack : selectedPerspectiveName\n  ) as PresentationPerspective\n  return perspective\n}\n","import {type StatusEvent} from '@sanity/comlink'\nimport {useCallback, useMemo, useState} from 'react'\n\nimport {type ConnectionStatus} from './types'\n\n/**\n * A hook that manages and returns the connection status of multiple channels\n *\n * returns an array containing the\n * current status and a function to update the status based on incoming events\n *\n * The status can be one of the following:\n * - 'connected': If any channel is connected\n * - 'connecting': If the first connection is being established\n * - 'reconnecting': If a reconnection is in progress\n * - 'idle': If no connections have been made yet\n *\n * The function to update the status takes a `StatusEvent` object which includes\n * the channel and the status\n */\nexport function useStatus(): [ConnectionStatus, (event: StatusEvent) => void] {\n  // State to keep track of the status of each channel\n  const [statusMap, setStatusMap] = useState(\n    new Map<string, {status: ConnectionStatus; hasConnected: boolean}>(),\n  )\n\n  // Memoized computation of the overall status based on the status of individual channels\n  const memoStatus = useMemo(() => {\n    const values = Array.from(statusMap.values())\n    // If any channel is connected, return the `connected` status\n    if (values.find(({status}) => status === 'connected')) {\n      return 'connected'\n    }\n    // If the initial connection is being established, return `connecting` status\n    const handshaking = values.filter(({status}) => status === 'connecting')\n    if (handshaking.length) {\n      return handshaking.some(({hasConnected}) => !hasConnected) ? 'connecting' : 'reconnecting'\n    }\n    // If nothing has happened yet, return `idle` status\n    return 'idle'\n  }, [statusMap])\n\n  // Callback to update the status map based on the received event\n  const setStatusFromEvent = useCallback((event: StatusEvent) => {\n    setStatusMap((prev) => {\n      const next = new Map(prev)\n      if (event.status === 'disconnected') {\n        // Remove the channel from the map if a disconnect event is received\n        next.delete(event.connection)\n      } else {\n        // Update the status and connection flag for the channel\n        const hasConnected =\n          next.get(event.connection)?.hasConnected || event.status === 'connected'\n        const status = event.status === 'handshaking' ? 'connecting' : event.status\n        next.set(event.connection, {status, hasConnected})\n      }\n      return next\n    })\n  }, [])\n\n  // Return the overall status and the function to update the status\n  return [memoStatus, setStatusFromEvent]\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport {\n  type Controller,\n  createConnectionMachine,\n  createController,\n  type Message,\n} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type PreviewKitNodeMsg,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n} from '@sanity/preview-url-secret/constants'\nimport {BoundaryElementProvider, Flex} from '@sanity/ui'\nimport {useActorRef, useSelector} from '@xstate/react'\nimport {lazy, Suspense, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type CommentIntentGetter,\n  COMMENTS_INSPECTOR_NAME,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  useProjectId,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {type RouterContextValue, useRouter} from 'sanity/router'\nimport {styled} from 'styled-components'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {DEFAULT_TOOL_NAME, EDIT_INTENT_MODE} from './constants'\nimport PostMessageFeatures from './features/PostMessageFeatures'\nimport {presentationMachine} from './machines/presentation-machine'\nimport {type PreviewUrlRef} from './machines/preview-url'\nimport {SharedStateProvider} from './overlays/SharedStateProvider'\nimport {Panel} from './panels/Panel'\nimport {Panels} from './panels/Panels'\nimport {PresentationContent} from './PresentationContent'\nimport {PresentationNavigateProvider} from './PresentationNavigateProvider'\nimport {usePresentationNavigator} from './PresentationNavigator'\nimport {PresentationParamsProvider} from './PresentationParamsProvider'\nimport {PresentationProvider} from './PresentationProvider'\nimport {Preview} from './preview/Preview'\nimport {\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationPluginOptions,\n  type PresentationStateParams,\n  type PresentationViewport,\n  type StructureDocumentPaneParams,\n  type VisualEditingConnection,\n} from './types'\nimport {useAllowPatterns} from './useAllowPatterns'\nimport {useDocumentsOnPage} from './useDocumentsOnPage'\nimport {useMainDocument} from './useMainDocument'\nimport {useParams} from './useParams'\nimport {usePopups} from './usePopups'\nimport {usePresentationPerspective} from './usePresentationPerspective'\nimport {useStatus} from './useStatus'\nimport {useTargetOrigin} from './useTargetOrigin'\nimport {debounce} from './util/debounce'\n\nconst LiveQueries = lazy(() => import('./loader/LiveQueries'))\nconst PostMessageDocuments = lazy(() => import('./overlays/PostMessageDocuments'))\nconst PostMessageRefreshMutations = lazy(() => import('./editor/PostMessageRefreshMutations'))\nconst PostMessagePerspective = lazy(() => import('./PostMessagePerspective'))\nconst PostMessagePreviewSnapshots = lazy(() => import('./editor/PostMessagePreviewSnapshots'))\nconst PostMessageSchema = lazy(() => import('./overlays/schema/PostMessageSchema'))\nconst PostMessageTelemetry = lazy(() => import('./PostMessageTelemetry'))\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  vercelProtectionBypass: string | null\n  initialPreviewUrl: URL\n  previewUrlRef: PreviewUrlRef\n}): React.JSX.Element {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    tool,\n    vercelProtectionBypass,\n    initialPreviewUrl,\n    previewUrlRef,\n  } = props\n\n  const allowOrigins = useAllowPatterns(previewUrlRef)\n  const targetOrigin = useTargetOrigin(previewUrlRef)\n\n  const components = tool.options?.components\n  const name = tool.name || DEFAULT_TOOL_NAME\n  const {unstable_navigator, unstable_header} = components || {}\n\n  const {navigate: routerNavigate, state: routerState} = useRouter() as RouterContextValue & {\n    state: PresentationStateParams\n  }\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n  const perspective = usePresentationPerspective()\n\n  const canSharePreviewAccess = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewMode?.shareAccess !== false,\n  )\n\n  const [devMode] = useState(() => {\n    const option = tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return typeof window !== 'undefined' && window.location.hostname === 'localhost'\n  })\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [controller, setController] = useState<Controller>()\n  const [visualEditingComlink, setVisualEditingComlink] = useState<VisualEditingConnection | null>(\n    null,\n  )\n\n  const frameStateRef = useRef<FrameState>({\n    title: undefined,\n    url: undefined,\n  })\n\n  const {isSameDocument, navigate, navigationHistory, params, searchParams, structureParams} =\n    useParams({\n      initialPreviewUrl,\n      routerNavigate,\n      routerState,\n      routerSearchParams,\n      frameStateRef,\n    })\n\n  const presentationRef = useActorRef(presentationMachine)\n\n  const viewport = useMemo(() => (params.viewport ? 'mobile' : 'desktop'), [params.viewport])\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective, frameStateRef)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const mainDocumentState = useMainDocument({\n    navigate,\n    navigationHistory,\n    path: params.preview,\n    targetOrigin,\n    resolvers: tool.options?.resolve?.mainDocuments,\n  })\n\n  const [overlaysConnection, setOverlaysConnection] = useStatus()\n  const [loadersConnection, setLoadersConnection] = useStatus()\n  const [previewKitConnection, setPreviewKitConnection] = useStatus()\n\n  const {open: handleOpenPopup} = usePopups(controller)\n\n  const isLoading = useSelector(presentationRef, (state) => state.matches('loading'))\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target || isLoading) return undefined\n\n    const controller = createController({targetOrigin})\n    controller.addTarget(target)\n    setController(controller)\n\n    return () => {\n      controller.destroy()\n      setController(undefined)\n    }\n  }, [targetOrigin, isLoading])\n\n  const handleNavigate = useEffectEvent<PresentationNavigate>((options) => {\n    navigate(options)\n  })\n\n  useEffect(() => {\n    if (!controller) return undefined\n\n    const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n      {\n        name: 'presentation',\n        heartbeat: true,\n        connectTo: 'visual-editing',\n      },\n      createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n      }),\n    )\n\n    comlink.on('visual-editing/focus', (data) => {\n      if (!('id' in data)) return\n      handleNavigate({\n        state: {\n          type: data.type,\n          id: data.id,\n          path: data.path,\n        },\n      })\n    })\n\n    comlink.on('visual-editing/navigate', (data) => {\n      const {title} = data\n      let url = data.url\n      /**\n       * The URL is relative, we need to resolve it to an absolute URL\n       */\n      if (!url.startsWith('http')) {\n        try {\n          url = new URL(url, targetOrigin).toString()\n        } catch {\n          // ignore\n        }\n      }\n\n      if (frameStateRef.current.url !== url) {\n        try {\n          // Handle bypass params being forwarded to the final URL\n          const [urlWithoutSearch, search] = url.split('?')\n          const searchParams = new URLSearchParams(search)\n          searchParams.delete(urlSearchParamVercelProtectionBypass)\n          searchParams.delete(urlSearchParamVercelSetBypassCookie)\n          handleNavigate({\n            params: {\n              preview: `${urlWithoutSearch}${searchParams.size > 0 ? '?' : ''}${searchParams}`,\n            },\n          })\n        } catch {\n          handleNavigate({params: {preview: url}})\n        }\n      }\n      frameStateRef.current = {title, url}\n    })\n\n    comlink.on('visual-editing/meta', (data) => {\n      frameStateRef.current.title = data.title\n    })\n\n    comlink.on('visual-editing/toggle', (data) => {\n      presentationRef.send({type: 'toggle visual editing overlays', enabled: data.enabled})\n    })\n\n    comlink.on('visual-editing/documents', (data) => {\n      setDocumentsOnPage(\n        'visual-editing',\n        // oxlint-disable-next-line no-explicit-any\n        data.perspective as unknown as any,\n        data.documents,\n      )\n    })\n\n    // @todo This won't work for multiple window contexts?\n    comlink.on('visual-editing/refreshing', (data) => {\n      if (data.source === 'manual') {\n        clearTimeout(refreshRef.current)\n      } else if (data.source === 'mutation') {\n        presentationRef.send({type: 'iframe refresh'})\n      }\n    })\n\n    comlink.on('visual-editing/refreshed', () => {\n      presentationRef.send({type: 'iframe loaded'})\n    })\n\n    comlink.onStatus(setOverlaysConnection)\n\n    const stop = comlink.start()\n    setVisualEditingComlink(comlink)\n    return () => {\n      stop()\n      setVisualEditingComlink(null)\n    }\n  }, [controller, presentationRef, setDocumentsOnPage, setOverlaysConnection, targetOrigin])\n\n  useEffect(() => {\n    if (!controller) return undefined\n    const comlink = controller.createChannel<Message, PreviewKitNodeMsg>(\n      {\n        name: 'presentation',\n        connectTo: 'preview-kit',\n        heartbeat: true,\n      },\n      createConnectionMachine<Message, PreviewKitNodeMsg>().provide({\n        actors: createCompatibilityActors(),\n      }),\n    )\n\n    comlink.onStatus(setPreviewKitConnection)\n\n    comlink.on('preview-kit/documents', (data) => {\n      if (data.projectId === projectId && data.dataset === dataset) {\n        setDocumentsOnPage(\n          'preview-kit',\n          // oxlint-disable-next-line no-explicit-any\n          data.perspective as unknown as any,\n          data.documents,\n        )\n      }\n    })\n\n    return comlink.start()\n  }, [controller, dataset, projectId, setDocumentsOnPage, setPreviewKitConnection, targetOrigin])\n\n  const handleFocusPath = useMemo(\n    () =>\n      // When moving from one field to another, blur and focus events will trigger\n      // this handler. We debounce to avoid unwanted intermediate navigations this\n      // would cause.\n      debounce<(state: Required<PresentationStateParams>) => void>((state) => {\n        // We only ever want to update the path if we are still viewing the\n        // document that was active when the focus event was triggered\n        if (isSameDocument(state)) {\n          navigate({\n            state,\n            replace: true,\n          })\n        }\n      }, 0),\n    [isSameDocument, navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, targetOrigin)\n      const preview = url.toString()\n      if (params.preview === preview) {\n        return\n      }\n      if (Array.isArray(allowOrigins)) {\n        if (allowOrigins.some((pattern) => pattern.test(preview))) {\n          navigate({params: {preview}})\n        }\n      } else if (url.origin === targetOrigin) {\n        navigate({params: {preview}})\n      }\n    },\n    [targetOrigin, params.preview, allowOrigins, navigate],\n  )\n\n  const handleStructureParams = useCallback(\n    (params: StructureDocumentPaneParams) => {\n      navigate({params})\n    },\n    [navigate],\n  )\n\n  const handleEditReference = useCallback<PresentationNavigate>(\n    (options) => {\n      navigate(options)\n    },\n    [navigate],\n  )\n\n  // Dispatch a focus or blur message when the id or path change\n  useEffect(() => {\n    if (params.id && params.path) {\n      visualEditingComlink?.post('presentation/focus', {id: params.id, path: params.path})\n    } else {\n      visualEditingComlink?.post('presentation/blur')\n    }\n  }, [params.id, params.path, visualEditingComlink])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      frameStateRef.current.url &&\n      params.preview &&\n      frameStateRef.current.url !== params.preview\n    ) {\n      try {\n        const frameOrigin = new URL(frameStateRef.current.url, targetOrigin).origin\n        const previewOrigin = new URL(params.preview, targetOrigin).origin\n        if (frameOrigin !== previewOrigin) {\n          return\n        }\n      } catch {\n        // ignore\n      }\n\n      frameStateRef.current.url = params.preview\n      if (overlaysConnection === 'connected') {\n        /**\n         * Translate the possibly absolute params url back to a relative URL\n         */\n        let url = params.preview\n        if (url.startsWith('http')) {\n          try {\n            const newUrl = new URL(params.preview, targetOrigin)\n            url = newUrl.pathname + newUrl.search + newUrl.hash\n          } catch {\n            // ignore\n          }\n        }\n        visualEditingComlink?.post('presentation/navigate', {\n          url,\n          type: 'replace',\n        })\n      }\n    }\n  }, [overlaysConnection, targetOrigin, params.preview, visualEditingComlink])\n\n  const toggleOverlay = useCallback(\n    () => visualEditingComlink?.post('presentation/toggle-overlay'),\n    [visualEditingComlink],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const [{navigatorEnabled, toggleNavigator}, PresentationNavigator] = usePresentationNavigator({\n    unstable_navigator,\n  })\n\n  const refreshRef = useRef<number>(undefined)\n  const handleRefresh = useCallback(\n    (fallback: () => void) => {\n      presentationRef.send({type: 'iframe refresh'})\n      if (visualEditingComlink) {\n        // We only wait 300ms for the iframe to ack the refresh request before running the fallback logic\n        refreshRef.current = window.setTimeout(fallback, 300)\n        visualEditingComlink.post('presentation/refresh', {\n          source: 'manual',\n          livePreviewEnabled:\n            previewKitConnection === 'connected' || loadersConnection === 'connected',\n        })\n        return\n      }\n      fallback()\n    },\n    [loadersConnection, presentationRef, previewKitConnection, visualEditingComlink],\n  )\n\n  const workspace = useWorkspace()\n\n  const getCommentIntent = useCallback<CommentIntentGetter>(\n    ({id, type, path}) => {\n      if (frameStateRef.current.url) {\n        return {\n          title: frameStateRef.current.title || frameStateRef.current.url,\n          name: 'edit',\n          params: {\n            id,\n            path,\n            type,\n            inspect: COMMENTS_INSPECTOR_NAME,\n            workspace: workspace.name,\n            mode: EDIT_INTENT_MODE,\n            preview: params.preview,\n          },\n        }\n      }\n      return undefined\n    },\n    [params.preview, workspace.name],\n  )\n\n  const setViewport = useCallback(\n    (next: PresentationViewport) => {\n      // Omit the viewport URL search param if the next viewport state is the\n      // default: 'desktop'\n      const viewport = next === 'desktop' ? undefined : 'mobile'\n      navigate({\n        params: {viewport},\n        replace: true,\n      })\n    },\n    [navigate],\n  )\n\n  return (\n    <>\n      <PresentationProvider\n        devMode={devMode}\n        name={name}\n        navigate={navigate}\n        params={params}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <SharedStateProvider comlink={visualEditingComlink}>\n              <Container data-testid=\"presentation-root\" height=\"fill\">\n                <Panels>\n                  <PresentationNavigator />\n                  <Panel\n                    id=\"preview\"\n                    minWidth={325}\n                    defaultSize={navigatorEnabled ? 50 : 75}\n                    order={3}\n                  >\n                    <Flex direction=\"column\" flex={1} height=\"fill\" ref={setBoundaryElement}>\n                      <BoundaryElementProvider element={boundaryElement}>\n                        <Preview\n                          // @TODO move closer to the <iframe> element itself to allow for more precise handling of when to reload the iframe and when to reconnect when the target origin changes\n                          // Make sure the iframe is unmounted if the targetOrigin has changed\n                          key={targetOrigin}\n                          canSharePreviewAccess={canSharePreviewAccess}\n                          canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n                          canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n                          header={unstable_header}\n                          initialUrl={initialPreviewUrl}\n                          loadersConnection={loadersConnection}\n                          navigatorEnabled={navigatorEnabled}\n                          onPathChange={handlePreviewPath}\n                          onRefresh={handleRefresh}\n                          openPopup={handleOpenPopup}\n                          overlaysConnection={overlaysConnection}\n                          previewUrl={params.preview}\n                          perspective={perspective}\n                          ref={iframeRef}\n                          setViewport={setViewport}\n                          targetOrigin={targetOrigin}\n                          toggleNavigator={toggleNavigator}\n                          toggleOverlay={toggleOverlay}\n                          viewport={viewport}\n                          vercelProtectionBypass={vercelProtectionBypass}\n                          presentationRef={presentationRef}\n                          previewUrlRef={previewUrlRef}\n                        />\n                      </BoundaryElementProvider>\n                    </Flex>\n                  </Panel>\n                  <PresentationContent\n                    documentId={params.id}\n                    documentsOnPage={documentsOnPage}\n                    documentType={params.type}\n                    getCommentIntent={getCommentIntent}\n                    mainDocumentState={mainDocumentState}\n                    onEditReference={handleEditReference}\n                    onFocusPath={handleFocusPath}\n                    onStructureParams={handleStructureParams}\n                    searchParams={searchParams}\n                    setDisplayedDocument={setDisplayedDocument}\n                    structureParams={structureParams}\n                  />\n                </Panels>\n              </Container>\n            </SharedStateProvider>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      <Suspense>\n        {controller && (\n          <LiveQueries\n            controller={controller}\n            perspective={perspective}\n            liveDocument={displayedDocument}\n            onDocumentsOnPage={setDocumentsOnPage}\n            onLoadersConnection={setLoadersConnection}\n          />\n        )}\n        {visualEditingComlink && params.id && params.type && (\n          <PostMessageRefreshMutations\n            comlink={visualEditingComlink}\n            id={params.id}\n            type={params.type}\n            loadersConnection={loadersConnection}\n            previewKitConnection={previewKitConnection}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageSchema comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && documentsOnPage.length > 0 && (\n          <PostMessagePreviewSnapshots\n            comlink={visualEditingComlink}\n            perspective={perspective}\n            refs={documentsOnPage}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageDocuments comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageFeatures comlink={visualEditingComlink} />}\n        {visualEditingComlink && (\n          <PostMessagePerspective comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageTelemetry comlink={visualEditingComlink} />}\n      </Suspense>\n    </>\n  )\n}\n\n// @TODO reconcile with core utils\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n\n// @TODO reconcile with core utils\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\n// @TODO reconcile with core utils\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\n","import {createPreviewSecret} from '@sanity/preview-url-secret/create-secret'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\n/** @internal */\nexport function defineCreatePreviewSecretActor({\n  client,\n  currentUserId,\n}: {\n  client: SanityClient\n  currentUserId: string | undefined\n}): PromiseActorLogic<{\n  secret: string\n  expiresAt: Date\n}> {\n  return fromPromise(async () => {\n    return await createPreviewSecret(client, 'sanity/presentation', location.href, currentUserId)\n  })\n}\n","import {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\n/** @internal */\nexport function defineReadSharedSecretActor({\n  client,\n}: {\n  client: SanityClient\n}): PromiseActorLogic<string | null> {\n  return fromPromise(async () => {\n    return client.fetch<string | null>(\n      fetchSharedAccessQuery,\n      {},\n      {tag: 'presentation.fallback-to-shared-access-secret'},\n    )\n  })\n}\n","import {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {type PreviewUrlAllowOption, type PreviewUrlAllowOptionContext} from '../types'\n\ninterface Context extends Pick<PreviewUrlAllowOptionContext, 'client'> {\n  allowOption: PreviewUrlAllowOption | undefined\n}\ntype Input = Omit<PreviewUrlAllowOptionContext, 'client' | 'origin'>\n\n/** @internal */\nexport function defineResolveAllowPatternsActor({\n  client,\n  allowOption,\n}: Context): PromiseActorLogic<URLPattern[], Input> {\n  return fromPromise<URLPattern[], Input>(async ({input}) => {\n    const {initialUrl} = input\n\n    /**\n     * Lazy load the URLPattern polyfill on-demand, if needed\n     */\n    if (typeof URLPattern === 'undefined') {\n      await import('urlpattern-polyfill')\n    }\n\n    /**\n     * If no allow option is provided, we use the initial URL to infer the pattern\n     */\n    if (!allowOption) {\n      return [new URLPattern(initialUrl.origin)]\n    }\n\n    const maybePatterns =\n      typeof allowOption === 'function'\n        ? await allowOption({client, origin, initialUrl})\n        : allowOption\n    const patterns = Array.isArray(maybePatterns) ? maybePatterns : [maybePatterns]\n    const urlPatterns = patterns.map((value) => {\n      const urlPattern = new URLPattern(value)\n      if (urlPattern.hostname === '*') {\n        throw new Error(\n          `It's insecure to allow any hostname, it could disclose data to a malicious site`,\n        )\n      }\n      return urlPattern\n    })\n    /**\n     * If the declared patterns don't consider the initial URL valid, we add it to the list of patterns\n     */\n    if (!urlPatterns.some((pattern) => pattern.test(initialUrl.origin))) {\n      return [...urlPatterns, new URLPattern(initialUrl.origin)]\n    }\n\n    return urlPatterns\n  })\n}\n","import {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {type PresentationPerspective, type PreviewUrlOption} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\n\n/** @internal */\nexport function defineResolveInitialUrlActor({\n  client,\n  studioBasePath,\n  previewUrlOption,\n  perspective,\n}: {\n  client: SanityClient\n  studioBasePath: string\n  previewUrlOption: PreviewUrlOption | undefined\n  perspective: PresentationPerspective\n}): PromiseActorLogic<URL, {previewSearchParam: string | null}> {\n  return fromPromise<URL, {previewSearchParam: string | null}>(\n    async ({input}: {input: {previewSearchParam: string | null}}) => {\n      const {origin} = location\n      /**\n       * If the previewUrlOption is a function, we need to resolve it and maintain backwards compatibility\n       */\n      if (typeof previewUrlOption === 'function') {\n        const initial = await previewUrlOption({\n          client,\n          studioBasePath,\n          // @TODO handle checking permissions here, and then generating a secret\n          previewUrlSecret: '',\n          studioPreviewPerspective: encodeStudioPerspective(perspective),\n          previewSearchParam: input.previewSearchParam,\n        })\n        return new URL(initial, origin)\n      }\n\n      /**\n       * Provide backwards compatibility for versions where `previewUrl` where optional\n       */\n      if (!previewUrlOption) {\n        return new URL('/', origin)\n      }\n      /**\n       * Support setting `previewUrl` as a string shorthand\n       */\n      if (typeof previewUrlOption === 'string') {\n        return new URL(previewUrlOption, origin)\n      }\n\n      if (typeof previewUrlOption.initial === 'function') {\n        const initial = await previewUrlOption.initial({\n          client,\n          origin,\n        })\n        return new URL(initial, origin)\n      }\n\n      if (typeof previewUrlOption.initial === 'string') {\n        return new URL(previewUrlOption.initial, origin)\n      }\n\n      return new URL(previewUrlOption.preview || '/', previewUrlOption.origin || origin)\n    },\n  )\n}\n","import {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {\n  type PreviewUrlOption,\n  type PreviewUrlPreviewMode,\n  type PreviewUrlPreviewModeOptionContext,\n} from '../types'\n\ntype Options = Omit<PreviewUrlPreviewModeOptionContext, 'origin'>\n\ninterface Context extends Pick<Options, 'client'> {\n  previewUrlOption: PreviewUrlOption | undefined\n}\ntype Input = Omit<Options, 'client'>\n\n/** @internal */\nexport function defineResolvePreviewModeActor({\n  client,\n  previewUrlOption,\n}: Context): PromiseActorLogic<PreviewUrlPreviewMode | false, Input> {\n  return fromPromise<PreviewUrlPreviewMode | false, Input>(async ({input}) => {\n    const {targetOrigin} = input\n\n    /**\n     * Handle legacy draftMode options\n     */\n    if (typeof previewUrlOption === 'object' && previewUrlOption?.draftMode) {\n      return {\n        enable: previewUrlOption.draftMode.enable,\n        shareAccess: previewUrlOption.draftMode.shareAccess ?? true,\n      }\n    }\n\n    /**\n     * If no preview mode option is provided, we disable preview mode\n     */\n    if (\n      !previewUrlOption ||\n      typeof previewUrlOption === 'string' ||\n      typeof previewUrlOption === 'function' ||\n      !previewUrlOption.previewMode\n    ) {\n      return false\n    }\n\n    /**\n     * If the option is a function, we resolve it\n     */\n    const previewMode =\n      typeof previewUrlOption.previewMode === 'function'\n        ? await previewUrlOption.previewMode({client, origin, targetOrigin})\n        : previewUrlOption.previewMode\n\n    if (previewMode === false) {\n      return false\n    }\n\n    /**\n     * Return only supported preview mode options, filter out unknowns\n     */\n    return {\n      enable: previewMode.enable,\n      shareAccess: previewMode.shareAccess ?? true,\n    }\n  })\n}\n","import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n} from '@sanity/preview-url-secret/constants'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {\n  type PresentationPerspective,\n  type PreviewUrlOption,\n  type PreviewUrlPreviewMode,\n} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\n\n/** @internal */\nexport interface ResolvePreviewModeUrlInput {\n  previewUrlSecret: string\n  resolvedPreviewMode: PreviewUrlPreviewMode\n  initialUrl: URL\n}\n\n/** @internal */\nexport function defineResolvePreviewModeUrlActor({\n  client,\n  studioBasePath,\n  previewUrlOption,\n  perspective,\n}: {\n  client: SanityClient\n  studioBasePath: string\n  previewUrlOption: PreviewUrlOption | undefined\n  perspective: PresentationPerspective\n}): PromiseActorLogic<URL, ResolvePreviewModeUrlInput> {\n  return fromPromise<URL, ResolvePreviewModeUrlInput>(async ({input}) => {\n    const {previewUrlSecret, resolvedPreviewMode, initialUrl} = input\n\n    /**\n     * If the previewUrlOption is a function, we need to resolve it and maintain backwards compatibility\n     */\n    if (typeof previewUrlOption === 'function') {\n      const initial = await previewUrlOption({\n        client,\n        studioBasePath,\n        previewUrlSecret,\n        studioPreviewPerspective: encodeStudioPerspective(perspective),\n        previewSearchParam: initialUrl.toString(),\n      })\n      return new URL(initial, initialUrl)\n    }\n\n    /**\n     * If the resolved preview mode is false then we have an unexpected state that shouldn't be possible\n     */\n    if (!resolvedPreviewMode) {\n      throw new Error('Resolved preview mode is false')\n    }\n\n    const url = new URL(resolvedPreviewMode.enable, initialUrl)\n\n    url.searchParams.set(urlSearchParamPreviewSecret, previewUrlSecret)\n    url.searchParams.set(urlSearchParamPreviewPerspective, encodeStudioPerspective(perspective))\n    if (initialUrl.pathname !== url.pathname) {\n      url.searchParams.set(\n        urlSearchParamPreviewPathname,\n        `${initialUrl.pathname}${initialUrl.search}${initialUrl.hash}`,\n      )\n    }\n\n    return url\n  })\n}\n","import {fromPromise} from 'xstate'\n\n/** @internal */\nexport const resolveUrlFromPreviewSearchParamActor = fromPromise<\n  URL,\n  {initialUrl: URL; previewSearchParam: string | null | undefined; allowOrigins: URLPattern[]}\n>(async ({input}) => {\n  const {previewSearchParam, initialUrl, allowOrigins} = input\n\n  /**\n   * If the preview search param is falsy we can skip\n   */\n  if (!previewSearchParam) {\n    return initialUrl\n  }\n\n  /**\n   * Validate the previewSearchParam\n   */\n  try {\n    const previewSearchParamUrl = new URL(previewSearchParam, initialUrl.origin)\n    if (!allowOrigins.some((pattern) => pattern.test(previewSearchParamUrl.origin))) {\n      return initialUrl\n    }\n    return previewSearchParamUrl\n  } catch (err) {\n    return initialUrl\n  }\n})\n","import {\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n} from '@sanity/preview-url-secret/constants'\nimport {type SanityDocument} from '@sanity/types'\nimport {uuid} from '@sanity/uuid'\nimport {throwError} from 'rxjs'\nimport {type DocumentValuePermission, type PermissionCheckResult} from 'sanity'\nimport {type ActorRefFrom, assign, fromObservable, fromPromise, log, setup} from 'xstate'\n\nimport {type ResolvePreviewModeUrlInput} from '../actors/resolve-preview-mode-url'\nimport {resolveUrlFromPreviewSearchParamActor} from '../actors/resolve-url-from-preview-search-param'\nimport {type PreviewUrlPreviewMode} from '../types'\n\ninterface Context {\n  initialUrl: URL | null\n  previewUrl: URL | null\n  allowOrigins: URLPattern[] | null\n  error: Error | null\n  previewSearchParam: string | null\n  previewUrlSecret: {secret: string; expiresAt: Date} | null\n  previewAccessSharingCreatePermission: PermissionCheckResult | null\n  previewAccessSharingReadPermission: PermissionCheckResult | null\n  previewAccessSharingUpdatePermission: PermissionCheckResult | null\n  previewUrlSecretPermission: PermissionCheckResult | null\n  previewMode: PreviewUrlPreviewMode | null\n}\n\ntype SetPreviewSearchParamEvent = {\n  type: 'set preview search param'\n  previewSearchParam: string | null\n}\ntype Event = SetPreviewSearchParamEvent\n\ntype Input = Omit<SetPreviewSearchParamEvent, 'type'>\n\nexport interface CheckPermissionInput {\n  checkPermissionName: DocumentValuePermission\n  document: Partial<SanityDocument> | null\n}\n\n/**\n * Used for permissions checks\n */\nexport const shareAccessSingletonDocument = {_id: schemaIdSingleton, _type: schemaTypeSingleton}\nexport const previewUrlSecretDocument = {\n  _id: `drafts.${uuid()}`,\n  _type: schemaType,\n}\n\nexport const previewUrlMachine = setup({\n  types: {} as {\n    context: Context\n    events: Event\n    input: Input\n    tags: 'busy' | 'error'\n  },\n  actions: {\n    'notify preview will likely fail': log(\n      `Missing permissions to create preview secret, or read shared preview secret. Preview will likely fail loading.`,\n    ),\n    'assign preview search param': assign({\n      previewSearchParam: (_, params: {previewSearchParam: string | null}) =>\n        params.previewSearchParam,\n    }),\n    'assign error': assign({\n      error: (_, params: {message: string; error: unknown}) => {\n        return params.error instanceof Error\n          ? params.error\n          : new Error(params.message, {cause: params.error})\n      },\n    }),\n  },\n  actors: {\n    'check permission': fromObservable<PermissionCheckResult, CheckPermissionInput>(() =>\n      throwError(\n        () =>\n          new Error(\n            `The 'check permission' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'check permission': fromObservable(({input}: {input: CheckPermissionInput}) => ...)}})`,\n          ),\n      ),\n    ),\n    'resolve initial url': fromPromise<URL, {previewSearchParam: string | null}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve initial url' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve initial url': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve allow patterns': fromPromise<URLPattern[], {initialUrl: URL}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve allow patterns' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve allow pattern': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve url from preview search param': resolveUrlFromPreviewSearchParamActor,\n    'resolve preview mode': fromPromise<PreviewUrlPreviewMode | false, {targetOrigin: string}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve preview mode' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve preview mode': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'create preview secret': fromPromise<{\n      secret: string\n      expiresAt: Date\n    }>(async () =>\n      Promise.reject(\n        new Error(\n          `The 'create preview secret' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'create preview secret': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'read shared preview secret': fromPromise<string | null>(async () =>\n      Promise.reject(\n        new Error(\n          `The 'read shared preview secret' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'read shared preview secret': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve preview mode url': fromPromise<URL, ResolvePreviewModeUrlInput>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve preview mode url' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve preview mode url': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n  },\n  guards: {\n    'has checked permissions': ({context}) => {\n      return Boolean(\n        context.previewAccessSharingCreatePermission &&\n          context.previewAccessSharingReadPermission &&\n          context.previewAccessSharingUpdatePermission &&\n          context.previewUrlSecretPermission,\n      )\n    },\n    'search param has new origin': ({context, event}) => {\n      if (!context.previewUrl || !event.previewSearchParam) {\n        return false\n      }\n      try {\n        const previewSearchParamUrl = new URL(event.previewSearchParam, context.previewUrl)\n        return context.previewUrl.origin !== previewSearchParamUrl.origin\n      } catch {\n        return false\n      }\n    },\n    'can create preview secret': ({context}) => {\n      return context.previewUrlSecretPermission?.granted === true\n    },\n\n    'has preview mode with created secret': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return context.previewUrlSecretPermission?.granted === true\n    },\n    'has preview mode with share access': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return context.previewAccessSharingReadPermission?.granted === true\n    },\n    'has preview mode without permissions': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return (\n        context.previewAccessSharingReadPermission?.granted === false &&\n        context.previewUrlSecretPermission?.granted === false\n      )\n    },\n  },\n  delays: {\n    expiredSecret: ({context}) => {\n      if (!context.previewUrlSecret?.expiresAt) {\n        return 0\n      }\n      const now = Date.now()\n      const expiresAt = context.previewUrlSecret.expiresAt.getTime()\n      return Math.max(expiresAt - now, 0)\n    },\n  },\n}).createMachine({\n  // eslint-disable-next-line tsdoc/syntax\n  /** @xstate-layout N4IgpgJg5mDOIC5QAUBOYBuBLMB3ABAKoBKAMgMRiqoD2qAdAA4A2AhgC4BmdAtvWphwESpBFgB2GGgGMOWGuIDaABgC6K1YlCMasLO3nitIAB6IArAA56AZgCcAdkcBGS8vMAmO+YBszgDQgAJ6Izs4+9M7KACzKztGWHg4OPubmAL7pgQLYeERklNR0TGxcvPzoucJkYpIycgqKzupqxjp6BgrGZggAtM520ZHRdjZjNjFe7oEhCGERUbHxicmpGVkgOUL5FFS0DCwc3Kh8W3kitVKynUoeLZpIIO36ht2IvV62Hl7elmE2lh83xmoXCkRicQSSRS5gSmWylW2IkK+xKR3KZ2qogkVwaShs9zauheXUePV6gPo3jSUyi-xBczBi0hKxh5mc8M2iPOBVgYHY+EY3IIfNYqGkAAtBWLWDwNESOq8yaCbM56A4bB5fGllHYvD4fAz4h56CNfG5LKqHMpLdFOZidvRJWBpABrCRQZBUHhYWB6BSwcjyx7PG5vPrs5TqjWqyyjTXRDwMjwxei68J2ZQ2nyWXN2jYOkT0dCwGjMbDiKAASXEL1YzEIqGY5AgCjA9BxNFd7cLZGLcDLFertYM9cbzEu9RuGmD2mJYeVfRGdipyh86Yc0XiE3MDK3JssIwcrmtPjGSXzCMEPNI-dL5Y9NbrDabKOKhzKJwq16xd8Hj5HLAxybSdrkMGdWhDeclVAclN3odlzBsKwBjSSxjwcZM7DVeJ1w8P4xmidk7HtYVHRLf9KwAQWYZgaFwZAOHYKhxEDVtxHbTtu2-KpyIHB9qNo+jGPYZjUFY0C8Qgh450VUlYPedkHHoHwnDSZDVOiGwfGiBlUhXXwwjsQYtKSYzSJ-Pj7yHGi6IYpiWMDPZ31KY5TjIosKIEqBbOEhzxNgSTpzUWcnmg+TTHePV6Hw3MYgzaItJ0hlYRNTNkLiHxBl1GILN4zz+KHccADFaB4TEAGUwDFSVGNQWUWzbDs6m43tby8oqm1KmhyuFKqaolOrZSC8CQsg2SSSMRdel8ZSNUTdlcw8M07AZQZrDXdaDRtUZnHWK98r7DqPRKsrKuq8VBplHg3wOVyMQ8o7CpOrqzr6i7auukbGjGmSwrkqaFL6MJlLiWFlC1EGty0hknAiXVVPMRx12UJwOQLR72ueytMQAWRoCAwEajjmqkVrMb-by8YJsBvqUX6FUm8Nem2+hbWPUZErGTcjS8NUJg8AE9T1ZwHHwvKkSe6yPWpwnic4lqewp46ceFfHCbpmdmkZhcgZmyxzFsDmTPcXUUiNRKDy3ZQJlVLSkYlm9KaHWWifYhWyaVyyCul1Wf3V2nOzAn71DuHWYMivovGsBxPCy74beWaJDWCUJzBSFTrUcQYdMzIFHd-FXPTVmn5dJrsvcOrHfeL-2ac1kKCXDiLyWcNKJiiHM-BtONwgtnMEM1DVNwhhI7B8AurMo2uqgD260U-dzval6fXYbwkoIB5moijLLkm5tvYRBo1nGQtND11ZaIdzEiMeX6vV5LuW+QFIVLNFS7pXquVxv+pnF1FtYP4OY7AG3QohJMqcEDeGUq4NwYQBhLEnkWWAABXaQ0g4CBhfoKMiH9JRf1lKFUMEceiizVPA0+7gtQQy8LzXU6obaJTFtEJwHhXDIL7G-WepccHcO2PgqUjBrrEPCoDSOFI3C2AGHtQ8sIiJJGTILZS7JRaeGSKw7CnDbz8LwAHJ06AOBgHOtIdA7Ay5cUrpLHRT92ymOqsxExZj16iK3gAqI6oaQ6QtE4YylhkynzmkCBGNgNR7VvgdaxTBbEGIccY969jzHOTuuiL8bVol10JrEoxTj+QuN-iQlu7xwjKX1P8bSTC0hGhcKaBIOZAQGkBKE7RGSeFZMMRACqEoxRgCohgrBFjFY8Sibo3A+iOldJ6X0zBfp8l-UKeIshjgqTGTiPYPaGotS7igd8QWtgsp6iQnFOEd8q6tKEOM6qnTunoGmQM5JC83LDKdqMy5rBrlTP6bMoOUkGab3-kDU+ERVEpnsEjDRVSdljBXKeQY3h5gOBaa8mmzt4k-nHIMz2zzfzIvaYVNFVRxxzObosxAfg1Q2jSOERIh5kIBNGKaNZ2lvjhFhEimJHUCVCAxQ8j8Tz0m4vbJyzERKfnBQ3hNXWkdyWeJsCMVhqNsK6mTO4Q2Q9DysLCEhDw7LMntjQV8wMJhYDsCMfQVgnAxIAAowAmEYFgdAnSXRmIAJTkAFTEg1MzYCuIBZHKYKlUiqWwrCMJkDZgDAYceRMfwUisPYZYTIGxxA03gI8NqJLmZ6msKqENcjErqIZL0cethvDGXLew9hiYWnOjdDLb0vp-SsUzdNcwEMEJ7WTohDMfgU4RpTCpUJnhYrHghuEFpRcnyjhfMwFtet2Q2FNOwsWZarBan8TsuMkRvhIzPJGDwmkWnJLnf6g0aZl0mQTURDdsxYiGwwsRIEgwEwTuxj5IS9lRKORPeSJCOF4XgrUZqbZsxwZszcJtbC4RUg2FfTXU6PVzoDSGjwH9ik-gxRGG4NtxkkZblhgyxIhFQG5lSPEODj89VoYjKqGKURkij0zImXSUCwiozZuDLUCQQY6tOVEr1WDqMsxNCkP4RFPBZj+I4I0qoRMODjIlceBzkK6raWAIT7DDZlNPhUuVkKI0pEXbHBISF1yAiIqpi5KL7E5ISWYoTna2b6Qg+DcFN7EAphLdpdOWVoPJ0RXxl5HKrmTNuYahzaQviaQPVERa8mlGeBUnnQyDStSwcCzi4L1kuV4HHNR4DCFdRaVVFSzcZ4VVIVsDEVhZ5QnWlYZZvRKLj3-KlT0FIKjVRZghkCXwqkjQGzVFxvOMisoWYy46QV9ABN+mo3mFZZ427lp032jzVa2bJGtCUtciak1AA */\n  id: 'Preview URL',\n  context: ({input}) => ({\n    initialUrl: null,\n    previewUrl: null,\n    error: null,\n    allowOrigins: null,\n    previewSearchParam: input.previewSearchParam,\n    previewUrlSecret: null,\n    previewAccessSharingCreatePermission: null,\n    previewAccessSharingReadPermission: null,\n    previewAccessSharingUpdatePermission: null,\n    previewUrlSecretPermission: null,\n    previewMode: null,\n  }),\n\n  invoke: [\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'read', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingReadPermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'create', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingCreatePermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'update', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingUpdatePermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'create', document: previewUrlSecretDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewUrlSecretPermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n  ],\n\n  on: {\n    'set preview search param': {\n      actions: {\n        type: 'assign preview search param',\n        params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n      },\n    },\n  },\n\n  states: {\n    checkingPermissions: {\n      always: {\n        guard: 'has checked permissions',\n        target: 'resolvingInitialUrl',\n      },\n      tags: 'busy',\n    },\n\n    resolvingInitialUrl: {\n      invoke: {\n        src: 'resolve initial url',\n        input: ({context}) => ({previewSearchParam: context.previewSearchParam}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve initial url',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingAllowPatterns',\n          actions: assign({initialUrl: ({event}) => event.output}),\n        },\n      },\n\n      tags: 'busy',\n    },\n\n    error: {\n      type: 'final',\n      tags: 'error',\n    },\n\n    resolvingAllowPatterns: {\n      invoke: {\n        src: 'resolve allow patterns',\n        input: ({context}) => ({initialUrl: context.initialUrl!}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url allow patterns',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingUrlFromPreviewSearchParam',\n          actions: assign({allowOrigins: ({event}) => event.output}),\n        },\n      },\n      tags: ['busy'],\n    },\n\n    resolvingUrlFromPreviewSearchParam: {\n      id: 'loop',\n      invoke: {\n        src: 'resolve url from preview search param',\n        input: ({context}) => ({\n          initialUrl: context.initialUrl!,\n          allowOrigins: context.allowOrigins!,\n          previewSearchParam: context.previewSearchParam,\n        }),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url from search param',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingPreviewMode',\n          actions: assign({initialUrl: ({event}) => event.output}),\n        },\n      },\n      tags: ['busy'],\n    },\n\n    resolvingPreviewMode: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n      invoke: {\n        src: 'resolve preview mode',\n        input: ({context}) => ({targetOrigin: context.initialUrl!.origin}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url allow patterns',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: [\n          {\n            guard: {\n              type: 'has preview mode with created secret',\n              params: ({event}) => event.output,\n            },\n            actions: assign({\n              previewMode: ({event}) => event.output as unknown as PreviewUrlPreviewMode,\n            }),\n            target: 'previewMode.createPreviewSecret',\n          },\n          {\n            guard: {\n              type: 'has preview mode with share access',\n              params: ({event}) => event.output,\n            },\n            actions: assign({\n              previewMode: ({event}) => event.output as unknown as PreviewUrlPreviewMode,\n            }),\n            target: 'previewMode.readShareAccess',\n          },\n          {\n            guard: {\n              type: 'has preview mode without permissions',\n              params: ({event}) => event.output,\n            },\n            actions: [\n              assign({\n                previewUrl: ({context}) => context.initialUrl,\n              }),\n              'notify preview will likely fail',\n            ],\n            target: 'success',\n          },\n          {\n            actions: assign({\n              previewUrl: ({context}) => context.initialUrl,\n            }),\n            target: 'success',\n          },\n        ],\n      },\n      tags: ['busy'],\n    },\n\n    success: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n    },\n\n    previewMode: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n\n      states: {\n        createPreviewSecret: {\n          invoke: {\n            src: 'create preview secret',\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to create preview secret',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'resolvePreviewUrl',\n              actions: assign({previewUrlSecret: ({event}) => event.output}),\n            },\n          },\n          tags: ['busy'],\n        },\n        readShareAccess: {\n          invoke: {\n            src: 'read shared preview secret',\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to read shared preview secret',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'resolvePreviewUrl',\n              actions: assign({\n                previewUrlSecret: ({event}) => ({\n                  secret: event.output!,\n                  expiresAt: new Date(Date.now() + 1000 * 60 * 60 * 60 * 24),\n                }),\n              }),\n            },\n          },\n          tags: ['busy'],\n        },\n        resolvePreviewUrl: {\n          invoke: {\n            src: 'resolve preview mode url',\n            input: ({context}) => ({\n              initialUrl: context.initialUrl!,\n              resolvedPreviewMode: context.previewMode!,\n              previewUrlSecret: context.previewUrlSecret!.secret,\n            }),\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to resolve preview url',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'success',\n              actions: assign({previewUrl: ({event}) => event.output}),\n            },\n          },\n          tags: ['busy'],\n        },\n        error: {\n          type: 'final',\n          tags: ['error'],\n        },\n        success: {\n          after: {\n            expiredSecret: {\n              guard: 'can create preview secret',\n              actions: assign({previewUrlSecret: null}),\n              target: 'createPreviewSecret',\n              reenter: true,\n            },\n          },\n        },\n      },\n      initial: 'readShareAccess',\n    },\n  },\n\n  initial: 'checkingPermissions',\n})\nexport type PreviewUrlRef = ActorRefFrom<typeof previewUrlMachine>\n","import {useToast} from '@sanity/ui'\nimport {useActorRef, useSelector} from '@xstate/react'\nimport {useEffect} from 'react'\nimport {useActiveWorkspace, useClient, useCurrentUser, useGrantsStore, useTranslation} from 'sanity'\nimport {useRouter} from 'sanity/router'\nimport {fromObservable} from 'xstate'\n\nimport {defineCreatePreviewSecretActor} from './actors/create-preview-secret'\nimport {defineReadSharedSecretActor} from './actors/read-shared-secret'\nimport {defineResolveAllowPatternsActor} from './actors/resolve-allow-patterns'\nimport {defineResolveInitialUrlActor} from './actors/resolve-initial-url'\nimport {defineResolvePreviewModeActor} from './actors/resolve-preview-mode'\nimport {defineResolvePreviewModeUrlActor} from './actors/resolve-preview-mode-url'\nimport {API_VERSION} from './constants'\nimport {presentationLocaleNamespace} from './i18n'\nimport {previewUrlMachine, type PreviewUrlRef} from './machines/preview-url'\nimport {type PreviewUrlAllowOption, type PreviewUrlOption} from './types'\nimport {usePresentationPerspective} from './usePresentationPerspective'\n\nexport function usePreviewUrlActorRef(\n  previewUrlOption: PreviewUrlOption | undefined,\n  allowOption: PreviewUrlAllowOption | undefined,\n): PreviewUrlRef {\n  const grantsStore = useGrantsStore()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const currentUserId = currentUser?.id\n  const workspace = useActiveWorkspace()\n  const studioBasePath = workspace?.activeWorkspace?.basePath || '/'\n  const router = useRouter()\n  const routerSearchParams = new URLSearchParams(router.state._searchParams)\n  const previewSearchParam = routerSearchParams.get('preview')\n  const {push: pushToast} = useToast()\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const perspective = usePresentationPerspective()\n\n  const actorRef = useActorRef(\n    previewUrlMachine.provide({\n      actions: {\n        'notify preview will likely fail': () =>\n          pushToast({\n            id: 'preview-url-secret.missing-grants',\n            closable: true,\n            status: 'error',\n            duration: Infinity,\n            title: t('preview-url-secret.missing-grants'),\n          }),\n      },\n      actors: {\n        'create preview secret': defineCreatePreviewSecretActor({client, currentUserId}),\n        'read shared preview secret': defineReadSharedSecretActor({client}),\n        'resolve allow patterns': defineResolveAllowPatternsActor({\n          client,\n          allowOption,\n        }),\n        'resolve initial url': defineResolveInitialUrlActor({\n          client,\n          studioBasePath,\n          previewUrlOption,\n          perspective,\n        }),\n        'resolve preview mode': defineResolvePreviewModeActor({\n          client,\n          previewUrlOption,\n        }),\n        'resolve preview mode url': defineResolvePreviewModeUrlActor({\n          client,\n          studioBasePath,\n          previewUrlOption,\n          perspective,\n        }),\n        'check permission': fromObservable(({input}) =>\n          grantsStore.checkDocumentPermission(input.checkPermissionName, input.document),\n        ),\n      },\n    }),\n    {input: {previewSearchParam}},\n  )\n\n  /**\n   * Sync changes to router state for the preview search param\n   */\n  useEffect(() => {\n    actorRef.send({type: 'set preview search param', previewSearchParam})\n  }, [actorRef, previewSearchParam])\n\n  const error = useSelector(actorRef, (state) =>\n    state.status === 'error' ? state.error : state.hasTag('error') ? state.context.error : null,\n  )\n\n  // Propagate the error to the nearest error boundary\n  if (error) throw error\n\n  return actorRef\n}\n","import {useToast} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {useEffect} from 'react'\nimport {Translate, useTranslation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from './i18n'\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useReportInvalidPreviewSearchParam(previewUrlRef: PreviewUrlRef): void {\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const router = useRouter()\n  const routerSearchParams = new URLSearchParams(router.state._searchParams)\n  const previewSearchParam = routerSearchParams.get('preview')\n\n  const allowOrigins = useSelector(previewUrlRef, (state) => state.context.allowOrigins)\n  const currentOrigin = useSelector(previewUrlRef, (state) => state.context.previewUrl?.origin)\n  useEffect(() => {\n    if (!Array.isArray(allowOrigins) || !previewSearchParam || !currentOrigin) return\n    const nextOrigin = new URL(previewSearchParam, currentOrigin).origin\n    if (!allowOrigins.some((pattern) => pattern.test(nextOrigin))) {\n      pushToast({\n        closable: true,\n        id: `presentation-iframe-origin-mismatch-${nextOrigin}`,\n        status: 'error',\n        duration: Infinity,\n        title: t('preview-search-param.configuration.error.title'),\n        description: (\n          <Translate\n            t={t}\n            i18nKey=\"preview-search-param.configuration.error.description\"\n            components={{Code: 'code'}}\n            values={{\n              previewSearchParam,\n              blockedOrigin: nextOrigin,\n            }}\n          />\n        ),\n      })\n    }\n  }, [allowOrigins, currentOrigin, previewSearchParam, pushToast, t])\n}\n","import {subcribeToVercelProtectionBypass} from '@sanity/preview-url-secret/toggle-vercel-protection-bypass'\nimport {useEffect, useReducer, useState} from 'react'\nimport {useClient} from 'sanity'\n\nimport {API_VERSION} from './constants'\n\ntype VercelProtectionBypassReadyState = 'loading' | 'ready'\n\nexport function useVercelBypassSecret(): [\n  vercelProtectionBypassSecret: string | null,\n  vercelProtectionBypassReadyState: VercelProtectionBypassReadyState,\n] {\n  const client = useClient({apiVersion: API_VERSION})\n  const [vercelProtectionBypassReadyState, ready] = useReducer(\n    () => 'ready' as 'ready' | 'loading',\n    'loading',\n  )\n  const [vercelProtectionBypassSecret, setVercelProtectionBypassSecret] = useState<string | null>(\n    null,\n  )\n\n  useEffect(() => {\n    const unsubscribe = subcribeToVercelProtectionBypass(client, (secret) => {\n      setVercelProtectionBypassSecret(secret)\n      ready()\n    })\n    return () => unsubscribe()\n  }, [client])\n\n  return [vercelProtectionBypassSecret, vercelProtectionBypassReadyState]\n}\n","import {useSelector} from '@xstate/react'\nimport {type Tool} from 'sanity'\n\nimport {PresentationSpinner} from './PresentationSpinner'\nimport PresentationTool from './PresentationTool'\nimport {type PresentationPluginOptions} from './types'\nimport {usePreviewUrlActorRef} from './usePreviewUrlActorRef'\nimport {useReportInvalidPreviewSearchParam} from './useReportInvalidPreviewSearchParam'\nimport {useVercelBypassSecret} from './useVercelBypassSecret'\n\nexport default function PresentationToolGrantsCheck({\n  tool,\n}: {\n  tool: Tool<PresentationPluginOptions>\n}): React.JSX.Element {\n  const previewUrlRef = usePreviewUrlActorRef(tool.options?.previewUrl, tool.options?.allowOrigins)\n  useReportInvalidPreviewSearchParam(previewUrlRef)\n\n  const previewAccessSharingCreatePermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingCreatePermission,\n  )\n  const previewAccessSharingUpdatePermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingUpdatePermission,\n  )\n  const previewAccessSharingReadPermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingReadPermission,\n  )\n  const previewUrlSecretPermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewUrlSecretPermission,\n  )\n  const url = useSelector(previewUrlRef, (state) => state.context.previewUrl)\n  // @TODO the vercel protection bypass can be moved to the iframe level\n  const [vercelProtectionBypass, vercelProtectionBypassReadyState] = useVercelBypassSecret()\n\n  if (\n    !url ||\n    vercelProtectionBypassReadyState === 'loading' ||\n    !previewAccessSharingCreatePermission ||\n    typeof previewAccessSharingCreatePermission.granted === 'undefined' ||\n    !previewAccessSharingUpdatePermission ||\n    typeof previewAccessSharingUpdatePermission.granted === 'undefined' ||\n    !previewUrlSecretPermission ||\n    !previewAccessSharingReadPermission ||\n    typeof previewAccessSharingReadPermission.granted === 'undefined' ||\n    typeof previewUrlSecretPermission.granted === 'undefined'\n  ) {\n    return <PresentationSpinner />\n  }\n\n  return (\n    <PresentationTool\n      tool={tool}\n      initialPreviewUrl={url}\n      vercelProtectionBypass={vercelProtectionBypass}\n      canToggleSharePreviewAccess={\n        previewAccessSharingCreatePermission?.granted === true &&\n        previewAccessSharingUpdatePermission?.granted === true\n      }\n      canUseSharedPreviewAccess={previewAccessSharingReadPermission?.granted === true}\n      previewUrlRef={previewUrlRef}\n    />\n  )\n}\n"],"names":["PostMessageFeatures","props","$","_c","comlink","t0","t1","on","_temp","useEffect","memo","features","optimistic","presentationMachine","setup","types","actions","actors","guards","createMachine","id","context","url","error","visualEditingOverlaysEnabled","assign","target","states","description","tags","loading","loaded","event","enabled","idle","refreshing","reloading","initial","SharedStateProvider","children","Symbol","for","sharedState","useRef","t2","state","current","t3","key","value","post","setValue","t4","key_0","removeValue","t5","t6","Root","styled","div","Panel","defaultSize","minWidth","maxWidth","order","undefined","useContext","PresentationPanelsContext","Error","getPanelStyle","registerElement","unregisterElement","style","type","useLayoutEffect","debounce","fn","timeout","timer","args","clearTimeout","setTimeout","apply","itemKey","getStoredItem","JSON","parse","localStorage","getItem","setStoredItem","data","setItem","stringify","getKeyForPanels","panels","map","panel","join","usePanelsStorage","get","_temp2","set","_temp3","setDebounced","panels_0","widths","stored_0","stored","Array","isArray","some","val","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getNextWidths","delta","panelBefore","panelAfter","panelsState","initialDragState","prevWidths","initialWidths","nextWidths","pivotPanel","index","findIndex","width","abs","deltaApplied","deltaRemaining","toPrecision","localeCompare","numeric","length","getPanelWidth","getOffset","handleElement","initialOffset","initialHandleElementRect","pointerOffset","clientX","elementOffset","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","from","values","sort","a","b","validateWidths","widthsToValidate","total","reduce","remainingWidth","toFixed","getDefaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","PanelsWrapper","Panels","panelsEl","Map","setElements","useState","filter","setWidths","activeResizer","setActiveResizer","panelsRef","flexGrow","pointerEvents","id_0","prev","has","next","t7","id_1","prev_0","next_0","delete","t8","window","innerWidth","dragOffset","resizerIndex","resizerRect","startX","dragRef","t9","id_2","elementsArr","el","resizer","resizeElement","acc","el_0","i","acc_0","el_1","i_0","pageX","startDragging","t10","stopDragging","t11","id_3","event_0","preventDefault","stopPropagation","resizer_0","resizeElement_0","offset","rect","prevWidth","i_1","drag","t12","t13","storage","t14","t15","widths_0","storedWidths","validatedStoredWidths","defaultWidths","t16","t17","t18","t19","resizeObserver","ResizeObserver","prevWidths_0","nextWidths_0","prevWidth_0","i_2","observe","disconnect","t20","t21","t22","ErrorCard","message","onContinueAnyway","onRetry","restProps","t","useTranslation","presentationLocaleNamespace","retryButton","continueAnywayButton","Container","ChildLink","forwardRef","ref","childId","childParameters","childType","rest","searchParams","childPayload","Object","entries","_searchParams","ReferenceChildLink","documentId","documentType","parentRefPath","template","params","pathToString","encodeQueryString","parts","resolveQueryStringFromParams","nextParams","allowed","safeNextParams","includes","obj","BackLink","PresentationPaneRouterProvider","onEditReference","onStructureParams","structureParams","refs","routerState","resolvePathFromState","useRouter","fromEntries","routerSearchParams","useUnique","path","qs","createPathWithParams","childLinkProps","doc","find","r","_id","getPublishedId","_type","console","warn","backLinkProps","ref_0","childLinkProps_0","ref_1","options","version","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ParameterizedLink","closeCurrentAndAfter","handleEditReference","replaceCurrent","closeCurrent","_temp4","duplicateCurrent","_temp5","setView","_temp6","setParams","setPayload","_temp7","navigateIntent","_temp8","intentName","intentParams","options_0","viewId","pane_0","pane","RootLayout","PaneLayout","Flex","WrappedCode","Code","DocumentListPane","mainDocumentState","devMode","usePresentationTool","document","ids","schemaTypeName","title","errorParams","setErrorParams","handleRetry","StructureDocumentListPane","r_0","DocumentPane","onFocusPath","templateParams","decodeJsonParams","templateParameters","paneDocumentNode","studioPath","toString","handleFocusPath","height","StructureDocumentPane","DocumentPanel","StructureToolProvider","usePreviewState","schemaType","documentPreviewStore","useDocumentPreviewStore","preview","setPreview","perspectiveStack","usePerspective","subscription","getPreviewStateObservable","subscribe","unsubscribe","ContentEditor","schema","useSchema","props_0","MainDocumentLink","previewState","bb0","snapshot","getPreviewValueWithFallback","fallback","usePanelId","uuid","panelId","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","isDragging","nativeEvent","onMouseDown","e","onDrag","blur","onDragStop","resetDocumentStyles","bodyStyle","body","documentStyle","documentElement","cursor","userSelect","removeProperty","addEventListener","removeEventListener","PresentationContentWrapper","setDisplayedDocument","getCommentIntent","PresentationContent","documentsOnPage","PresentationNavigateProvider","navigate","_navigate","useLocalState","defaultValue","usePresentationNavigator","unstable_navigator","navigatorProvided","component","_navigatorEnabled","setNavigatorEnabled","navigatorEnabled","toggleNavigator","Component","NavigatorComponent","navigatorDisabled","Navigator","PresentationParamsProvider","PresentationProvider","name","useAllowPatterns","previewUrlRef","allowPatterns","useSelector","TypeError","allowOrigins","encodeStudioPerspective","studioPerspective","useId","useReactId","startsWith","replace","IFrame","forwardedRef","animate","onLoad","preventClick","src","variants","useImperativeHandle","instance","handleBlur","activeElement","dispatchEvent","MouseEvent","bubbles","cancelable","viewTransitionName","IFrameElement","motion","create","iframe","IFrameOverlay","Box","GlobalViewTransition","createGlobalStyle","OpenPreviewButton","openPopup","previewLocationOrigin","previewLocationRoute","perspective","targetOrigin","URL","urlSearchParamPreviewPerspective","pathname","search","openPreviewLink","currentTarget","href","handleOpenPopup","LaunchIcon","useTargetOrigin","previewUrl","origin","PreviewLocationInput","fontSize","onChange","padding","prefix","suffix","basePath","useActiveWorkspace","activeWorkspace","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","absoluteValue","pattern","test","reportValidity","nextValue","handleKeyDown","nextValue_0","handleClear","icon","ResetIcon","zIndex","QRCodeSVG","lazy","QrCodeLogoSize","QrCodeLogoPadding","QrSize","StyledSanityMonogram","SanityMonogram","MotionSpinner","Spinner","MotionText","Text","MotionMonogram","SharePreviewMenu","canToggleSharePreviewAccess","canUseSharedPreviewAccess","initialUrl","push","pushToast","useToast","client","useClient","apiVersion","API_VERSION","currentUser","useCurrentUser","setLoading","enabling","setEnabling","disabling","setDisabling","secret","setSecret","busy","useMemo","setSecretSearchParams","setError","handleUnableToToggle","useCallback","closable","status","handleDisableSharing","disablePreviewAccessSharing","location","handleEnableSharing","previewUrlSecret","enablePreviewAccessSharing","handleCopyUrl","navigator","clipboard","writeText","controller","AbortController","usedTags","fetchShareSecret","lastLiveEventId","signal","result","syncTags","fetch","fetchSharedAccessQuery","filterResponse","tag","aborted","live","events","abort","finally","ShareIcon","justifyContent","alignItems","gridTemplateColumns","gridTemplateRows","position","aspectRatio","display","opacity","textWrap","textAlign","CopyIcon","constrainSize","placement","portal","displayName","PreviewHeaderDefault","canSharePreviewAccess","iframeRef","onPathChange","onRefresh","overlaysConnection","presentationRef","setViewport","toggleOverlay","viewport","toggleViewportSize","send","handleRefresh","isLoading","isLoaded","isRefreshing","isReloading","overlaysEnabled","previewURL","withoutSecretSearchParams","perspectiveToggleTooltipId","previewUrlBusy","PanelLeftIcon","content","fallbackPlacements","whiteSpace","marginTop","marginBottom","lineHeight","borderRadius","margin","t23","t24","t25","t26","t27","t28","RefreshIcon","t29","t30","t31","t32","node","setProperty","t33","t34","t35","t36","t37","t38","MobileDeviceIcon","DesktopIcon","t39","t40","t41","t42","PreviewHeader","renderDefault","HeaderComponent","header","minHeight","matches","state_0","state_1","state_2","state_3","state_4","hasTag","MotionFlex","Preview","loadersConnection","vercelProtectionBypass","stablePerspective","setStablePerspective","urlPerspective","urlSearchParamVercelProtectionBypass","urlSearchParamVercelSetBypassCookie","prefersReducedMotion","usePrefersReducedMotion","previewHeader","timedOut","setTimedOut","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","onIFrameLoad","preventIframeInteraction","canUseViewTransition","useSyncExternalStore","CSS","supports","iframeAnimations","currentViewport","setCurrentViewport","iframeStyle","setIframeStyle","iframeVariants","update","startViewTransition","flushSync","toast","checkOrigin","setCheckOrigin","reportedMismatches","Set","reportMismatchingOrigin","useEffectEvent","reportedOrigin","allow","add","duration","Infinity","usePresentationNavigate","navigateEvent","nextUrl","hash","contentWindow","createController","addTarget","createChannel","heartbeat","connectTo","createConnectionMachine","provide","createCompatibilityActors","stop","start","destroy","interval","setInterval","postMessage","domain","clearInterval","spinnerVariants","inset","backdropFilter","WebkitBackdropFilter","WebkitTransition","sizes","errorVariants","background","desktop","mobile","exit","boxShadow","scale","active","defineWarnOnce","warned","warnOnceAboutCrossDatasetReference","useDocumentsOnPage","frameStateRef","validateApiPerspective","published","setPublished","previewDrafts","setPreviewDrafts","urlRef","perspective_0","documents","setCache","cache","isEqual","setDocumentsOnPage","keyedCache","uniqueDocuments","cache_0","forEach","sourceDocument","_projectId","fnOrObj","arg","Function","getQueryFromResult","resolver","resolve","getParamsFromResult","getRouteContext","route","routes","absolute","match","decode","decodeURIComponent","useMainDocument","navigationHistory","resolvers","relativeUrl","setMainDocumentState","mainDocumentIdRef","at","handleResponse","url_0","query","then","doc_0","catch","parseId","rawId","segments","split","shift","parsePath","rawPath","urlStringToPath","parseRouterState","pruneObject","exhaustiveTupleOf","array","maintainOnDocumentChange","maintainOnSameDocument","useParams","initialPreviewUrl","routerNavigate","inspect","rev","since","view","pathKey","instruction","comment","changesInspectorTab","routerStateRef","setNavigationHistory","isSameDocument","currentState","currentParams","nextState","nextRouterState","usePopups","popups","setPopups","source","open","unsubs","size","source_0","closed","source_1","source_2","POPUP_CHECK_INTERVAL","unsub","usePresentationPerspective","selectedPerspectiveName","selectedReleaseId","useStatus","statusMap","setStatusMap","handshaking","memoStatus","connection","hasConnected_0","hasConnected","status_1","setStatusFromEvent","status_0","LiveQueries","PostMessageDocuments","PostMessageRefreshMutations","PostMessagePerspective","PostMessagePreviewSnapshots","PostMessageSchema","PostMessageTelemetry","PresentationTool","tool","components","DEFAULT_TOOL_NAME","unstable_header","previewMode","shareAccess","option","hostname","setController","visualEditingComlink","setVisualEditingComlink","useActorRef","projectId","useProjectId","dataset","useDataset","mainDocuments","setOverlaysConnection","setLoadersConnection","previewKitConnection","setPreviewKitConnection","handleNavigate","urlWithoutSearch","URLSearchParams","refreshRef","onStatus","handlePreviewPath","nextPath","handleStructureParams","frameOrigin","previewOrigin","newUrl","displayedDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey","boundaryElement","setBoundaryElement","PresentationNavigator","livePreviewEnabled","workspace","useWorkspace","COMMENTS_INSPECTOR_NAME","mode","EDIT_INTENT_MODE","IS_MAC","platform","MODIFIERS","alt","ctrl","mod","keys","every","toUpperCase","defineCreatePreviewSecretActor","currentUserId","fromPromise","createPreviewSecret","defineReadSharedSecretActor","defineResolveAllowPatternsActor","allowOption","input","URLPattern","maybePatterns","urlPatterns","urlPattern","defineResolveInitialUrlActor","studioBasePath","previewUrlOption","studioPreviewPerspective","previewSearchParam","defineResolvePreviewModeActor","draftMode","enable","defineResolvePreviewModeUrlActor","resolvedPreviewMode","urlSearchParamPreviewSecret","urlSearchParamPreviewPathname","resolveUrlFromPreviewSearchParamActor","previewSearchParamUrl","shareAccessSingletonDocument","schemaIdSingleton","schemaTypeSingleton","previewUrlSecretDocument","previewUrlMachine","log","_","cause","fromObservable","throwError","Promise","reject","has checked permissions","Boolean","previewAccessSharingCreatePermission","previewAccessSharingReadPermission","previewAccessSharingUpdatePermission","previewUrlSecretPermission","search param has new origin","can create preview secret","granted","has preview mode with created secret","has preview mode with share access","has preview mode without permissions","delays","expiredSecret","expiresAt","now","Date","getTime","invoke","checkPermissionName","onError","onSnapshot","checkingPermissions","always","guard","resolvingInitialUrl","onDone","output","resolvingAllowPatterns","resolvingUrlFromPreviewSearchParam","resolvingPreviewMode","reenter","success","readShareAccess","resolvePreviewUrl","after","usePreviewUrlActorRef","grantsStore","useGrantsStore","router","checkDocumentPermission","actorRef","useReportInvalidPreviewSearchParam","currentOrigin","nextOrigin","blockedOrigin","useVercelBypassSecret","vercelProtectionBypassReadyState","ready","useReducer","vercelProtectionBypassSecret","setVercelProtectionBypassSecret","subcribeToVercelProtectionBypass","PresentationToolGrantsCheck"],"mappings":"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","debugId":null}}]
}